import{b as h,f as u,i as n,l as y,n as M,u as P,v as k,w as B,y as x}from"./chunk-vcgsr6b8.js";import{L as m,N as w}from"./chunk-j8mvg3qg.js";import{bitgetWallet as K}from"@swapkit/wallet-bitget";import{coinbaseWallet as V}from"@swapkit/wallet-coinbase";import{ctrlWallet as I}from"@swapkit/wallet-ctrl";var S=async({chain:t,covalentApiKey:l,ethplorerApiKey:i,provider:e})=>{let{getToolboxByChain:W}=await import("./chunk-8f9re6t7.js"),a=B({chain:t,covalentApiKey:l,ethplorerApiKey:i}),o=await e.getSigner(),r=W(t)({...a,provider:e,signer:o});if(t!==h.Ethereum){if((await e.getNetwork()).chainId.toString()!==n[t])try{await k(e,n[t],r.getNetworkParams())}catch(E){throw new Error(`Failed to add/switch ${t} network: ${t}`)}}return P({toolbox:{...r},chainId:n[t],provider:e})};function N({addChain:t,config:{covalentApiKey:l,ethplorerApiKey:i,thorswapApiKey:e}}){return async function W(a,o=y.METAMASK,r,O){console.log("line-527"),M({apiKey:e});let E=x(a,u,o),{getProvider:T}=await import("./chunk-8f9re6t7.js");console.log("line-536");let{BrowserProvider:C}=await import("./chunk-pfq11npy.js");console.log("line-538");let s=new C(r),d=await s.getSigner(),c=await d.getAddress();console.log("line-43",d,c);let b=E.map(async(p)=>{let g=await S({chain:p,ethplorerApiKey:i,covalentApiKey:l,provider:s}),f=async(v=!0)=>g.getBalance(c,v,T(p));console.log("line-559",f),t({...g,disconnect:()=>s.send("wallet_revokePermissions",[{eth_accounts:{}}]),chain:p,address:c,getBalance:f,balance:[],walletType:o})});return await Promise.all(b),!0}}var A={connectEVMWallet:N};import{keepkeyWallet as _}from"@swapkit/wallet-keepkey";import{keepkeyBexWallet as L}from"@swapkit/wallet-keepkey-bex";import{keplrWallet as R}from"@swapkit/wallet-keplr";import{keystoreWallet as H}from"@swapkit/wallet-keystore";import{ledgerWallet as $}from"@swapkit/wallet-ledger";import{okxWallet as F}from"@swapkit/wallet-okx";import{phantomWallet as U}from"@swapkit/wallet-phantom";import{polkadotWallet as X}from"@swapkit/wallet-polkadotjs";import{radixWallet as q}from"@swapkit/wallet-radix";import{talismanWallet as z}from"@swapkit/wallet-talisman";import{trezorWallet as j}from"@swapkit/wallet-trezor";import{walletconnectWallet as D}from"@swapkit/wallet-wc";var Et={...K,...V,...A,...L,..._,...R,...H,...$,...F,...U,...X,...q,...z,...j,...D,...I};export{Et as wallets};

//# debugId=3417A08726411B9264756E2164756E21
