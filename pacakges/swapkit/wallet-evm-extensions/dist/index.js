import{a as w,c as E}from"./chunk-nm00d52v.js";import{Chain as M,ChainToHexChainId as a,EVMChains as x,WalletOption as b,ensureEVMApiKeys as P,filterSupportedChains as v,prepareNetworkSwitch as A,setRequestClientConfig as S,switchEVMWalletNetwork as B}from"@swapkit/helpers";var V=async({ethereumWindowProvider:e,chain:t,covalentApiKey:s,ethplorerApiKey:o,provider:r})=>{if(!e)throw new Error("Requested web3 wallet is not installed");let{getToolboxByChain:l}=await import("@swapkit/toolbox-evm"),n=P({chain:t,covalentApiKey:s,ethplorerApiKey:o}),i=await r.getSigner(),c=l(t)({...n,provider:r,signer:i});if(t!==M.Ethereum){if((await r.getNetwork()).chainId.toString()!==a[t])try{await B(r,a[t],c.getNetworkParams())}catch(u){throw new Error(`Failed to add/switch ${t} network: ${t}`)}}return A({toolbox:{...c},chainId:a[t],provider:r})},f=async({chain:e,covalentApiKey:t,ethplorerApiKey:s,provider:o})=>{let{getToolboxByChain:r}=await import("@swapkit/toolbox-evm"),l=P({chain:e,covalentApiKey:t,ethplorerApiKey:s}),n=await o.getSigner(),i=r(e)({...l,provider:o,signer:n});if(e!==M.Ethereum){if((await o.getNetwork()).chainId.toString()!==a[e])try{await B(o,a[e],i.getNetworkParams())}catch(d){throw new Error(`Failed to add/switch ${e} network: ${e}`)}}return A({toolbox:{...i},chainId:a[e],provider:o})};function k({addChain:e,config:{covalentApiKey:t,ethplorerApiKey:s,thorswapApiKey:o}}){return async function r(l,n=b.METAMASK,i,c){console.log("line-527"),S({apiKey:o});let d=v(l,x,n),{getProvider:u}=await import("@swapkit/toolbox-evm");console.log("line-536");let{BrowserProvider:O}=await import("./chunk-v272tv9w.js");console.log("line-538");let p=new O(i),h=await p.getSigner(),W=await h.getAddress();console.log("line-43",h,W);let T=d.map(async(g)=>{let m=await f({chain:g,ethplorerApiKey:s,covalentApiKey:t,provider:p}),y=async(C=!0)=>m.getBalance(W,C,u(g));console.log("line-559",y),e({...m,disconnect:()=>p.send("wallet_revokePermissions",[{eth_accounts:{}}]),chain:g,address:W,getBalance:y,balance:[],walletType:n})});return await Promise.all(T),!0}}var I={connectEVMWallet:k};export{V as getWeb3WalletMethods,f as getWalletMethods,I as evmWallet};

//# debugId=9263763CA62004AE64756E2164756E21
