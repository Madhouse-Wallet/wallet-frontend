{
  "version": 3,
  "sources": ["../../../../node_modules/@swapkit/wallet-trezor/dist/chunk-d73yxs6y.js"],
  "sourcesContent": [
    "import{a as M,c as Q}from\"./chunk-nm00d52v.js\";import{ChainToChainId as G,SwapKitError as B,SwapKitNumber as h,WalletOption as F,derivationPathToString as $}from\"@swapkit/helpers\";async function l({chain:W,derivationPath:k,provider:N}){let{AbstractSigner:f,Signature:_}=await import(\"./chunk-7r0bsnk5.js\");class Y extends f{address;chain;derivationPath;provider;constructor({chain:j,derivationPath:q,provider:D}){super(D);this.address=\"\",this.chain=j,this.derivationPath=q,this.provider=D}getAddress=async()=>{if(!this.address){let{default:j}=await import(\"@trezor/connect-web\"),q=await j.ethereumGetAddress({path:$(this.derivationPath),showOnTrezor:!0});if(!q.success)throw new B({errorKey:\"wallet_trezor_failed_to_get_address\",info:{...q,chain:this.chain,derivationPath:this.derivationPath}});this.address=q.payload.address}return this.address};signMessage=async(j)=>{let{default:q}=await import(\"@trezor/connect-web\"),D=await q.ethereumSignMessage({path:$(this.derivationPath),message:j});if(!D.success)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...D,message:j,chain:this.chain,derivationPath:this.derivationPath}});return D.payload.signature};signTypedData(){throw new Error(\"Not implemented\")}signTransaction=async({to:j,gasLimit:q,value:D,data:H,nonce:I,maxFeePerGas:U,maxPriorityFeePerGas:V,gasPrice:X})=>{if(!j)throw new B({errorKey:\"wallet_missing_params\",info:{to:j}});if(!q)throw new B({errorKey:\"wallet_missing_params\",info:{gasLimit:q}});let R=U&&V;if(R&&!U)throw new B({errorKey:\"wallet_missing_params\",info:{maxFeePerGas:U}});if(R&&!V)throw new B({errorKey:\"wallet_missing_params\",info:{maxPriorityFeePerGas:V}});if(!(R||X))throw new B({errorKey:\"wallet_missing_params\",info:{gasPrice:X}});let{default:L}=await import(\"@trezor/connect-web\"),{toHexString:J}=await import(\"@swapkit/toolbox-evm\"),{Transaction:b}=await import(\"./chunk-7r0bsnk5.js\"),C=R?{maxFeePerGas:J(BigInt(U?.toString()||0)),maxPriorityFeePerGas:J(BigInt(V?.toString()||0))}:X&&{gasPrice:J(BigInt(X?.toString()||0))}||{gasPrice:\"0x0\"},K=J(BigInt(I||await this.provider.getTransactionCount(await this.getAddress(),\"pending\"))),Z={chainId:Number.parseInt(G[this.chain]),to:j.toString(),value:J(BigInt(D?.toString()||0)),gasLimit:J(BigInt(q?.toString()||0)),nonce:K,data:H?.toString()||\"0x\",...C},{success:u,payload:A}=await L.ethereumSignTransaction({path:$(this.derivationPath),transaction:Z});if(!u)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...A,chain:this.chain,derivationPath:this.derivationPath}});let{r:z,s:y,v:w}=A,E=_.from({r:z,s:y,v:new h(BigInt(w)).getBaseValue(\"number\")}),O=b.from({...Z,nonce:Number.parseInt(Z.nonce,16),type:R?2:0,signature:E}).serialized;if(!O)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{chain:this.chain,derivationPath:this.derivationPath}});return O};connect=(j)=>{if(!j)throw new B({errorKey:\"wallet_provider_not_found\",info:{wallet:F.TREZOR,chain:this.chain,derivationPath:this.derivationPath}});return new Y({chain:this.chain,derivationPath:this.derivationPath,provider:j})}}return new Y({chain:W,derivationPath:k,provider:N})}export{l as getEVMSigner};\n\n//# debugId=D0E141C3555726B364756E2164756E21\n"
  ],
  "mappings": "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",
  "debugId": "42FCAA472BE9DCE664756E2164756E21",
  "names": []
}