{
  "version": 3,
  "sources": ["../../../../node_modules/aes-js/index.js", "../../../../node_modules/scrypt-js/scrypt.js", "../../../../node_modules/@ethersproject/providers/node_modules/bech32/index.js", "../../../../node_modules/@ethersproject/abstract-provider/lib.esm/_version.js", "../../../../node_modules/@ethersproject/abstract-provider/lib.esm/index.js", "../../../../node_modules/@ethersproject/abstract-signer/lib.esm/_version.js", "../../../../node_modules/@ethersproject/abstract-signer/lib.esm/index.js", "../../../../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js", "../../../../node_modules/@ethersproject/signing-key/lib.esm/_version.js", "../../../../node_modules/@ethersproject/signing-key/lib.esm/index.js", "../../../../node_modules/@ethersproject/transactions/lib.esm/_version.js", "../../../../node_modules/@ethersproject/transactions/lib.esm/index.js", "../../../../node_modules/@ethersproject/contracts/lib.esm/_version.js", "../../../../node_modules/@ethersproject/contracts/lib.esm/index.js", "../../../../node_modules/@ethersproject/basex/lib.esm/index.js", "../../../../node_modules/@ethersproject/sha2/lib.esm/sha2.js", "../../../../node_modules/@ethersproject/sha2/lib.esm/types.js", "../../../../node_modules/@ethersproject/sha2/lib.esm/_version.js", "../../../../node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js", "../../../../node_modules/@ethersproject/wordlists/lib.esm/_version.js", "../../../../node_modules/@ethersproject/wordlists/lib.esm/wordlist.js", "../../../../node_modules/@ethersproject/wordlists/lib.esm/lang-en.js", "../../../../node_modules/@ethersproject/wordlists/lib.esm/wordlists.js", "../../../../node_modules/@ethersproject/hdnode/lib.esm/_version.js", "../../../../node_modules/@ethersproject/hdnode/lib.esm/index.js", "../../../../node_modules/@ethersproject/random/lib.esm/_version.js", "../../../../node_modules/@ethersproject/random/lib.esm/random.js", "../../../../node_modules/@ethersproject/random/lib.esm/shuffle.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/_version.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/utils.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/inspect.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/keystore.js", "../../../../node_modules/@ethersproject/json-wallets/lib.esm/index.js", "../../../../node_modules/@ethersproject/wallet/lib.esm/_version.js", "../../../../node_modules/@ethersproject/wallet/lib.esm/index.js", "../../../../node_modules/@ethersproject/networks/lib.esm/_version.js", "../../../../node_modules/@ethersproject/networks/lib.esm/index.js", "../../../../node_modules/@ethersproject/web/lib.esm/_version.js", "../../../../node_modules/@ethersproject/web/lib.esm/geturl.js", "../../../../node_modules/@ethersproject/web/lib.esm/index.js", "../../../../node_modules/@ethersproject/providers/lib.esm/base-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/_version.js", "../../../../node_modules/@ethersproject/providers/lib.esm/formatter.js", "../../../../node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/ws.js", "../../../../node_modules/@ethersproject/providers/lib.esm/websocket-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/ankr-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/fallback-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/ipc-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/infura-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/pocket-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/web3-provider.js", "../../../../node_modules/@ethersproject/providers/lib.esm/index.js", "../../../../node_modules/@ethersproject/solidity/lib.esm/_version.js", "../../../../node_modules/@ethersproject/solidity/lib.esm/index.js", "../../../../node_modules/@ethersproject/units/lib.esm/_version.js", "../../../../node_modules/@ethersproject/units/lib.esm/index.js", "../../../../node_modules/ethers/lib.esm/_version.js", "../../../../node_modules/ethers/lib.esm/ethers.js", "../../../../node_modules/ethers/lib.esm/index.js"],
  "sourcesContent": [
    "\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n",
    "\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n",
    "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n",
    "export const version = \"abstract-provider/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                lastBaseFeePerGas = block.baseFeePerGas;\n                maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"abstract-signer/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map",
    "import BN from 'bn.js';\nimport hash from 'hash.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n});\n\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar utils = exports;\n\n\n\n\nutils.assert = minimalisticAssert;\nutils.toArray = utils_1.toArray;\nutils.zero2 = utils_1.zero2;\nutils.toHex = utils_1.toHex;\nutils.encode = utils_1.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n});\n\n'use strict';\n\n\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert$1(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert$1(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n});\n\n'use strict';\n\n\n\n\n\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curve = exports;\n\ncurve.base = base;\ncurve.short = short_1;\ncurve.mont = /*RicMoo:ethers:require(./mont)*/(null);\ncurve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);\n});\n\nvar curves_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar curves = exports;\n\n\n\n\n\nvar assert = utils_1$1.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve_1.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve_1.edwards(options);\n  else\n    this.curve = new curve_1.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n});\n\n'use strict';\n\n\n\n\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n\n  minimalisticAssert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\n\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\n\n\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\n\n\n\n\nvar rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nvar assert$5 = utils_1$1.assert;\n\n\n\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),\n      'Unknown curve ' + options);\n\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null)\n    return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = /*RicMoo:ethers*/{ version: \"6.5.4\" }.version;\nelliptic.utils = utils_1$1;\nelliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });\nelliptic.curve = curve_1;\nelliptic.curves = curves_1;\n\n// Protocols\nelliptic.ec = ec;\nelliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);\n});\n\nvar EC$1 = elliptic_1.ec;\n\nexport { EC$1 as EC };\n//# sourceMappingURL=elliptic.js.map\n",
    "export const version = \"signing-key/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { EC } from \"./elliptic\";\nimport { arrayify, hexDataLength, hexlify, hexZeroPad, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nlet _curve = null;\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\nexport class SigningKey {\n    constructor(privateKey) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n    _addPoint(other) {\n        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 = getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n    signDigest(digest) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        });\n    }\n    computeSharedSecret(otherKey) {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n    static isSigningKey(value) {\n        return !!(value && value._isSigningKey);\n    }\n}\nexport function recoverPublicKey(digest, signature) {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\nexport function computePublicKey(key, compressed) {\n    const bytes = arrayify(key);\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n    }\n    else if (bytes.length === 33) {\n        if (compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n    }\n    else if (bytes.length === 65) {\n        if (!compressed) {\n            return hexlify(bytes);\n        }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"transactions/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport var TransactionTypes;\n(function (TransactionTypes) {\n    TransactionTypes[TransactionTypes[\"legacy\"] = 0] = \"legacy\";\n    TransactionTypes[TransactionTypes[\"eip2930\"] = 1] = \"eip2930\";\n    TransactionTypes[TransactionTypes[\"eip1559\"] = 2] = \"eip1559\";\n})(TransactionTypes || (TransactionTypes = {}));\n;\n///////////////////////////////\nfunction handleAddress(value) {\n    if (value === \"0x\") {\n        return null;\n    }\n    return getAddress(value);\n}\nfunction handleNumber(value) {\n    if (value === \"0x\") {\n        return Zero;\n    }\n    return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\", maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\", length: 20 },\n    { name: \"value\", maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, type: true, value: true\n};\nexport function computeAddress(key) {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _serializeEip1559(transaction, signature) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x02\", RLP.encode(fields)]);\n}\nfunction _serializeEip2930(transaction, signature) {\n    const fields = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to) : \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n    return hexConcat([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n    checkProperties(transaction, allowedTransactionKeys);\n    const raw = [];\n    transactionFields.forEach(function (fieldInfo) {\n        let value = transaction[fieldInfo.name] || ([]);\n        const options = {};\n        if (fieldInfo.numeric) {\n            options.hexPad = \"left\";\n        }\n        value = arrayify(hexlify(value, options));\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n            }\n        }\n        raw.push(hexlify(value));\n    });\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n        if (typeof (chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n    }\n    else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam;\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n            logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    }\n    else if (sig.v !== v) {\n        logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n    return RLP.encode(raw);\n}\nexport function serialize(transaction, signature) {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\nfunction _parseEipSignature(tx, fields, serialize) {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) {\n            throw new Error(\"bad recid\");\n        }\n        tx.v = recid;\n    }\n    catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    }\n    catch (error) { }\n}\nfunction _parseEip1559(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx = {\n        type: 2,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        maxFeePerGas: maxFeePerGas,\n        gasPrice: null,\n        gasLimit: handleNumber(transaction[4]),\n        to: handleAddress(transaction[5]),\n        value: handleNumber(transaction[6]),\n        data: transaction[7],\n        accessList: accessListify(transaction[8]),\n    };\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n    return tx;\n}\nfunction _parseEip2930(payload) {\n    const transaction = RLP.decode(payload.slice(1));\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n    const tx = {\n        type: 1,\n        chainId: handleNumber(transaction[0]).toNumber(),\n        nonce: handleNumber(transaction[1]).toNumber(),\n        gasPrice: handleNumber(transaction[2]),\n        gasLimit: handleNumber(transaction[3]),\n        to: handleAddress(transaction[4]),\n        value: handleNumber(transaction[5]),\n        data: transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) {\n        return tx;\n    }\n    tx.hash = keccak256(payload);\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n    return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n    const transaction = RLP.decode(rawTransaction);\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n    const tx = {\n        nonce: handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to: handleAddress(transaction[3]),\n        value: handleNumber(transaction[4]),\n        data: transaction[5],\n        chainId: 0\n    };\n    // Legacy unsigned transaction\n    if (transaction.length === 6) {\n        return tx;\n    }\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n    }\n    catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n    }\n    else {\n        // Signed Transaction\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) {\n            tx.chainId = 0;\n        }\n        let recoveryParam = tx.v - 27;\n        const raw = transaction.slice(0, 6);\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        }\n        catch (error) { }\n        tx.hash = keccak256(rawTransaction);\n    }\n    tx.type = null;\n    return tx;\n}\nexport function parse(rawTransaction) {\n    const payload = arrayify(rawTransaction);\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) {\n        return _parse(payload);\n    }\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n    return logger.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"contracts/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        if (ro.ccipReadEnabled) {\n            tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        delete overrides.ccipReadEnabled;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map",
    "/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map",
    "export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map",
    "export const version = \"sha2/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map",
    "export const version = \"wordlists/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map",
    "\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map",
    "\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map",
    "export const version = \"hdnode/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"random/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map",
    "\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map",
    "\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map",
    "export const version = \"json-wallets/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map",
    "\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map",
    "\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map",
    "export const version = \"wallet/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"networks/5.7.1\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\"];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [\"ropsten\"];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"web/5.7.1\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        if (options.fetchOptions != null) {\n            const opts = options.fetchOptions;\n            if (opts.mode) {\n                request.mode = (opts.mode);\n            }\n            if (opts.cache) {\n                request.cache = (opts.cache);\n            }\n            if (opts.credentials) {\n                request.credentials = (opts.credentials);\n            }\n            if (opts.redirect) {\n                request.redirect = (opts.redirect);\n            }\n            if (opts.referrer) {\n                request.referrer = opts.referrer;\n            }\n        }\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\nfunction unpercent(value) {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const errorPassThrough = ((typeof (connection) === \"object\") ? !!(connection.errorPassThrough) : false);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\") },\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]) : unpercent(dataMatch[3]))\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\nconst MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result, start) {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\nfunction numPad(value) {\n    const result = arrayify(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return hexConcat(result);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    supportsWildcard() {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n        return this._supportsEip2544;\n    }\n    _fetch(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                ccipReadEnabled: true,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            // Wildcard support; use EIP-2544 to resolve the request\n            let parseBytes = false;\n            if (yield this.supportsWildcard()) {\n                parseBytes = true;\n                // selector(\"resolve(bytes,bytes)\")\n                tx.data = hexConcat([\"0x9061b923\", encodeBytes([dnsEncode(this.name), tx.data])]);\n            }\n            try {\n                let result = yield this.provider.call(tx);\n                if ((arrayify(result).length % 32) === 4) {\n                    logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                        transaction: tx, data: result\n                    });\n                }\n                if (parseBytes) {\n                    result = _parseBytes(result, 0);\n                }\n                return result;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._fetch(selector, parameters);\n            if (result != null) {\n                return _parseBytes(result, 0);\n            }\n            return null;\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const result = yield this._fetch(\"0x3b3b57de\");\n                    // No address\n                    if (result === \"0x\" || result === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(result);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [{ type: \"name\", content: this.name }];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    const scheme = match[1].toLowerCase();\n                    switch (scheme) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: getIpfsLink(avatar) };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: scheme, content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (scheme === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (scheme === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx), 0);\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (scheme === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                                linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                            }\n                            // Transform IPFS metadata links\n                            if (metadataUrl.match(/^ipfs:/i)) {\n                                metadataUrl = getIpfsLink(metadataUrl);\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            if (!metadata) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            // Pull the image URL out\n                            let imageUrl = metadata.image;\n                            if (typeof (imageUrl) !== \"string\") {\n                                return null;\n                            }\n                            if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                                // Allow\n                            }\n                            else {\n                                // Transform IPFS link to gateway\n                                const ipfs = imageUrl.match(matcherIpfs);\n                                if (ipfs == null) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                                imageUrl = getIpfsLink(imageUrl);\n                            }\n                            linkage.push({ type: \"url\", content: imageUrl });\n                            return { linkage, url: imageUrl };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // IPNS (CID: 1, Type: libp2p-key)\n            const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipns) {\n                const length = parseInt(ipns[3], 16);\n                if (ipns[4].length === length * 2) {\n                    return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n            if (skynet) {\n                if (skynet[1].length === (34 * 2)) {\n                    // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                    const urlSafe = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                    const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                    return \"sia:/\\/\" + hash;\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.disableCcipRead = false;\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    ccipReadFetch(tx, calldata, urls) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.disableCcipRead || urls.length === 0) {\n                return null;\n            }\n            const sender = tx.to.toLowerCase();\n            const data = calldata.toLowerCase();\n            const errorMessages = [];\n            for (let i = 0; i < urls.length; i++) {\n                const url = urls[i];\n                // URL expansion\n                const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                // If no {data} is present, use POST; otherwise GET\n                const json = (url.indexOf(\"{data}\") >= 0) ? null : JSON.stringify({ data, sender });\n                const result = yield fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                    value.status = response.statusCode;\n                    return value;\n                });\n                if (result.data) {\n                    return result.data;\n                }\n                const errorMessage = (result.message || \"unknown error\");\n                // 4xx indicates the result is not present; stop\n                if (result.status >= 400 && result.status < 500) {\n                    return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n                }\n                // 5xx indicates server issue; try the next url\n                errorMessages.push(errorMessage);\n            }\n            return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, Logger.errors.SERVER_ERROR, {\n                urls, errorMessages\n            });\n        });\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        // We only allow a single getLogs to be in-flight at a time\n                        if (!event._inflight) {\n                            event._inflight = true;\n                            // This is the first filter for this event, so we want to\n                            // restrict events to events that happened no earlier than now\n                            if (event._lastBlockNumber === -2) {\n                                event._lastBlockNumber = blockNumber - 1;\n                            }\n                            // Filter from the last *known* event; due to load-balancing\n                            // and some nodes returning updated block numbers before\n                            // indexing events, a logs result with 0 entries cannot be\n                            // trusted and we must retry a range which includes it again\n                            const filter = event.filter;\n                            filter.fromBlock = event._lastBlockNumber + 1;\n                            filter.toBlock = blockNumber;\n                            // Prevent fitler ranges from growing too wild, since it is quite\n                            // likely there just haven't been any events to move the lastBlockNumber.\n                            const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                            if (minFromBlock > filter.fromBlock) {\n                                filter.fromBlock = minFromBlock;\n                            }\n                            if (filter.fromBlock < 0) {\n                                filter.fromBlock = 0;\n                            }\n                            const runner = this.getLogs(filter).then((logs) => {\n                                // Allow the next getLogs\n                                event._inflight = false;\n                                if (logs.length === 0) {\n                                    return;\n                                }\n                                logs.forEach((log) => {\n                                    // Only when we get an event for a given block number\n                                    // can we trust the events are indexed\n                                    if (log.blockNumber > event._lastBlockNumber) {\n                                        event._lastBlockNumber = log.blockNumber;\n                                    }\n                                    // Make sure we stall requests to fetch blocks and txs\n                                    this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                    this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                    this.emit(filter, log);\n                                });\n                            }).catch((error) => {\n                                this.emit(\"error\", error);\n                                // Allow another getLogs (the range was not updated)\n                                event._inflight = false;\n                            });\n                            runners.push(runner);\n                        }\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    _call(transaction, blockTag, attempt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (attempt >= MAX_CCIP_REDIRECTS) {\n                logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                    redirects: attempt, transaction\n                });\n            }\n            const txSender = transaction.to;\n            const result = yield this.perform(\"call\", { transaction, blockTag });\n            // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n            if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n                try {\n                    const data = hexDataSlice(result, 4);\n                    // Check the sender of the OffchainLookup matches the transaction\n                    const sender = hexDataSlice(data, 0, 32);\n                    if (!BigNumber.from(sender).eq(txSender)) {\n                        logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    // Read the URLs from the response\n                    const urls = [];\n                    const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                    const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                    const urlsData = hexDataSlice(data, urlsOffset + 32);\n                    for (let u = 0; u < urlsLength; u++) {\n                        const url = _parseString(urlsData, u * 32);\n                        if (url == null) {\n                            logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction, data: result\n                            });\n                        }\n                        urls.push(url);\n                    }\n                    // Get the CCIP calldata to forward\n                    const calldata = _parseBytes(data, 64);\n                    // Get the callbackSelector (bytes4)\n                    if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                        logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const callbackSelector = hexDataSlice(data, 96, 100);\n                    // Get the extra data to send back to the contract as context\n                    const extraData = _parseBytes(data, 128);\n                    const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);\n                    if (ccipResult == null) {\n                        logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const tx = {\n                        to: txSender,\n                        data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])\n                    };\n                    return this._call(tx, blockTag, attempt + 1);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.SERVER_ERROR) {\n                        throw error;\n                    }\n                }\n            }\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params: { transaction, blockTag }, result, error\n                });\n            }\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const resolved = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag),\n                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n            });\n            return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let currentName = name;\n            while (true) {\n                if (currentName === \"\" || currentName === \".\") {\n                    return null;\n                }\n                // Optimization since the eth node cannot change and does\n                // not have a wildcard resolver\n                if (name !== \"eth\" && currentName === \"eth\") {\n                    return null;\n                }\n                // Check the current node for a resolver\n                const addr = yield this._getResolver(currentName, \"getResolver\");\n                // Found a resolver!\n                if (addr != null) {\n                    const resolver = new Resolver(this, addr, name);\n                    // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                    if (currentName !== name && !(yield resolver.supportsWildcard())) {\n                        return null;\n                    }\n                    return resolver;\n                }\n                // Get the parent node\n                currentName = currentName.split(\".\").slice(1).join(\".\");\n            }\n        });\n    }\n    _getResolver(name, operation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (operation == null) {\n                operation = \"ENS\";\n            }\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });\n            }\n            try {\n                // keccak256(\"resolver(bytes32)\")\n                const addrData = yield this.call({\n                    to: network.ensAddress,\n                    data: (\"0x0178b8bf\" + namehash(name).substring(2))\n                });\n                return this.formatter.callAddress(addrData);\n            }\n            catch (error) {\n                // ENS registry cannot throw errors on resolver(bytes32)\n            }\n            return null;\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resolver\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddr = yield this._getResolver(node, \"lookupAddress\");\n            if (resolverAddr == null) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            const name = _parseString(yield this.call({\n                to: resolverAddr,\n                data: (\"0x691f3431\" + namehash(node).substring(2))\n            }), 0);\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(node, \"getAvatar\");\n                if (!resolverAddress) {\n                    return null;\n                }\n                // Try resolving the avatar against the addr.reverse resolver\n                resolver = new Resolver(this, resolverAddress, node);\n                try {\n                    const avatar = yield resolver.getAvatar();\n                    if (avatar) {\n                        return avatar.url;\n                    }\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                }\n                // Try getting the name and performing forward lookup; allowing wildcards\n                try {\n                    // keccak(\"name(bytes32)\")\n                    const name = _parseString(yield this.call({\n                        to: resolverAddress,\n                        data: (\"0x691f3431\" + namehash(node).substring(2))\n                    }), 0);\n                    resolver = yield this.getResolver(name);\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                    return null;\n                }\n            }\n            else {\n                // ENS name; forward lookup with wildcard\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map",
    "export const version = \"providers/5.7.2\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n            case \"finalized\":\n                return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value, requireData) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data : null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction checkError(method, error, params) {\n    const transaction = params.transaction || params.signedTransaction;\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) {\n            return result.data;\n        }\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) {\n            result = spelunk(error, false);\n        }\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n    // @TODO: Should we spelunk for message too?\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof (error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            try {\n                return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n            }\n            catch (error) {\n                if (typeof (error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                        action: \"signMessage\",\n                        from: address,\n                        messageData: message\n                    });\n                }\n                throw error;\n            }\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            try {\n                // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n                return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n            }\n            catch (error) {\n                if (typeof (error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                        action: \"_legacySignMessage\",\n                        from: address,\n                        messageData: message\n                    });\n                }\n                throw error;\n            }\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            try {\n                return yield this.provider.send(\"eth_signTypedData_v4\", [\n                    address.toLowerCase(),\n                    JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n                ]);\n            }\n            catch (error) {\n                if (typeof (error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                        action: \"_signTypedData\",\n                        from: address,\n                        messageData: { domain: populated.domain, types, value: populated.value }\n                    });\n                }\n                throw error;\n            }\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-1559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(BigNumber.from(transaction[key]));\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map",
    "\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        if (typeof (url) === \"string\") {\n            super(url, network);\n        }\n        else {\n            super(\"_websocket\", network);\n        }\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        }\n        else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n        this.websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket() { return this._websocket; }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this.websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this.websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this.websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this.websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this.websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map",
    "\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map",
    "import { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n}\n//# sourceMappingURL=ankr-provider.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || typeof (result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey == null);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map",
    "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                if (method === \"call\" && params.blockTag) {\n                    return provider[method](params.transaction, params.blockTag);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map",
    "\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map",
    "\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map",
    "import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map",
    "/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map",
    "\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport class PocketProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n        }\n        else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n        }\n        else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        const connection = { headers: {}, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map",
    "\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map",
    "\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\":\n                case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, AnkrProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map",
    "export const version = \"solidity/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"units/5.7.0\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map",
    "export const version = \"ethers/5.7.2\";\n//# sourceMappingURL=_version.js.map",
    "\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map",
    "\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map"
  ],
  "mappings": "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GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAI,EACngngD,EAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,EAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAU,EACpgp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",
  "debugId": "79682CA4D247F1AF64756E2164756E21",
  "names": []
}