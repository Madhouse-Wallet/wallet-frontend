{
  "version": 3,
  "sources": ["../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/networks.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/bip66.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/ops.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/push_data.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/script_number.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/types.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/script_signature.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/script.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/lazy.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/embed.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2ms.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2pk.js", "../../../../node_modules/@noble/hashes/sha1.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/crypto.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/node_modules/base-x/src/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/node_modules/bs58/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/node_modules/bs58check/base.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/node_modules/bs58check/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2pkh.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2sh.js", "../../../../node_modules/bech32/dist/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2wsh.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/ecc_lib.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/bufferutils.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/bip341.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/p2tr.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/payments/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/address.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/merkle.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/transaction.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/block.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/psbt/psbtutils.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/psbt/bip371.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/psbt.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bitcoinjs-lib/src/index.js", "../../../../node_modules/coininfo/lib/coins/bch.js", "../../../../node_modules/coininfo/lib/coins/blk.js", "../../../../node_modules/coininfo/lib/coins/btc.js", "../../../../node_modules/coininfo/lib/coins/btg.js", "../../../../node_modules/coininfo/lib/coins/cbn.js", "../../../../node_modules/coininfo/lib/coins/city.js", "../../../../node_modules/coininfo/lib/coins/dash.js", "../../../../node_modules/coininfo/lib/coins/dnr.js", "../../../../node_modules/coininfo/lib/coins/dcr.js", "../../../../node_modules/coininfo/lib/coins/dgb.js", "../../../../node_modules/coininfo/lib/coins/doge.js", "../../../../node_modules/coininfo/lib/coins/grs.js", "../../../../node_modules/coininfo/lib/coins/ltc.js", "../../../../node_modules/coininfo/lib/coins/via.js", "../../../../node_modules/coininfo/lib/coins/mona.js", "../../../../node_modules/coininfo/lib/coins/nbt.js", "../../../../node_modules/coininfo/lib/coins/nmc.js", "../../../../node_modules/coininfo/lib/coins/ppc.js", "../../../../node_modules/coininfo/lib/coins/qtum.js", "../../../../node_modules/coininfo/lib/coins/rvn.js", "../../../../node_modules/coininfo/lib/coins/rdd.js", "../../../../node_modules/coininfo/lib/coins/vtc.js", "../../../../node_modules/coininfo/lib/coins/x42.js", "../../../../node_modules/coininfo/lib/coins/zec.js", "../../../../node_modules/coininfo/lib/coininfo.js", "../../../../node_modules/@noble/secp256k1/lib/index.js", "../../../../node_modules/@psf/pushdata-bitcoin/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/types.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/script_number.js", "../../../../node_modules/@psf/bitcoincash-ops/map.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/script.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/multisig/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/multisig/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/multisig/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/nulldata.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkey/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkey/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkey/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkeyhash/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkeyhash/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/pubkeyhash/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnesspubkeyhash/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnessscripthash/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/scripthash/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/scripthash/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/scripthash/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnesspubkeyhash/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnesspubkeyhash/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnessscripthash/input.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnessscripthash/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnesscommitment/output.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/witnesscommitment/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/templates/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/bufferutils.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/crypto.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/transaction.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/block.js", "../../../../node_modules/@psf/bitcoincashjs-lib/node_modules/bech32/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/networks.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/address.js", "../../../../node_modules/bigi/lib/bigi.js", "node:assert", "../../../../node_modules/bigi/lib/convert.js", "../../../../node_modules/bigi/lib/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/ecsignature.js", "../../../../node_modules/ecurve/lib/point.js", "../../../../node_modules/ecurve/lib/curve.js", "../../../../node_modules/ecurve/lib/names.js", "../../../../node_modules/ecurve/lib/index.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/rfc6979.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/ecdsa.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/schnorr.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/ecpair.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/hdnode.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/transaction_builder.js", "../../../../node_modules/@psf/bitcoincashjs-lib/src/index.js", "../../../../node_modules/ecpair/src/networks.js", "../../../../node_modules/ecpair/src/types.js", "../../../../node_modules/ecpair/src/testecc.js", "../../../../node_modules/ecpair/src/ecpair.js", "../../../../node_modules/ecpair/src/index.js", "../../../../node_modules/cashaddrjs/src/validation.js", "../../../../node_modules/cashaddrjs/src/base32.js", "../../../../node_modules/cashaddrjs/node_modules/big-integer/BigInteger.js", "../../../../node_modules/cashaddrjs/src/convertBits.js", "../../../../node_modules/cashaddrjs/src/cashaddr.js", "../../../../node_modules/@swapkit/toolbox-utxo/dist/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/@bitcoinerlab/secp256k1/dist/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/base-x/src/esm/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bs58/src/esm/index.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bs58check/src/esm/base.js", "../../../../node_modules/@swapkit/toolbox-utxo/node_modules/bs58check/src/esm/index.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/_assert.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/crypto.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/utils.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/hmac.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/_md.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/ripemd160.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/sha256.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/_u64.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/hashes/esm/sha512.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/abstract/utils.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/abstract/modular.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/abstract/curve.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/abstract/weierstrass.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/_shortw_utils.js", "../../../../node_modules/@scure/bip32/node_modules/@noble/curves/esm/secp256k1.js", "../../../../node_modules/@scure/bip32/node_modules/@scure/base/lib/esm/index.js", "../../../../node_modules/@scure/bip32/lib/esm/index.js"],
  "sourcesContent": [
    "'use strict';\n// https://en.bitcoin.it/wiki/List_of_address_prefixes\n// Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.testnet = exports.regtest = exports.bitcoin = void 0;\n/**\n * Represents the Bitcoin network configuration.\n */\nexports.bitcoin = {\n  /**\n   * The message prefix used for signing Bitcoin messages.\n   */\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  /**\n   * The Bech32 prefix used for Bitcoin addresses.\n   */\n  bech32: 'bc',\n  /**\n   * The BIP32 key prefixes for Bitcoin.\n   */\n  bip32: {\n    /**\n     * The public key prefix for BIP32 extended public keys.\n     */\n    public: 0x0488b21e,\n    /**\n     * The private key prefix for BIP32 extended private keys.\n     */\n    private: 0x0488ade4,\n  },\n  /**\n   * The prefix for Bitcoin public key hashes.\n   */\n  pubKeyHash: 0x00,\n  /**\n   * The prefix for Bitcoin script hashes.\n   */\n  scriptHash: 0x05,\n  /**\n   * The prefix for Bitcoin Wallet Import Format (WIF) private keys.\n   */\n  wif: 0x80,\n};\n/**\n * Represents the regtest network configuration.\n */\nexports.regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n/**\n * Represents the testnet network configuration.\n */\nexports.testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n",
    "'use strict';\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = exports.check = void 0;\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\nexports.check = check;\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\nexports.decode = decode;\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = Buffer.allocUnsafe(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\nexports.encode = encode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.REVERSE_OPS = exports.OPS = void 0;\nconst OPS = {\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_NOP3: 178,\n  OP_CHECKSEQUENCEVERIFY: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  OP_CHECKSIGADD: 186,\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255,\n};\nexports.OPS = OPS;\nconst REVERSE_OPS = {};\nexports.REVERSE_OPS = REVERSE_OPS;\nfor (const op of Object.keys(OPS)) {\n  const code = OPS[op];\n  REVERSE_OPS[code] = op;\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.decode = exports.encode = exports.encodingLength = void 0;\nconst ops_1 = require('./ops');\n/**\n * Calculates the encoding length of a number used for push data in Bitcoin transactions.\n * @param i The number to calculate the encoding length for.\n * @returns The encoding length of the number.\n */\nfunction encodingLength(i) {\n  return i < ops_1.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nexports.encodingLength = encodingLength;\n/**\n * Encodes a number into a buffer using a variable-length encoding scheme.\n * The encoded buffer is written starting at the specified offset.\n * Returns the size of the encoded buffer.\n *\n * @param buffer - The buffer to write the encoded data into.\n * @param num - The number to encode.\n * @param offset - The offset at which to start writing the encoded buffer.\n * @returns The size of the encoded buffer.\n */\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(num, offset);\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(num, offset + 1);\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(num, offset + 1);\n    // 32 bit\n  } else {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(num, offset + 1);\n  }\n  return size;\n}\nexports.encode = encode;\n/**\n * Decodes a buffer and returns information about the opcode, number, and size.\n * @param buffer - The buffer to decode.\n * @param offset - The offset within the buffer to start decoding.\n * @returns An object containing the opcode, number, and size, or null if decoding fails.\n */\nfunction decode(buffer, offset) {\n  const opcode = buffer.readUInt8(offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = buffer.readUInt8(offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = buffer.readUInt16LE(offset + 1);\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== ops_1.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\nexports.decode = decode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\n/**\n * Decodes a script number from a buffer.\n *\n * @param buffer - The buffer containing the script number.\n * @param maxLength - The maximum length of the script number. Defaults to 4.\n * @param minimal - Whether the script number should be minimal. Defaults to true.\n * @returns The decoded script number.\n * @throws {TypeError} If the script number overflows the maximum length.\n * @throws {Error} If the script number is not minimally encoded when minimal is true.\n */\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0);\n    const b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nexports.decode = decode;\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n    ? 4\n    : i > 0x7fff\n    ? 3\n    : i > 0x7f\n    ? 2\n    : i > 0x00\n    ? 1\n    : 0;\n}\n/**\n * Encodes a number into a Buffer using a specific format.\n *\n * @param _number - The number to encode.\n * @returns The encoded number as a Buffer.\n */\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = Buffer.allocUnsafe(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nexports.encode = encode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.oneOf =\n  exports.Null =\n  exports.BufferN =\n  exports.Function =\n  exports.UInt32 =\n  exports.UInt8 =\n  exports.tuple =\n  exports.maybe =\n  exports.Hex =\n  exports.Buffer =\n  exports.String =\n  exports.Boolean =\n  exports.Array =\n  exports.Number =\n  exports.Hash256bit =\n  exports.Hash160bit =\n  exports.Buffer256bit =\n  exports.isTaptree =\n  exports.isTapleaf =\n  exports.TAPLEAF_VERSION_MASK =\n  exports.Satoshi =\n  exports.isPoint =\n  exports.stacksEqual =\n  exports.typeforce =\n    void 0;\nconst buffer_1 = require('buffer');\nexports.typeforce = require('typeforce');\nconst ZERO32 = buffer_1.Buffer.alloc(32, 0);\nconst EC_P = buffer_1.Buffer.from(\n  'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',\n  'hex',\n);\n/**\n * Checks if two arrays of Buffers are equal.\n * @param a - The first array of Buffers.\n * @param b - The second array of Buffers.\n * @returns True if the arrays are equal, false otherwise.\n */\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\nexports.stacksEqual = stacksEqual;\n/**\n * Checks if the given value is a valid elliptic curve point.\n * @param p - The value to check.\n * @returns True if the value is a valid elliptic curve point, false otherwise.\n */\nfunction isPoint(p) {\n  if (!buffer_1.Buffer.isBuffer(p)) return false;\n  if (p.length < 33) return false;\n  const t = p[0];\n  const x = p.slice(1, 33);\n  if (x.compare(ZERO32) === 0) return false;\n  if (x.compare(EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    return true;\n  }\n  const y = p.slice(33);\n  if (y.compare(ZERO32) === 0) return false;\n  if (y.compare(EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\nexports.isPoint = isPoint;\nconst SATOSHI_MAX = 21 * 1e14;\nfunction Satoshi(value) {\n  return exports.typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\nexports.Satoshi = Satoshi;\nexports.TAPLEAF_VERSION_MASK = 0xfe;\nfunction isTapleaf(o) {\n  if (!o || !('output' in o)) return false;\n  if (!buffer_1.Buffer.isBuffer(o.output)) return false;\n  if (o.version !== undefined)\n    return (o.version & exports.TAPLEAF_VERSION_MASK) === o.version;\n  return true;\n}\nexports.isTapleaf = isTapleaf;\nfunction isTaptree(scriptTree) {\n  if (!(0, exports.Array)(scriptTree)) return isTapleaf(scriptTree);\n  if (scriptTree.length !== 2) return false;\n  return scriptTree.every(t => isTaptree(t));\n}\nexports.isTaptree = isTaptree;\nexports.Buffer256bit = exports.typeforce.BufferN(32);\nexports.Hash160bit = exports.typeforce.BufferN(20);\nexports.Hash256bit = exports.typeforce.BufferN(32);\nexports.Number = exports.typeforce.Number;\nexports.Array = exports.typeforce.Array;\nexports.Boolean = exports.typeforce.Boolean;\nexports.String = exports.typeforce.String;\nexports.Buffer = exports.typeforce.Buffer;\nexports.Hex = exports.typeforce.Hex;\nexports.maybe = exports.typeforce.maybe;\nexports.tuple = exports.typeforce.tuple;\nexports.UInt8 = exports.typeforce.UInt8;\nexports.UInt32 = exports.typeforce.UInt32;\nexports.Function = exports.typeforce.Function;\nexports.BufferN = exports.typeforce.BufferN;\nexports.Null = exports.typeforce.Null;\nexports.oneOf = exports.typeforce.oneOf;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nconst bip66 = require('./bip66');\nconst script_1 = require('./script');\nconst types = require('./types');\nconst { typeforce } = types;\nconst ZERO = Buffer.alloc(1, 0);\n/**\n * Converts a buffer to a DER-encoded buffer.\n * @param x - The buffer to be converted.\n * @returns The DER-encoded buffer.\n */\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n  return x;\n}\n/**\n * Converts a DER-encoded signature to a buffer.\n * If the first byte of the input buffer is 0x00, it is skipped.\n * The resulting buffer is 32 bytes long, filled with zeros if necessary.\n * @param x - The DER-encoded signature.\n * @returns The converted buffer.\n */\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = Buffer.alloc(32, 0);\n  const bstart = Math.max(0, 32 - x.length);\n  x.copy(buffer, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\n/**\n * Decodes a buffer into a ScriptSignature object.\n * @param buffer - The buffer to decode.\n * @returns The decoded ScriptSignature object.\n * @throws Error if the hashType is invalid.\n */\nfunction decode(buffer) {\n  const hashType = buffer.readUInt8(buffer.length - 1);\n  if (!(0, script_1.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const decoded = bip66.decode(buffer.slice(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = Buffer.concat([r, s], 64);\n  return { signature, hashType };\n}\nexports.decode = decode;\n/**\n * Encodes a signature and hash type into a buffer.\n * @param signature - The signature to encode.\n * @param hashType - The hash type to encode.\n * @returns The encoded buffer.\n * @throws Error if the hashType is invalid.\n */\nfunction encode(signature, hashType) {\n  typeforce(\n    {\n      signature: types.BufferN(64),\n      hashType: types.UInt8,\n    },\n    { signature, hashType },\n  );\n  if (!(0, script_1.isDefinedHashType)(hashType)) {\n    throw new Error('Invalid hashType ' + hashType);\n  }\n  const hashTypeBuffer = Buffer.allocUnsafe(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return Buffer.concat([bip66.encode(r, s), hashTypeBuffer]);\n}\nexports.encode = encode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signature =\n  exports.number =\n  exports.isCanonicalScriptSignature =\n  exports.isDefinedHashType =\n  exports.isCanonicalPubKey =\n  exports.toStack =\n  exports.fromASM =\n  exports.toASM =\n  exports.decompile =\n  exports.compile =\n  exports.countNonPushOnlyOPs =\n  exports.isPushOnly =\n  exports.OPS =\n    void 0;\n/**\n * Script tools, including decompile, compile, toASM, fromASM, toStack, isCanonicalPubKey, isCanonicalScriptSignature\n * @packageDocumentation\n */\nconst bip66 = require('./bip66');\nconst ops_1 = require('./ops');\nObject.defineProperty(exports, 'OPS', {\n  enumerable: true,\n  get: function () {\n    return ops_1.OPS;\n  },\n});\nconst pushdata = require('./push_data');\nconst scriptNumber = require('./script_number');\nconst scriptSignature = require('./script_signature');\nconst types = require('./types');\nconst { typeforce } = types;\nconst OP_INT_BASE = ops_1.OPS.OP_RESERVED; // OP_1 - 1\nfunction isOPInt(value) {\n  return (\n    types.Number(value) &&\n    (value === ops_1.OPS.OP_0 ||\n      (value >= ops_1.OPS.OP_1 && value <= ops_1.OPS.OP_16) ||\n      value === ops_1.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\nexports.isPushOnly = isPushOnly;\nfunction countNonPushOnlyOPs(value) {\n  return value.length - value.filter(isPushOnlyChunk).length;\n}\nexports.countNonPushOnlyOPs = countNonPushOnlyOPs;\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return ops_1.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return ops_1.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction chunksIsArray(buf) {\n  return types.Array(buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\n/**\n * Compiles an array of chunks into a Buffer.\n *\n * @param chunks - The array of chunks to compile.\n * @returns The compiled Buffer.\n * @throws Error if the compilation fails.\n */\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  typeforce(types.Array, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = Buffer.allocUnsafe(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nexports.compile = compile;\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  typeforce(types.Buffer, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > ops_1.OPS.OP_0 && opcode <= ops_1.OPS.OP_PUSHDATA4) {\n      const d = pushdata.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\nexports.decompile = decompile;\n/**\n * Converts the given chunks into an ASM (Assembly) string representation.\n * If the chunks parameter is a Buffer, it will be decompiled into a Stack before conversion.\n * @param chunks - The chunks to convert into ASM.\n * @returns The ASM string representation of the chunks.\n */\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  if (!chunks) {\n    throw new Error('Could not convert invalid chunks to ASM');\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString('hex');\n        chunk = op;\n      }\n      // opcode!\n      return ops_1.REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\nexports.toASM = toASM;\n/**\n * Converts an ASM string to a Buffer.\n * @param asm The ASM string to convert.\n * @returns The converted Buffer.\n */\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (ops_1.OPS[chunkStr] !== undefined) return ops_1.OPS[chunkStr];\n      typeforce(types.Hex, chunkStr);\n      // data!\n      return Buffer.from(chunkStr, 'hex');\n    }),\n  );\n}\nexports.fromASM = fromASM;\n/**\n * Converts the given chunks into a stack of buffers.\n *\n * @param chunks - The chunks to convert.\n * @returns The stack of buffers.\n */\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === ops_1.OPS.OP_0) return Buffer.allocUnsafe(0);\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\nexports.toStack = toStack;\nfunction isCanonicalPubKey(buffer) {\n  return types.isPoint(buffer);\n}\nexports.isCanonicalPubKey = isCanonicalPubKey;\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nexports.isDefinedHashType = isDefinedHashType;\nfunction isCanonicalScriptSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return bip66.check(buffer.slice(0, -1));\n}\nexports.isCanonicalScriptSignature = isCanonicalScriptSignature;\nexports.number = scriptNumber;\nexports.signature = scriptSignature;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.value = exports.prop = void 0;\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nexports.prop = prop;\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\nexports.value = value;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2data = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\n// output: OP_RETURN ...\n/**\n * Embeds data in a Bitcoin payment.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The modified payment object.\n * @throws {TypeError} If there is not enough data or if the output is invalid.\n */\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      data: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'embed', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.data) return;\n    return bscript.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  lazy.prop(o, 'data', () => {\n    if (!a.output) return;\n    return bscript.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(types_1.typeforce.Buffer))\n        throw new TypeError('Output is invalid');\n      if (a.data && !(0, types_1.stacksEqual)(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2data = p2data;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2ms = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\n/**\n * Represents a function that creates a Pay-to-Multisig (P2MS) payment object.\n * @param a - The payment object.\n * @param opts - Optional payment options.\n * @returns The created payment object.\n * @throws {TypeError} If the provided data is not valid.\n */\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      m: types_1.typeforce.maybe(types_1.typeforce.Number),\n      n: types_1.typeforce.maybe(types_1.typeforce.Number),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkeys: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.isPoint),\n      ),\n      signatures: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(isAcceptableSignature),\n      ),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!types_1.typeforce.Number(chunks[0]))\n        throw new TypeError('Output is invalid');\n      if (!types_1.typeforce.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0, types_1.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !(0, types_1.stacksEqual)(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !(0, types_1.stacksEqual)(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pk = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\n/**\n * Creates a pay-to-public-key (P2PK) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PK payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pk', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0, types_1.isPoint)(o.pubkey))\n        throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey))\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input))\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pk = p2pk;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha1 = exports.SHA1 = void 0;\nconst _md_js_1 = require(\"./_md.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA1 (RFC 3174). It was cryptographically broken: prefer newer algorithms.\n// Initial state\nconst SHA1_IV = /* @__PURE__ */ new Uint32Array([\n    0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\nclass SHA1 extends _md_js_1.HashMD {\n    constructor() {\n        super(64, 20, 8, false);\n        this.A = SHA1_IV[0] | 0;\n        this.B = SHA1_IV[1] | 0;\n        this.C = SHA1_IV[2] | 0;\n        this.D = SHA1_IV[3] | 0;\n        this.E = SHA1_IV[4] | 0;\n    }\n    get() {\n        const { A, B, C, D, E } = this;\n        return [A, B, C, D, E];\n    }\n    set(A, B, C, D, E) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA1_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 80; i++)\n            SHA1_W[i] = (0, utils_js_1.rotl)(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n        // Compression function main loop, 80 rounds\n        let { A, B, C, D, E } = this;\n        for (let i = 0; i < 80; i++) {\n            let F, K;\n            if (i < 20) {\n                F = (0, _md_js_1.Chi)(B, C, D);\n                K = 0x5a827999;\n            }\n            else if (i < 40) {\n                F = B ^ C ^ D;\n                K = 0x6ed9eba1;\n            }\n            else if (i < 60) {\n                F = (0, _md_js_1.Maj)(B, C, D);\n                K = 0x8f1bbcdc;\n            }\n            else {\n                F = B ^ C ^ D;\n                K = 0xca62c1d6;\n            }\n            const T = ((0, utils_js_1.rotl)(A, 5) + F + E + K + SHA1_W[i]) | 0;\n            E = D;\n            D = C;\n            C = (0, utils_js_1.rotl)(B, 30);\n            B = A;\n            A = T;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        this.set(A, B, C, D, E);\n    }\n    roundClean() {\n        SHA1_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\nexports.SHA1 = SHA1;\n/**\n * SHA1 (RFC 3174) hash function.\n * It was cryptographically broken: prefer newer algorithms.\n * @param message - data that would be hashed\n */\nexports.sha1 = (0, utils_js_1.wrapConstructor)(() => new SHA1());\n//# sourceMappingURL=sha1.js.map",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.taggedHash =\n  exports.TAGGED_HASH_PREFIXES =\n  exports.TAGS =\n  exports.hash256 =\n  exports.hash160 =\n  exports.sha256 =\n  exports.sha1 =\n  exports.ripemd160 =\n    void 0;\n/**\n * A module for hashing functions.\n * include ripemd160、sha1、sha256、hash160、hash256、taggedHash\n *\n * @packageDocumentation\n */\nconst ripemd160_1 = require('@noble/hashes/ripemd160');\nconst sha1_1 = require('@noble/hashes/sha1');\nconst sha256_1 = require('@noble/hashes/sha256');\nfunction ripemd160(buffer) {\n  return Buffer.from((0, ripemd160_1.ripemd160)(Uint8Array.from(buffer)));\n}\nexports.ripemd160 = ripemd160;\nfunction sha1(buffer) {\n  return Buffer.from((0, sha1_1.sha1)(Uint8Array.from(buffer)));\n}\nexports.sha1 = sha1;\nfunction sha256(buffer) {\n  return Buffer.from((0, sha256_1.sha256)(Uint8Array.from(buffer)));\n}\nexports.sha256 = sha256;\nfunction hash160(buffer) {\n  return Buffer.from(\n    (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(Uint8Array.from(buffer))),\n  );\n}\nexports.hash160 = hash160;\nfunction hash256(buffer) {\n  return Buffer.from(\n    (0, sha256_1.sha256)((0, sha256_1.sha256)(Uint8Array.from(buffer))),\n  );\n}\nexports.hash256 = hash256;\nexports.TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\n/**\n * Defines the tagged hash prefixes used in the crypto module.\n */\nexports.TAGGED_HASH_PREFIXES = {\n  'BIP0340/challenge': Buffer.from([\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n    123, 181, 45, 122, 159, 239, 88, 50, 62, 177, 191, 122, 64, 125, 179, 130,\n    210, 243, 242, 216, 27, 177, 34, 79, 73, 254, 81, 143, 109, 72, 211, 124,\n  ]),\n  'BIP0340/aux': Buffer.from([\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n    241, 239, 78, 94, 192, 99, 202, 218, 109, 148, 202, 250, 157, 152, 126, 160,\n    105, 38, 88, 57, 236, 193, 31, 151, 45, 119, 165, 46, 216, 193, 204, 144,\n  ]),\n  'BIP0340/nonce': Buffer.from([\n    7, 73, 119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244,\n    52, 215, 62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47, 7, 73,\n    119, 52, 167, 155, 203, 53, 91, 155, 140, 125, 3, 79, 18, 28, 244, 52, 215,\n    62, 247, 45, 218, 25, 135, 0, 97, 251, 82, 191, 235, 47,\n  ]),\n  TapLeaf: Buffer.from([\n    174, 234, 143, 220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211,\n    95, 28, 181, 64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238, 174, 234, 143,\n    220, 66, 8, 152, 49, 5, 115, 75, 88, 8, 29, 30, 38, 56, 211, 95, 28, 181,\n    64, 8, 212, 211, 87, 202, 3, 190, 120, 233, 238,\n  ]),\n  TapBranch: Buffer.from([\n    25, 65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247,\n    33, 111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21, 25,\n    65, 161, 242, 229, 110, 185, 95, 162, 169, 241, 148, 190, 92, 1, 247, 33,\n    111, 51, 237, 130, 176, 145, 70, 52, 144, 208, 91, 245, 22, 160, 21,\n  ]),\n  TapSighash: Buffer.from([\n    244, 10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61,\n    149, 253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49, 244,\n    10, 72, 223, 75, 42, 112, 200, 180, 146, 75, 242, 101, 70, 97, 237, 61, 149,\n    253, 102, 163, 19, 235, 135, 35, 117, 151, 198, 40, 228, 160, 49,\n  ]),\n  TapTweak: Buffer.from([\n    232, 15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66,\n    156, 188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233, 232,\n    15, 225, 99, 156, 156, 160, 80, 227, 175, 27, 57, 193, 67, 198, 62, 66, 156,\n    188, 235, 21, 217, 64, 251, 181, 197, 161, 244, 175, 87, 197, 233,\n  ]),\n  'KeyAgg list': Buffer.from([\n    72, 28, 151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126,\n    215, 49, 156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240, 72, 28,\n    151, 28, 60, 11, 70, 215, 240, 178, 117, 174, 89, 141, 78, 44, 126, 215, 49,\n    156, 89, 74, 92, 110, 199, 158, 160, 212, 153, 2, 148, 240,\n  ]),\n  'KeyAgg coefficient': Buffer.from([\n    191, 201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100,\n    130, 78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129, 191,\n    201, 4, 3, 77, 28, 136, 232, 200, 14, 34, 229, 61, 36, 86, 109, 100, 130,\n    78, 214, 66, 114, 129, 192, 145, 0, 249, 77, 205, 82, 201, 129,\n  ]),\n};\nfunction taggedHash(prefix, data) {\n  return sha256(Buffer.concat([exports.TAGGED_HASH_PREFIXES[prefix], data]));\n}\nexports.taggedHash = taggedHash;\n",
    "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n",
    "const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n",
    "'use strict'\n\nvar base58 = require('bs58')\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var payloadU8 = Uint8Array.from(payload)\n    var checksum = checksumFn(payloadU8)\n    var length = payloadU8.length + 4\n    var both = new Uint8Array(length)\n    both.set(payloadU8, 0)\n    both.set(checksum.subarray(0, 4), payloadU8.length)\n    return base58.encode(both, length)\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n",
    "'use strict'\n\nvar { sha256 } = require('@noble/hashes/sha256')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\n/**\n * Creates a Pay-to-Public-Key-Hash (P2PKH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2PKH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2sh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\n/**\n * Creates a Pay-to-Script-Hash (P2SH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2SH payment object.\n * @throws {TypeError} If the required data is not provided or if the data is invalid.\n */\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(23)),\n      redeem: types_1.typeforce.maybe({\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = Buffer.from(bs58check.decode(a.address));\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Buffer.from([]) : lastChunk,\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        if (redeem.output.byteLength > 520)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 520 bytes',\n          );\n        if (bscript.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !(0, types_1.stacksEqual)(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n",
    "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wpkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\n/**\n * Creates a pay-to-witness-public-key-hash (p2wpkh) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The p2wpkh payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(22)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0, types_1.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0, types_1.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wsh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    Buffer.isBuffer(chunk) &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0, types_1.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\n/**\n * Creates a Pay-to-Witness-Script-Hash (P2WSH) payment object.\n *\n * @param a - The payment object containing the necessary data.\n * @param opts - Optional payment options.\n * @returns The P2WSH payment object.\n * @throws {TypeError} If the required data is missing or invalid.\n */\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      redeem: types_1.typeforce.maybe({\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const _rchunks = lazy.value(() => {\n    return bscript.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty/valid?\n      if (a.redeem.output) {\n        const decompile = bscript.decompile(a.redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output is invalid');\n        if (a.redeem.output.byteLength > 3600)\n          throw new TypeError(\n            'Redeem.output unspendable if larger than 3600 bytes',\n          );\n        if (bscript.countNonPushOnlyOPs(decompile) > 201)\n          throw new TypeError(\n            'Redeem.output unspendable with more than 201 non-push ops',\n          );\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !(0, types_1.stacksEqual)(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (bscript.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(wScript))\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (bscript.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wsh = p2wsh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.getEccLib = exports.initEccLib = void 0;\nconst _ECCLIB_CACHE = {};\n/**\n * Initializes the ECC library with the provided instance.\n * If `eccLib` is `undefined`, the library will be cleared.\n * If `eccLib` is a new instance, it will be verified before setting it as the active library.\n *\n * @param eccLib The instance of the ECC library to initialize.\n */\nfunction initEccLib(eccLib) {\n  if (!eccLib) {\n    // allow clearing the library\n    _ECCLIB_CACHE.eccLib = eccLib;\n  } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n    // new instance, verify it\n    verifyEcc(eccLib);\n    _ECCLIB_CACHE.eccLib = eccLib;\n  }\n}\nexports.initEccLib = initEccLib;\n/**\n * Retrieves the ECC Library instance.\n * Throws an error if the ECC Library is not provided.\n * You must call initEccLib() with a valid TinySecp256k1Interface instance before calling this function.\n * @returns The ECC Library instance.\n * @throws Error if the ECC Library is not provided.\n */\nfunction getEccLib() {\n  if (!_ECCLIB_CACHE.eccLib)\n    throw new Error(\n      'No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance',\n    );\n  return _ECCLIB_CACHE.eccLib;\n}\nexports.getEccLib = getEccLib;\nconst h = hex => Buffer.from(hex, 'hex');\n/**\n * Verifies the ECC functionality.\n *\n * @param ecc - The TinySecp256k1Interface object.\n */\nfunction verifyEcc(ecc) {\n  assert(typeof ecc.isXOnlyPoint === 'function');\n  assert(\n    ecc.isXOnlyPoint(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000001'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000000'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    ),\n  );\n  assert(typeof ecc.xOnlyPointAddTweak === 'function');\n  tweakAddVectors.forEach(t => {\n    const r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n    if (t.result === null) {\n      assert(r === null);\n    } else {\n      assert(r !== null);\n      assert(r.parity === t.parity);\n      assert(Buffer.from(r.xOnlyPubkey).equals(h(t.result)));\n    }\n  });\n}\nfunction assert(bool) {\n  if (!bool) throw new Error('ecc library invalid');\n}\nconst tweakAddVectors = [\n  {\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null,\n  },\n  {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf',\n  },\n  {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c',\n  },\n];\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.BufferReader =\n  exports.BufferWriter =\n  exports.cloneBuffer =\n  exports.reverseBuffer =\n  exports.writeUInt64LE =\n  exports.readUInt64LE =\n  exports.varuint =\n    void 0;\nconst types = require('./types');\nconst { typeforce } = types;\nconst varuint = require('varuint-bitcoin');\nexports.varuint = varuint;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\n/**\n * Writes a 64-bit unsigned integer in little-endian format to the specified buffer at the given offset.\n *\n * @param buffer - The buffer to write the value to.\n * @param value - The 64-bit unsigned integer value to write.\n * @param offset - The offset in the buffer where the value should be written.\n * @returns The new offset after writing the value.\n */\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\n/**\n * Reverses the order of bytes in a buffer.\n * @param buffer - The buffer to reverse.\n * @returns A new buffer with the bytes reversed.\n */\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction cloneBuffer(buffer) {\n  const clone = Buffer.allocUnsafe(buffer.length);\n  buffer.copy(clone);\n  return clone;\n}\nexports.cloneBuffer = cloneBuffer;\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  static withCapacity(size) {\n    return new BufferWriter(Buffer.alloc(size));\n  }\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  writeUInt8(i) {\n    this.offset = this.buffer.writeUInt8(i, this.offset);\n  }\n  writeInt32(i) {\n    this.offset = this.buffer.writeInt32LE(i, this.offset);\n  }\n  writeUInt32(i) {\n    this.offset = this.buffer.writeUInt32LE(i, this.offset);\n  }\n  writeUInt64(i) {\n    this.offset = writeUInt64LE(this.buffer, i, this.offset);\n  }\n  writeVarInt(i) {\n    varuint.encode(i, this.buffer, this.offset);\n    this.offset += varuint.encode.bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.offset += slice.copy(this.buffer, this.offset);\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n  end() {\n    if (this.buffer.length === this.offset) {\n      return this.buffer;\n    }\n    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n  }\n}\nexports.BufferWriter = BufferWriter;\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  readUInt8() {\n    const result = this.buffer.readUInt8(this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt64() {\n    const result = readUInt64LE(this.buffer, this.offset);\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const vi = varuint.decode(this.buffer, this.offset);\n    this.offset += varuint.decode.bytes;\n    return vi;\n  }\n  readSlice(n) {\n    if (this.buffer.length < this.offset + n) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + n);\n    this.offset += n;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\nexports.BufferReader = BufferReader;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.tweakKey =\n  exports.tapTweakHash =\n  exports.tapleafHash =\n  exports.findScriptPath =\n  exports.toHashTree =\n  exports.rootHashFromPath =\n  exports.MAX_TAPTREE_DEPTH =\n  exports.LEAF_VERSION_TAPSCRIPT =\n    void 0;\nconst buffer_1 = require('buffer');\nconst ecc_lib_1 = require('../ecc_lib');\nconst bcrypto = require('../crypto');\nconst bufferutils_1 = require('../bufferutils');\nconst types_1 = require('../types');\nexports.LEAF_VERSION_TAPSCRIPT = 0xc0;\nexports.MAX_TAPTREE_DEPTH = 128;\nconst isHashBranch = ht => 'left' in ht && 'right' in ht;\n/**\n * Calculates the root hash from a given control block and leaf hash.\n * @param controlBlock - The control block buffer.\n * @param leafHash - The leaf hash buffer.\n * @returns The root hash buffer.\n * @throws {TypeError} If the control block length is less than 33.\n */\nfunction rootHashFromPath(controlBlock, leafHash) {\n  if (controlBlock.length < 33)\n    throw new TypeError(\n      `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n    );\n  const m = (controlBlock.length - 33) / 32;\n  let kj = leafHash;\n  for (let j = 0; j < m; j++) {\n    const ej = controlBlock.slice(33 + 32 * j, 65 + 32 * j);\n    if (kj.compare(ej) < 0) {\n      kj = tapBranchHash(kj, ej);\n    } else {\n      kj = tapBranchHash(ej, kj);\n    }\n  }\n  return kj;\n}\nexports.rootHashFromPath = rootHashFromPath;\n/**\n * Build a hash tree of merkle nodes from the scripts binary tree.\n * @param scriptTree - the tree of scripts to pairwise hash.\n */\nfunction toHashTree(scriptTree) {\n  if ((0, types_1.isTapleaf)(scriptTree))\n    return { hash: tapleafHash(scriptTree) };\n  const hashes = [toHashTree(scriptTree[0]), toHashTree(scriptTree[1])];\n  hashes.sort((a, b) => a.hash.compare(b.hash));\n  const [left, right] = hashes;\n  return {\n    hash: tapBranchHash(left.hash, right.hash),\n    left,\n    right,\n  };\n}\nexports.toHashTree = toHashTree;\n/**\n * Given a HashTree, finds the path from a particular hash to the root.\n * @param node - the root of the tree\n * @param hash - the hash to search for\n * @returns - array of sibling hashes, from leaf (inclusive) to root\n * (exclusive) needed to prove inclusion of the specified hash. undefined if no\n * path is found\n */\nfunction findScriptPath(node, hash) {\n  if (isHashBranch(node)) {\n    const leftPath = findScriptPath(node.left, hash);\n    if (leftPath !== undefined) return [...leftPath, node.right.hash];\n    const rightPath = findScriptPath(node.right, hash);\n    if (rightPath !== undefined) return [...rightPath, node.left.hash];\n  } else if (node.hash.equals(hash)) {\n    return [];\n  }\n  return undefined;\n}\nexports.findScriptPath = findScriptPath;\nfunction tapleafHash(leaf) {\n  const version = leaf.version || exports.LEAF_VERSION_TAPSCRIPT;\n  return bcrypto.taggedHash(\n    'TapLeaf',\n    buffer_1.Buffer.concat([\n      buffer_1.Buffer.from([version]),\n      serializeScript(leaf.output),\n    ]),\n  );\n}\nexports.tapleafHash = tapleafHash;\nfunction tapTweakHash(pubKey, h) {\n  return bcrypto.taggedHash(\n    'TapTweak',\n    buffer_1.Buffer.concat(h ? [pubKey, h] : [pubKey]),\n  );\n}\nexports.tapTweakHash = tapTweakHash;\nfunction tweakKey(pubKey, h) {\n  if (!buffer_1.Buffer.isBuffer(pubKey)) return null;\n  if (pubKey.length !== 32) return null;\n  if (h && h.length !== 32) return null;\n  const tweakHash = tapTweakHash(pubKey, h);\n  const res = (0, ecc_lib_1.getEccLib)().xOnlyPointAddTweak(pubKey, tweakHash);\n  if (!res || res.xOnlyPubkey === null) return null;\n  return {\n    parity: res.parity,\n    x: buffer_1.Buffer.from(res.xOnlyPubkey),\n  };\n}\nexports.tweakKey = tweakKey;\nfunction tapBranchHash(a, b) {\n  return bcrypto.taggedHash('TapBranch', buffer_1.Buffer.concat([a, b]));\n}\nfunction serializeScript(s) {\n  const varintLen = bufferutils_1.varuint.encodingLength(s.length);\n  const buffer = buffer_1.Buffer.allocUnsafe(varintLen); // better\n  bufferutils_1.varuint.encode(s.length, buffer);\n  return buffer_1.Buffer.concat([buffer, s]);\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2tr = void 0;\nconst buffer_1 = require('buffer');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst ecc_lib_1 = require('../ecc_lib');\nconst bip341_1 = require('./bip341');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst address_1 = require('../address');\nconst OPS = bscript.OPS;\nconst TAPROOT_WITNESS_VERSION = 0x01;\nconst ANNEX_PREFIX = 0x50;\n/**\n * Creates a Pay-to-Taproot (P2TR) payment object.\n *\n * @param a - The payment object containing the necessary data for P2TR.\n * @param opts - Optional payment options.\n * @returns The P2TR payment object.\n * @throws {TypeError} If the provided data is invalid or insufficient.\n */\nfunction p2tr(a, opts) {\n  if (\n    !a.address &&\n    !a.output &&\n    !a.pubkey &&\n    !a.internalPubkey &&\n    !(a.witness && a.witness.length > 1)\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      internalPubkey: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      pubkey: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      signature: types_1.typeforce.maybe(\n        types_1.typeforce.anyOf(\n          types_1.typeforce.BufferN(64),\n          types_1.typeforce.BufferN(65),\n        ),\n      ),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n      scriptTree: types_1.typeforce.maybe(types_1.isTaptree),\n      redeem: types_1.typeforce.maybe({\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        redeemVersion: types_1.typeforce.maybe(types_1.typeforce.Number),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      redeemVersion: types_1.typeforce.maybe(types_1.typeforce.Number),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    return (0, address_1.fromBech32)(a.address);\n  });\n  // remove annex if present, ignored by taproot\n  const _witness = lazy.value(() => {\n    if (!a.witness || !a.witness.length) return;\n    if (\n      a.witness.length >= 2 &&\n      a.witness[a.witness.length - 1][0] === ANNEX_PREFIX\n    ) {\n      return a.witness.slice(0, -1);\n    }\n    return a.witness.slice();\n  });\n  const _hashTree = lazy.value(() => {\n    if (a.scriptTree) return (0, bip341_1.toHashTree)(a.scriptTree);\n    if (a.hash) return { hash: a.hash };\n    return;\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2tr', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.pubkey) return;\n    const words = bech32_1.bech32m.toWords(o.pubkey);\n    words.unshift(TAPROOT_WITNESS_VERSION);\n    return bech32_1.bech32m.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    const hashTree = _hashTree();\n    if (hashTree) return hashTree.hash;\n    const w = _witness();\n    if (w && w.length > 1) {\n      const controlBlock = w[w.length - 1];\n      const leafVersion = controlBlock[0] & types_1.TAPLEAF_VERSION_MASK;\n      const script = w[w.length - 2];\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: script,\n        version: leafVersion,\n      });\n      return (0, bip341_1.rootHashFromPath)(controlBlock, leafHash);\n    }\n    return null;\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.pubkey) return;\n    return bscript.compile([OPS.OP_1, o.pubkey]);\n  });\n  lazy.prop(o, 'redeemVersion', () => {\n    if (a.redeemVersion) return a.redeemVersion;\n    if (\n      a.redeem &&\n      a.redeem.redeemVersion !== undefined &&\n      a.redeem.redeemVersion !== null\n    ) {\n      return a.redeem.redeemVersion;\n    }\n    return bip341_1.LEAF_VERSION_TAPSCRIPT;\n  });\n  lazy.prop(o, 'redeem', () => {\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length < 2) return;\n    return {\n      output: witness[witness.length - 2],\n      witness: witness.slice(0, -2),\n      redeemVersion:\n        witness[witness.length - 1][0] & types_1.TAPLEAF_VERSION_MASK,\n    };\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.internalPubkey) {\n      const tweakedKey = (0, bip341_1.tweakKey)(o.internalPubkey, o.hash);\n      if (tweakedKey) return tweakedKey.x;\n    }\n  });\n  lazy.prop(o, 'internalPubkey', () => {\n    if (a.internalPubkey) return a.internalPubkey;\n    const witness = _witness();\n    if (witness && witness.length > 1)\n      return witness[witness.length - 1].slice(1, 33);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (a.signature) return a.signature;\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length !== 1) return;\n    return witness[0];\n  });\n  lazy.prop(o, 'witness', () => {\n    if (a.witness) return a.witness;\n    const hashTree = _hashTree();\n    if (hashTree && a.redeem && a.redeem.output && a.internalPubkey) {\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      const path = (0, bip341_1.findScriptPath)(hashTree, leafHash);\n      if (!path) return;\n      const outputKey = (0, bip341_1.tweakKey)(a.internalPubkey, hashTree.hash);\n      if (!outputKey) return;\n      const controlBock = buffer_1.Buffer.concat(\n        [\n          buffer_1.Buffer.from([o.redeemVersion | outputKey.parity]),\n          a.internalPubkey,\n        ].concat(path),\n      );\n      return [a.redeem.output, controlBock];\n    }\n    if (a.signature) return [a.signature];\n  });\n  // extended validation\n  if (opts.validate) {\n    let pubkey = buffer_1.Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== TAPROOT_WITNESS_VERSION)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      pubkey = _address().data;\n    }\n    if (a.pubkey) {\n      if (pubkey.length > 0 && !pubkey.equals(a.pubkey))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.pubkey;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_1 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      if (pubkey.length > 0 && !pubkey.equals(a.output.slice(2)))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.output.slice(2);\n    }\n    if (a.internalPubkey) {\n      const tweakedKey = (0, bip341_1.tweakKey)(a.internalPubkey, o.hash);\n      if (pubkey.length > 0 && !pubkey.equals(tweakedKey.x))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = tweakedKey.x;\n    }\n    if (pubkey && pubkey.length) {\n      if (!(0, ecc_lib_1.getEccLib)().isXOnlyPoint(pubkey))\n        throw new TypeError('Invalid pubkey for p2tr');\n    }\n    const hashTree = _hashTree();\n    if (a.hash && hashTree) {\n      if (!a.hash.equals(hashTree.hash)) throw new TypeError('Hash mismatch');\n    }\n    if (a.redeem && a.redeem.output && hashTree) {\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      if (!(0, bip341_1.findScriptPath)(hashTree, leafHash))\n        throw new TypeError('Redeem script not in tree');\n    }\n    const witness = _witness();\n    // compare the provided redeem data with the one computed from witness\n    if (a.redeem && o.redeem) {\n      if (a.redeem.redeemVersion) {\n        if (a.redeem.redeemVersion !== o.redeem.redeemVersion)\n          throw new TypeError('Redeem.redeemVersion and witness mismatch');\n      }\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // output redeem is constructed from the witness\n        if (o.redeem.output && !a.redeem.output.equals(o.redeem.output))\n          throw new TypeError('Redeem.output and witness mismatch');\n      }\n      if (a.redeem.witness) {\n        if (\n          o.redeem.witness &&\n          !(0, types_1.stacksEqual)(a.redeem.witness, o.redeem.witness)\n        )\n          throw new TypeError('Redeem.witness and witness mismatch');\n      }\n    }\n    if (witness && witness.length) {\n      if (witness.length === 1) {\n        // key spending\n        if (a.signature && !a.signature.equals(witness[0]))\n          throw new TypeError('Signature mismatch');\n      } else {\n        // script path spending\n        const controlBlock = witness[witness.length - 1];\n        if (controlBlock.length < 33)\n          throw new TypeError(\n            `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n          );\n        if ((controlBlock.length - 33) % 32 !== 0)\n          throw new TypeError(\n            `The control-block length of ${controlBlock.length} is incorrect!`,\n          );\n        const m = (controlBlock.length - 33) / 32;\n        if (m > 128)\n          throw new TypeError(\n            `The script path is too long. Got ${m}, expected max 128.`,\n          );\n        const internalPubkey = controlBlock.slice(1, 33);\n        if (a.internalPubkey && !a.internalPubkey.equals(internalPubkey))\n          throw new TypeError('Internal pubkey mismatch');\n        if (!(0, ecc_lib_1.getEccLib)().isXOnlyPoint(internalPubkey))\n          throw new TypeError('Invalid internalPubkey for p2tr witness');\n        const leafVersion = controlBlock[0] & types_1.TAPLEAF_VERSION_MASK;\n        const script = witness[witness.length - 2];\n        const leafHash = (0, bip341_1.tapleafHash)({\n          output: script,\n          version: leafVersion,\n        });\n        const hash = (0, bip341_1.rootHashFromPath)(controlBlock, leafHash);\n        const outputKey = (0, bip341_1.tweakKey)(internalPubkey, hash);\n        if (!outputKey)\n          // todo: needs test data\n          throw new TypeError('Invalid outputKey for p2tr witness');\n        if (pubkey.length && !pubkey.equals(outputKey.x))\n          throw new TypeError('Pubkey mismatch for p2tr witness');\n        if (outputKey.parity !== (controlBlock[0] & 1))\n          throw new Error('Incorrect parity');\n      }\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2tr = p2tr;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2tr =\n  exports.p2wsh =\n  exports.p2wpkh =\n  exports.p2sh =\n  exports.p2pkh =\n  exports.p2pk =\n  exports.p2ms =\n  exports.embed =\n    void 0;\nconst embed_1 = require('./embed');\nObject.defineProperty(exports, 'embed', {\n  enumerable: true,\n  get: function () {\n    return embed_1.p2data;\n  },\n});\nconst p2ms_1 = require('./p2ms');\nObject.defineProperty(exports, 'p2ms', {\n  enumerable: true,\n  get: function () {\n    return p2ms_1.p2ms;\n  },\n});\nconst p2pk_1 = require('./p2pk');\nObject.defineProperty(exports, 'p2pk', {\n  enumerable: true,\n  get: function () {\n    return p2pk_1.p2pk;\n  },\n});\nconst p2pkh_1 = require('./p2pkh');\nObject.defineProperty(exports, 'p2pkh', {\n  enumerable: true,\n  get: function () {\n    return p2pkh_1.p2pkh;\n  },\n});\nconst p2sh_1 = require('./p2sh');\nObject.defineProperty(exports, 'p2sh', {\n  enumerable: true,\n  get: function () {\n    return p2sh_1.p2sh;\n  },\n});\nconst p2wpkh_1 = require('./p2wpkh');\nObject.defineProperty(exports, 'p2wpkh', {\n  enumerable: true,\n  get: function () {\n    return p2wpkh_1.p2wpkh;\n  },\n});\nconst p2wsh_1 = require('./p2wsh');\nObject.defineProperty(exports, 'p2wsh', {\n  enumerable: true,\n  get: function () {\n    return p2wsh_1.p2wsh;\n  },\n});\nconst p2tr_1 = require('./p2tr');\nObject.defineProperty(exports, 'p2tr', {\n  enumerable: true,\n  get: function () {\n    return p2tr_1.p2tr;\n  },\n});\n// TODO\n// witness commitment\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.toOutputScript =\n  exports.fromOutputScript =\n  exports.toBech32 =\n  exports.toBase58Check =\n  exports.fromBech32 =\n  exports.fromBase58Check =\n    void 0;\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst types_1 = require('./types');\nconst bech32_1 = require('bech32');\nconst bs58check = require('bs58check');\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 2;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\n/**\n * decode address with base58 specification,  return address version and address hash if valid\n */\nfunction fromBase58Check(address) {\n  const payload = Buffer.from(bs58check.decode(address));\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\nexports.fromBase58Check = fromBase58Check;\n/**\n * decode address with bech32 specification,  return address version、address prefix and address data if valid\n */\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32_1.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32_1.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32_1.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Buffer.from(data),\n  };\n}\nexports.fromBech32 = fromBech32;\n/**\n * encode address hash to base58 address with version\n */\nfunction toBase58Check(hash, version) {\n  (0, types_1.typeforce)(\n    (0, types_1.tuple)(types_1.Hash160bit, types_1.UInt8),\n    arguments,\n  );\n  const payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\nexports.toBase58Check = toBase58Check;\n/**\n * encode address hash to bech32 address with version and prefix\n */\nfunction toBech32(data, version, prefix) {\n  const words = bech32_1.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32_1.bech32.encode(prefix, words)\n    : bech32_1.bech32m.encode(prefix, words);\n}\nexports.toBech32 = toBech32;\n/**\n * decode address from output script with network, return address if matched\n */\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || networks.bitcoin;\n  try {\n    return payments.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2tr({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\nexports.fromOutputScript = fromOutputScript;\n/**\n * encodes address to output script with network, return output script if address matched\n */\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return payments.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return payments.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return payments.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return payments.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (decodeBech32.version === 1) {\n        if (decodeBech32.data.length === 32)\n          return payments.p2tr({ pubkey: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return bscript.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nexports.toOutputScript = toOutputScript;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.fastMerkleRoot = void 0;\n/**\n * Calculates the Merkle root of an array of buffers using a specified digest function.\n *\n * @param values - The array of buffers.\n * @param digestFn - The digest function used to calculate the hash of the concatenated buffers.\n * @returns The Merkle root as a buffer.\n * @throws {TypeError} If the values parameter is not an array or the digestFn parameter is not a function.\n */\nfunction fastMerkleRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function')\n    throw TypeError('Expected digest Function');\n  let length = values.length;\n  const results = values.concat();\n  while (length > 1) {\n    let j = 0;\n    for (let i = 0; i < length; i += 2, ++j) {\n      const left = results[i];\n      const right = i + 1 === length ? left : results[i + 1];\n      const data = Buffer.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n    length = j;\n  }\n  return results[0];\n}\nexports.fastMerkleRoot = fastMerkleRoot;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Transaction = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst bscript = require('./script');\nconst script_1 = require('./script');\nconst types = require('./types');\nconst { typeforce } = types;\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return bufferutils_1.varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    bufferutils_1.varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_BUFFER = Buffer.allocUnsafe(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'hex',\n);\nconst ONE = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n  'hex',\n);\nconst VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\nconst BLANK_OUTPUT = {\n  script: EMPTY_BUFFER,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\n/**\n * Represents a Bitcoin transaction.\n */\nclass Transaction {\n  constructor() {\n    this.version = 1;\n    this.locktime = 0;\n    this.ins = [];\n    this.outs = [];\n  }\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readUInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n  }\n  static isCoinbaseHash(buffer) {\n    typeforce(types.Hash256bit, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    typeforce(\n      types.tuple(\n        types.Hash256bit,\n        types.UInt32,\n        types.maybe(types.UInt32),\n        types.maybe(types.Buffer),\n      ),\n      arguments,\n    );\n    if (types.Null(sequence)) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_BUFFER,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    typeforce(types.tuple(types.Buffer, types.Satoshi), arguments);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      bufferutils_1.varuint.encodingLength(this.ins.length) +\n      bufferutils_1.varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number),\n      arguments,\n    );\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = bscript.compile(\n      bscript.decompile(prevOutScript).filter(x => {\n        return x !== script_1.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_BUFFER;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n    buffer.writeInt32LE(hashType, buffer.length - 4);\n    txTmp.__toBuffer(buffer, 0, false);\n    return bcrypto.hash256(buffer);\n  }\n  hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n    typeforce(\n      types.tuple(\n        types.UInt32,\n        typeforce.arrayOf(types.Buffer),\n        typeforce.arrayOf(types.Satoshi),\n        types.UInt32,\n      ),\n      arguments,\n    );\n    if (\n      values.length !== this.ins.length ||\n      prevOutScripts.length !== this.ins.length\n    ) {\n      throw new Error('Must supply prevout script and value for all inputs');\n    }\n    const outputType =\n      hashType === Transaction.SIGHASH_DEFAULT\n        ? Transaction.SIGHASH_ALL\n        : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n    const inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n    const isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n    const isNone = outputType === Transaction.SIGHASH_NONE;\n    const isSingle = outputType === Transaction.SIGHASH_SINGLE;\n    let hashPrevouts = EMPTY_BUFFER;\n    let hashAmounts = EMPTY_BUFFER;\n    let hashScriptPubKeys = EMPTY_BUFFER;\n    let hashSequences = EMPTY_BUFFER;\n    let hashOutputs = EMPTY_BUFFER;\n    if (!isAnyoneCanPay) {\n      let bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        36 * this.ins.length,\n      );\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 * this.ins.length,\n      );\n      values.forEach(value => bufferWriter.writeUInt64(value));\n      hashAmounts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        prevOutScripts.map(varSliceSize).reduce((a, b) => a + b),\n      );\n      prevOutScripts.forEach(prevOutScript =>\n        bufferWriter.writeVarSlice(prevOutScript),\n      );\n      hashScriptPubKeys = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        4 * this.ins.length,\n      );\n      this.ins.forEach(txIn => bufferWriter.writeUInt32(txIn.sequence));\n      hashSequences = bcrypto.sha256(bufferWriter.end());\n    }\n    if (!(isNone || isSingle)) {\n      const txOutsSize = this.outs\n        .map(output => 8 + varSliceSize(output.script))\n        .reduce((a, b) => a + b);\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(txOutsSize);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    } else if (isSingle && inIndex < this.outs.length) {\n      const output = this.outs[inIndex];\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 + varSliceSize(output.script),\n      );\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    }\n    const spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n    // Length calculation from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n    // With extension from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n    const sigMsgSize =\n      174 -\n      (isAnyoneCanPay ? 49 : 0) -\n      (isNone ? 32 : 0) +\n      (annex ? 32 : 0) +\n      (leafHash ? 37 : 0);\n    const sigMsgWriter = bufferutils_1.BufferWriter.withCapacity(sigMsgSize);\n    sigMsgWriter.writeUInt8(hashType);\n    // Transaction\n    sigMsgWriter.writeInt32(this.version);\n    sigMsgWriter.writeUInt32(this.locktime);\n    sigMsgWriter.writeSlice(hashPrevouts);\n    sigMsgWriter.writeSlice(hashAmounts);\n    sigMsgWriter.writeSlice(hashScriptPubKeys);\n    sigMsgWriter.writeSlice(hashSequences);\n    if (!(isNone || isSingle)) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // Input\n    sigMsgWriter.writeUInt8(spendType);\n    if (isAnyoneCanPay) {\n      const input = this.ins[inIndex];\n      sigMsgWriter.writeSlice(input.hash);\n      sigMsgWriter.writeUInt32(input.index);\n      sigMsgWriter.writeUInt64(values[inIndex]);\n      sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n      sigMsgWriter.writeUInt32(input.sequence);\n    } else {\n      sigMsgWriter.writeUInt32(inIndex);\n    }\n    if (annex) {\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        varSliceSize(annex),\n      );\n      bufferWriter.writeVarSlice(annex);\n      sigMsgWriter.writeSlice(bcrypto.sha256(bufferWriter.end()));\n    }\n    // Output\n    if (isSingle) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // BIP342 extension\n    if (leafHash) {\n      sigMsgWriter.writeSlice(leafHash);\n      sigMsgWriter.writeUInt8(0);\n      sigMsgWriter.writeUInt32(0xffffffff);\n    }\n    // Extra zero byte because:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n    return bcrypto.taggedHash(\n      'TapSighash',\n      Buffer.concat([Buffer.from([0x00]), sigMsgWriter.end()]),\n    );\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32),\n      arguments,\n    );\n    let tbuffer = Buffer.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = bcrypto.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = Buffer.allocUnsafe(txOutsSize);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.hash256(tbuffer);\n    }\n    tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n    bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeUInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return bcrypto.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n    return bcrypto.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return (0, bufferutils_1.reverseBuffer)(this.getHash(false)).toString(\n      'hex',\n    );\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return this.toBuffer(undefined, undefined).toString('hex');\n  }\n  setInputScript(index, scriptSig) {\n    typeforce(types.tuple(types.Number, types.Buffer), arguments);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    typeforce(types.tuple(types.Number, [types.Buffer]), arguments);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new bufferutils_1.BufferWriter(\n      buffer,\n      initialOffset || 0,\n    );\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeUInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\nexports.Transaction = Transaction;\nTransaction.DEFAULT_SEQUENCE = 0xffffffff;\nTransaction.SIGHASH_DEFAULT = 0x00;\nTransaction.SIGHASH_ALL = 0x01;\nTransaction.SIGHASH_NONE = 0x02;\nTransaction.SIGHASH_SINGLE = 0x03;\nTransaction.SIGHASH_ANYONECANPAY = 0x80;\nTransaction.SIGHASH_OUTPUT_MASK = 0x03;\nTransaction.SIGHASH_INPUT_MASK = 0x80;\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00;\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Block = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst merkle_1 = require('./merkle');\nconst transaction_1 = require('./transaction');\nconst types = require('./types');\nconst { typeforce } = types;\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  constructor() {\n    this.version = 1;\n    this.prevHash = undefined;\n    this.merkleRoot = undefined;\n    this.timestamp = 0;\n    this.witnessCommit = undefined;\n    this.bits = 0;\n    this.nonce = 0;\n    this.transactions = undefined;\n  }\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = transaction_1.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(Buffer.from(hex, 'hex'));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = Buffer.alloc(32, 0);\n    target.writeUIntBE(mantissa, 29 - exponent, 3);\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    typeforce([{ getHash: types.Function }], transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = (0, merkle_1.fastMerkleRoot)(hashes, bcrypto.hash256);\n    return forWitness\n      ? bcrypto.hash256(\n          Buffer.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(out =>\n        out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex')),\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Buffer && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Buffer &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      bufferutils_1.varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return bcrypto.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return (0, bufferutils_1.reverseBuffer)(this.getHash()).toString('hex');\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n    const bufferWriter = new bufferutils_1.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    bufferutils_1.varuint.encode(\n      this.transactions.length,\n      buffer,\n      bufferWriter.offset,\n    );\n    bufferWriter.offset += bufferutils_1.varuint.encode.bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return this.toBuffer(headersOnly).toString('hex');\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = (0, bufferutils_1.reverseBuffer)(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return hash.compare(target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return this.merkleRoot.compare(actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return this.witnessCommit.compare(actualWitnessCommit) === 0;\n  }\n}\nexports.Block = Block;\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signatureBlocksAction =\n  exports.checkInputForSig =\n  exports.pubkeyInScript =\n  exports.pubkeyPositionInScript =\n  exports.witnessStackToScriptWitness =\n  exports.isP2TR =\n  exports.isP2SHScript =\n  exports.isP2WSHScript =\n  exports.isP2WPKH =\n  exports.isP2PKH =\n  exports.isP2PK =\n  exports.isP2MS =\n    void 0;\nconst varuint = require('bip174/src/lib/converter/varint');\nconst bscript = require('../script');\nconst transaction_1 = require('../transaction');\nconst crypto_1 = require('../crypto');\nconst payments = require('../payments');\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nexports.isP2MS = isPaymentFactory(payments.p2ms);\nexports.isP2PK = isPaymentFactory(payments.p2pk);\nexports.isP2PKH = isPaymentFactory(payments.p2pkh);\nexports.isP2WPKH = isPaymentFactory(payments.p2wpkh);\nexports.isP2WSHScript = isPaymentFactory(payments.p2wsh);\nexports.isP2SHScript = isPaymentFactory(payments.p2sh);\nexports.isP2TR = isPaymentFactory(payments.p2tr);\n/**\n * Converts a witness stack to a script witness.\n * @param witness The witness stack to convert.\n * @returns The script witness as a Buffer.\n */\n/**\n * Converts a witness stack to a script witness.\n * @param witness The witness stack to convert.\n * @returns The converted script witness.\n */\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nexports.witnessStackToScriptWitness = witnessStackToScriptWitness;\n/**\n * Finds the position of a public key in a script.\n * @param pubkey The public key to search for.\n * @param script The script to search in.\n * @returns The index of the public key in the script, or -1 if not found.\n * @throws {Error} If there is an unknown script error.\n */\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      element.equals(pubkey) ||\n      element.equals(pubkeyHash) ||\n      element.equals(pubkeyXOnly)\n    );\n  });\n}\nexports.pubkeyPositionInScript = pubkeyPositionInScript;\n/**\n * Checks if a public key is present in a script.\n * @param pubkey The public key to check.\n * @param script The script to search in.\n * @returns A boolean indicating whether the public key is present in the script.\n */\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\nexports.pubkeyInScript = pubkeyInScript;\n/**\n * Checks if an input contains a signature for a specific action.\n * @param input - The input to check.\n * @param action - The action to check for.\n * @returns A boolean indicating whether the input contains a signature for the specified action.\n */\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, bscript.signature.decode, action),\n  );\n}\nexports.checkInputForSig = checkInputForSig;\n/**\n * Determines if a given action is allowed for a signature block.\n * @param signature - The signature block.\n * @param signatureDecodeFn - The function used to decode the signature.\n * @param action - The action to be checked.\n * @returns True if the action is allowed, false otherwise.\n */\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay =\n    hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n    case transaction_1.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\nexports.signatureBlocksAction = signatureBlocksAction;\n/**\n * Extracts the signatures from a PsbtInput object.\n * If the input has partial signatures, it returns an array of the signatures.\n * If the input does not have partial signatures, it checks if it has a finalScriptSig or finalScriptWitness.\n * If it does, it extracts the signatures from the final scripts and returns them.\n * If none of the above conditions are met, it returns an empty array.\n *\n * @param input - The PsbtInput object from which to extract the signatures.\n * @returns An array of signatures extracted from the PsbtInput object.\n */\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\n/**\n * Retrieves the partial signatures (Psigs) from the input's final scripts.\n * Psigs are extracted from both the final scriptSig and final scriptWitness of the input.\n * Only canonical script signatures are considered.\n *\n * @param input - The PsbtInput object representing the input.\n * @returns An array of PartialSig objects containing the extracted Psigs.\n */\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.checkTaprootInputForSigs =\n  exports.tapTreeFromList =\n  exports.tapTreeToList =\n  exports.tweakInternalPubKey =\n  exports.checkTaprootOutputFields =\n  exports.checkTaprootInputFields =\n  exports.isTaprootOutput =\n  exports.isTaprootInput =\n  exports.serializeTaprootSignature =\n  exports.tapScriptFinalizer =\n  exports.toXOnly =\n    void 0;\nconst types_1 = require('../types');\nconst transaction_1 = require('../transaction');\nconst psbtutils_1 = require('./psbtutils');\nconst bip341_1 = require('../payments/bip341');\nconst payments_1 = require('../payments');\nconst psbtutils_2 = require('./psbtutils');\nconst toXOnly = pubKey => (pubKey.length === 32 ? pubKey : pubKey.slice(1, 33));\nexports.toXOnly = toXOnly;\n/**\n * Default tapscript finalizer. It searches for the `tapLeafHashToFinalize` if provided.\n * Otherwise it will search for the tapleaf that has at least one signature and has the shortest path.\n * @param inputIndex the position of the PSBT input.\n * @param input the PSBT input.\n * @param tapLeafHashToFinalize optional, if provided the finalizer will search for a tapleaf that has this hash\n *                              and will try to build the finalScriptWitness.\n * @returns the finalScriptWitness or throws an exception if no tapleaf found.\n */\nfunction tapScriptFinalizer(inputIndex, input, tapLeafHashToFinalize) {\n  const tapLeaf = findTapLeafToFinalize(\n    input,\n    inputIndex,\n    tapLeafHashToFinalize,\n  );\n  try {\n    const sigs = sortSignatures(input, tapLeaf);\n    const witness = sigs.concat(tapLeaf.script).concat(tapLeaf.controlBlock);\n    return {\n      finalScriptWitness: (0, psbtutils_1.witnessStackToScriptWitness)(witness),\n    };\n  } catch (err) {\n    throw new Error(`Can not finalize taproot input #${inputIndex}: ${err}`);\n  }\n}\nexports.tapScriptFinalizer = tapScriptFinalizer;\nfunction serializeTaprootSignature(sig, sighashType) {\n  const sighashTypeByte = sighashType\n    ? Buffer.from([sighashType])\n    : Buffer.from([]);\n  return Buffer.concat([sig, sighashTypeByte]);\n}\nexports.serializeTaprootSignature = serializeTaprootSignature;\nfunction isTaprootInput(input) {\n  return (\n    input &&\n    !!(\n      input.tapInternalKey ||\n      input.tapMerkleRoot ||\n      (input.tapLeafScript && input.tapLeafScript.length) ||\n      (input.tapBip32Derivation && input.tapBip32Derivation.length) ||\n      (input.witnessUtxo && (0, psbtutils_1.isP2TR)(input.witnessUtxo.script))\n    )\n  );\n}\nexports.isTaprootInput = isTaprootInput;\nfunction isTaprootOutput(output, script) {\n  return (\n    output &&\n    !!(\n      output.tapInternalKey ||\n      output.tapTree ||\n      (output.tapBip32Derivation && output.tapBip32Derivation.length) ||\n      (script && (0, psbtutils_1.isP2TR)(script))\n    )\n  );\n}\nexports.isTaprootOutput = isTaprootOutput;\nfunction checkTaprootInputFields(inputData, newInputData, action) {\n  checkMixedTaprootAndNonTaprootInputFields(inputData, newInputData, action);\n  checkIfTapLeafInTree(inputData, newInputData, action);\n}\nexports.checkTaprootInputFields = checkTaprootInputFields;\nfunction checkTaprootOutputFields(outputData, newOutputData, action) {\n  checkMixedTaprootAndNonTaprootOutputFields(outputData, newOutputData, action);\n  checkTaprootScriptPubkey(outputData, newOutputData);\n}\nexports.checkTaprootOutputFields = checkTaprootOutputFields;\nfunction checkTaprootScriptPubkey(outputData, newOutputData) {\n  if (!newOutputData.tapTree && !newOutputData.tapInternalKey) return;\n  const tapInternalKey =\n    newOutputData.tapInternalKey || outputData.tapInternalKey;\n  const tapTree = newOutputData.tapTree || outputData.tapTree;\n  if (tapInternalKey) {\n    const { script: scriptPubkey } = outputData;\n    const script = getTaprootScripPubkey(tapInternalKey, tapTree);\n    if (scriptPubkey && !scriptPubkey.equals(script))\n      throw new Error('Error adding output. Script or address missmatch.');\n  }\n}\nfunction getTaprootScripPubkey(tapInternalKey, tapTree) {\n  const scriptTree = tapTree && tapTreeFromList(tapTree.leaves);\n  const { output } = (0, payments_1.p2tr)({\n    internalPubkey: tapInternalKey,\n    scriptTree,\n  });\n  return output;\n}\nfunction tweakInternalPubKey(inputIndex, input) {\n  const tapInternalKey = input.tapInternalKey;\n  const outputKey =\n    tapInternalKey &&\n    (0, bip341_1.tweakKey)(tapInternalKey, input.tapMerkleRoot);\n  if (!outputKey)\n    throw new Error(\n      `Cannot tweak tap internal key for input #${inputIndex}. Public key: ${\n        tapInternalKey && tapInternalKey.toString('hex')\n      }`,\n    );\n  return outputKey.x;\n}\nexports.tweakInternalPubKey = tweakInternalPubKey;\n/**\n * Convert a binary tree to a BIP371 type list. Each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @param tree the binary tap tree\n * @returns a list of BIP 371 tapleaves\n */\nfunction tapTreeToList(tree) {\n  if (!(0, types_1.isTaptree)(tree))\n    throw new Error(\n      'Cannot convert taptree to tapleaf list. Expecting a tapree structure.',\n    );\n  return _tapTreeToList(tree);\n}\nexports.tapTreeToList = tapTreeToList;\n/**\n * Convert a BIP371 TapLeaf list to a TapTree (binary).\n * @param leaves a list of tapleaves where each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @returns the corresponding taptree, or throws an exception if the tree cannot be reconstructed\n */\nfunction tapTreeFromList(leaves = []) {\n  if (leaves.length === 1 && leaves[0].depth === 0)\n    return {\n      output: leaves[0].script,\n      version: leaves[0].leafVersion,\n    };\n  return instertLeavesInTree(leaves);\n}\nexports.tapTreeFromList = tapTreeFromList;\nfunction checkTaprootInputForSigs(input, action) {\n  const sigs = extractTaprootSigs(input);\n  return sigs.some(sig =>\n    (0, psbtutils_2.signatureBlocksAction)(sig, decodeSchnorrSignature, action),\n  );\n}\nexports.checkTaprootInputForSigs = checkTaprootInputForSigs;\nfunction decodeSchnorrSignature(signature) {\n  return {\n    signature: signature.slice(0, 64),\n    hashType:\n      signature.slice(64)[0] || transaction_1.Transaction.SIGHASH_DEFAULT,\n  };\n}\nfunction extractTaprootSigs(input) {\n  const sigs = [];\n  if (input.tapKeySig) sigs.push(input.tapKeySig);\n  if (input.tapScriptSig)\n    sigs.push(...input.tapScriptSig.map(s => s.signature));\n  if (!sigs.length) {\n    const finalTapKeySig = getTapKeySigFromWithness(input.finalScriptWitness);\n    if (finalTapKeySig) sigs.push(finalTapKeySig);\n  }\n  return sigs;\n}\nfunction getTapKeySigFromWithness(finalScriptWitness) {\n  if (!finalScriptWitness) return;\n  const witness = finalScriptWitness.slice(2);\n  // todo: add schnorr signature validation\n  if (witness.length === 64 || witness.length === 65) return witness;\n}\nfunction _tapTreeToList(tree, leaves = [], depth = 0) {\n  if (depth > bip341_1.MAX_TAPTREE_DEPTH)\n    throw new Error('Max taptree depth exceeded.');\n  if (!tree) return [];\n  if ((0, types_1.isTapleaf)(tree)) {\n    leaves.push({\n      depth,\n      leafVersion: tree.version || bip341_1.LEAF_VERSION_TAPSCRIPT,\n      script: tree.output,\n    });\n    return leaves;\n  }\n  if (tree[0]) _tapTreeToList(tree[0], leaves, depth + 1);\n  if (tree[1]) _tapTreeToList(tree[1], leaves, depth + 1);\n  return leaves;\n}\nfunction instertLeavesInTree(leaves) {\n  let tree;\n  for (const leaf of leaves) {\n    tree = instertLeafInTree(leaf, tree);\n    if (!tree) throw new Error(`No room left to insert tapleaf in tree`);\n  }\n  return tree;\n}\nfunction instertLeafInTree(leaf, tree, depth = 0) {\n  if (depth > bip341_1.MAX_TAPTREE_DEPTH)\n    throw new Error('Max taptree depth exceeded.');\n  if (leaf.depth === depth) {\n    if (!tree)\n      return {\n        output: leaf.script,\n        version: leaf.leafVersion,\n      };\n    return;\n  }\n  if ((0, types_1.isTapleaf)(tree)) return;\n  const leftSide = instertLeafInTree(leaf, tree && tree[0], depth + 1);\n  if (leftSide) return [leftSide, tree && tree[1]];\n  const rightSide = instertLeafInTree(leaf, tree && tree[1], depth + 1);\n  if (rightSide) return [tree && tree[0], rightSide];\n}\nfunction checkMixedTaprootAndNonTaprootInputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootInput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootInput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootInput(newInputData) &&\n    hasNonTaprootFields(newInputData); // todo: bad? use !===\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\nfunction checkMixedTaprootAndNonTaprootOutputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootOutput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootOutput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootOutput(newInputData) &&\n    hasNonTaprootFields(newInputData);\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\n/**\n * Checks if the tap leaf is part of the tap tree for the given input data.\n * Throws an error if the tap leaf is not part of the tap tree.\n * @param inputData - The original PsbtInput data.\n * @param newInputData - The new PsbtInput data.\n * @param action - The action being performed.\n * @throws {Error} - If the tap leaf is not part of the tap tree.\n */\nfunction checkIfTapLeafInTree(inputData, newInputData, action) {\n  if (newInputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    const oldLeafsInTree = (inputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree || !oldLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  } else if (inputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, inputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  }\n}\n/**\n * Checks if a TapLeafScript is present in a Merkle tree.\n * @param tapLeaf The TapLeafScript to check.\n * @param merkleRoot The Merkle root of the tree. If not provided, the function assumes the TapLeafScript is present.\n * @returns A boolean indicating whether the TapLeafScript is present in the tree.\n */\nfunction isTapLeafInTree(tapLeaf, merkleRoot) {\n  if (!merkleRoot) return true;\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  const rootHash = (0, bip341_1.rootHashFromPath)(\n    tapLeaf.controlBlock,\n    leafHash,\n  );\n  return rootHash.equals(merkleRoot);\n}\n/**\n * Sorts the signatures in the input's tapScriptSig array based on their position in the tapLeaf script.\n *\n * @param input - The PsbtInput object.\n * @param tapLeaf - The TapLeafScript object.\n * @returns An array of sorted signatures as Buffers.\n */\nfunction sortSignatures(input, tapLeaf) {\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  return (input.tapScriptSig || [])\n    .filter(tss => tss.leafHash.equals(leafHash))\n    .map(tss => addPubkeyPositionInScript(tapLeaf.script, tss))\n    .sort((t1, t2) => t2.positionInScript - t1.positionInScript)\n    .map(t => t.signature);\n}\n/**\n * Adds the position of a public key in a script to a TapScriptSig object.\n * @param script The script in which to find the position of the public key.\n * @param tss The TapScriptSig object to add the position to.\n * @returns A TapScriptSigWitPosition object with the added position.\n */\nfunction addPubkeyPositionInScript(script, tss) {\n  return Object.assign(\n    {\n      positionInScript: (0, psbtutils_1.pubkeyPositionInScript)(\n        tss.pubkey,\n        script,\n      ),\n    },\n    tss,\n  );\n}\n/**\n * Find tapleaf by hash, or get the signed tapleaf with the shortest path.\n */\nfunction findTapLeafToFinalize(input, inputIndex, leafHashToFinalize) {\n  if (!input.tapScriptSig || !input.tapScriptSig.length)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. No tapleaf script signature provided.`,\n    );\n  const tapLeaf = (input.tapLeafScript || [])\n    .sort((a, b) => a.controlBlock.length - b.controlBlock.length)\n    .find(leaf =>\n      canFinalizeLeaf(leaf, input.tapScriptSig, leafHashToFinalize),\n    );\n  if (!tapLeaf)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. Signature for tapleaf script not found.`,\n    );\n  return tapLeaf;\n}\n/**\n * Determines whether a TapLeafScript can be finalized.\n *\n * @param leaf - The TapLeafScript to check.\n * @param tapScriptSig - The array of TapScriptSig objects.\n * @param hash - The optional hash to compare with the leaf hash.\n * @returns A boolean indicating whether the TapLeafScript can be finalized.\n */\nfunction canFinalizeLeaf(leaf, tapScriptSig, hash) {\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: leaf.script,\n    version: leaf.leafVersion,\n  });\n  const whiteListedHash = !hash || hash.equals(leafHash);\n  return (\n    whiteListedHash &&\n    tapScriptSig.find(tss => tss.leafHash.equals(leafHash)) !== undefined\n  );\n}\n/**\n * Checks if the given PsbtInput or PsbtOutput has non-taproot fields.\n * Non-taproot fields include redeemScript, witnessScript, and bip32Derivation.\n * @param io The PsbtInput or PsbtOutput to check.\n * @returns A boolean indicating whether the given input or output has non-taproot fields.\n */\nfunction hasNonTaprootFields(io) {\n  return (\n    io &&\n    !!(\n      io.redeemScript ||\n      io.witnessScript ||\n      (io.bip32Derivation && io.bip32Derivation.length)\n    )\n  );\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Psbt = void 0;\nconst bip174_1 = require('bip174');\nconst varuint = require('bip174/src/lib/converter/varint');\nconst utils_1 = require('bip174/src/lib/utils');\nconst address_1 = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst networks_1 = require('./networks');\nconst payments = require('./payments');\nconst bip341_1 = require('./payments/bip341');\nconst bscript = require('./script');\nconst transaction_1 = require('./transaction');\nconst bip371_1 = require('./psbt/bip371');\nconst psbtutils_1 = require('./psbt/psbtutils');\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: networks_1.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n *\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n *\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n *\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n *\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n *\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  static fromBase64(data, opts = {}) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174_1.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  constructor(opts = {}, data = new bip174_1.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecessor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0, bufferutils_1.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0, address_1.fromOutputScript)(\n          output.script,\n          this.opts.network,\n        );\n      } catch (_) {}\n      return {\n        script: (0, bufferutils_1.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    (0, bip371_1.checkTaprootInputFields)(inputData, inputData, 'addInput');\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0, address_1.toOutputScript)(address, network);\n      outputData = Object.assign({}, outputData, { script });\n    }\n    (0, bip371_1.checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        undefined,\n        finalScriptsFunc,\n      );\n    return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n  }\n  finalizeTaprootInput(\n    inputIndex,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n        finalScriptsFunc,\n      );\n    throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n  }\n  _finalizeInput(inputIndex, input, finalScriptsFunc = getFinalScripts) {\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  _finalizeTaprootInput(\n    inputIndex,\n    input,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    if (!input.witnessUtxo)\n      throw new Error(\n        `Cannot finalize input #${inputIndex}. Missing withness utxo.`,\n      );\n    // Check key spend first. Increased privacy and reduced block space.\n    if (input.tapKeySig) {\n      const payment = payments.p2tr({\n        output: input.witnessUtxo.script,\n        signature: input.tapKeySig,\n      });\n      const finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    } else {\n      const { finalScriptWitness } = finalScriptsFunc(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    }\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this.validateSignaturesOfTaprootInput(\n        inputIndex,\n        validator,\n        pubkey,\n      );\n    return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n  }\n  _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => sig.pubkey.equals(pubkey))\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = bscript.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const tapKeySig = (input || {}).tapKeySig;\n    const tapScriptSig = (input || {}).tapScriptSig;\n    if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length))\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    pubkey = pubkey && (0, bip371_1.toXOnly)(pubkey);\n    const allHashses = pubkey\n      ? getTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          pubkey,\n          this.__CACHE,\n        )\n      : getAllTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          this.__CACHE,\n        );\n    if (!allHashses.length) throw new Error('No signatures for this pubkey');\n    const tapKeyHash = allHashses.find(h => !h.leafHash);\n    let validationResultCount = 0;\n    if (tapKeySig && tapKeyHash) {\n      const isValidTapkeySig = validator(\n        tapKeyHash.pubkey,\n        tapKeyHash.hash,\n        trimTaprootSig(tapKeySig),\n      );\n      if (!isValidTapkeySig) return false;\n      validationResultCount++;\n    }\n    if (tapScriptSig) {\n      for (const tapSig of tapScriptSig) {\n        const tapSigHash = allHashses.find(h => tapSig.pubkey.equals(h.pubkey));\n        if (tapSigHash) {\n          const isValidTapScriptSig = validator(\n            tapSig.pubkey,\n            tapSigHash.hash,\n            trimTaprootSig(tapSig.signature),\n          );\n          if (!isValidTapScriptSig) return false;\n          validationResultCount++;\n        }\n      }\n    }\n    return validationResultCount > 0;\n  }\n  signAllInputsHD(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(keyPair, sighashTypes) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(inputIndex, keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input)) {\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        undefined,\n        sighashTypes,\n      );\n    }\n    return this._signInput(inputIndex, keyPair, sighashTypes);\n  }\n  signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        tapLeafHashToSign,\n        sighashTypes,\n      );\n    throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n  }\n  _signInput(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: bscript.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  _signTaprootInput(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    const tapKeySig = hashesForSig\n      .filter(h => !h.leafHash)\n      .map(h =>\n        (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n      )[0];\n    const tapScriptSig = hashesForSig\n      .filter(h => !!h.leafHash)\n      .map(h => ({\n        pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n        signature: (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n        leafHash: h.leafHash,\n      }));\n    if (tapKeySig) {\n      this.data.updateInput(inputIndex, { tapKeySig });\n    }\n    if (tapScriptSig.length) {\n      this.data.updateInput(inputIndex, { tapScriptSig });\n    }\n    return this;\n  }\n  signInputAsync(inputIndex, keyPair, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          undefined,\n          sighashTypes,\n        );\n      return this._signInputAsync(inputIndex, keyPair, sighashTypes);\n    });\n  }\n  signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          tapLeafHash,\n          sighashTypes,\n        );\n      throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n    });\n  }\n  _signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    return Promise.resolve(keyPair.sign(hash)).then(signature => {\n      const partialSig = [\n        {\n          pubkey: keyPair.publicKey,\n          signature: bscript.signature.encode(signature, sighashType),\n        },\n      ];\n      this.data.updateInput(inputIndex, { partialSig });\n    });\n  }\n  async _signTaprootInputAsync(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHash,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHash,\n      sighashTypes,\n    );\n    const signaturePromises = [];\n    const tapKeyHash = hashesForSig.filter(h => !h.leafHash)[0];\n    if (tapKeyHash) {\n      const tapKeySigPromise = Promise.resolve(\n        keyPair.signSchnorr(tapKeyHash.hash),\n      ).then(sig => {\n        return {\n          tapKeySig: (0, bip371_1.serializeTaprootSignature)(\n            sig,\n            input.sighashType,\n          ),\n        };\n      });\n      signaturePromises.push(tapKeySigPromise);\n    }\n    const tapScriptHashes = hashesForSig.filter(h => !!h.leafHash);\n    if (tapScriptHashes.length) {\n      const tapScriptSigPromises = tapScriptHashes.map(tsh => {\n        return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(\n          signature => {\n            const tapScriptSig = [\n              {\n                pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n                signature: (0, bip371_1.serializeTaprootSignature)(\n                  signature,\n                  input.sighashType,\n                ),\n                leafHash: tsh.leafHash,\n              },\n            ];\n            return { tapScriptSig };\n          },\n        );\n      });\n      signaturePromises.push(...tapScriptSigPromises);\n    }\n    return Promise.all(signaturePromises).then(results => {\n      results.forEach(v => this.data.updateInput(inputIndex, v));\n    });\n  }\n  checkTaprootHashesForSig(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes,\n  ) {\n    if (typeof keyPair.signSchnorr !== 'function')\n      throw new Error(\n        `Need Schnorr Signer to sign taproot input #${inputIndex}.`,\n      );\n    const hashesForSig = getTaprootHashesForSig(\n      inputIndex,\n      input,\n      this.data.inputs,\n      keyPair.publicKey,\n      this.__CACHE,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    if (!hashesForSig || !hashesForSig.length)\n      throw new Error(\n        `Can not sign for input #${inputIndex} with the key ${keyPair.publicKey.toString(\n          'hex',\n        )}`,\n      );\n    return hashesForSig;\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    (0, bip371_1.checkTaprootInputFields)(\n      this.data.inputs[inputIndex],\n      updateData,\n      'updateInput',\n    );\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const outputData = this.data.outputs[outputIndex];\n    (0, bip371_1.checkTaprootOutputFields)(\n      outputData,\n      updateData,\n      'updateOutput',\n    );\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\nexports.Psbt = Psbt;\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  constructor(buffer = Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = transaction_1.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!Buffer.isBuffer(input.hash) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash, 'hex'))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !Buffer.isBuffer(output.script) ||\n      typeof output.value !== 'number'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = payments.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(pSig => pSig.pubkey.equals(pubkey));\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n    if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    const throws = (0, bip371_1.isTaprootInput)(input)\n      ? (0, bip371_1.checkTaprootInputForSigs)(input, action)\n      : (0, psbtutils_1.checkInputForSig)(input, action);\n    if (throws)\n      throw new Error('Can not modify transaction, signatures exist.');\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = bscript.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!(0, psbtutils_1.pubkeyInScript)(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${pubkey.toString('hex')}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash)).toString('hex') +\n    ':' +\n    input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (!scriptPubKey.equals(redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  payments.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : payments.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : payments.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        p2wsh.witness,\n      );\n    } else {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_ALL;\n  checkSighashTypeAllowed(sighashType, sighashTypes);\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (!prevoutHash.equals(utxoHash)) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if ((0, psbtutils_1.isP2WPKH)(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = payments.p2pkh({\n      hash: meaningfulScript.slice(2),\n    }).output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${meaningfulScript.toString('hex')}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecessor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n  const allPublicKeys = [];\n  if (input.tapInternalKey) {\n    const key = getPrevoutTaprootKey(inputIndex, input, cache);\n    if (key) {\n      allPublicKeys.push(key);\n    }\n  }\n  if (input.tapScriptSig) {\n    const tapScriptPubkeys = input.tapScriptSig.map(tss => tss.pubkey);\n    allPublicKeys.push(...tapScriptPubkeys);\n  }\n  const allHashes = allPublicKeys.map(pubicKey =>\n    getTaprootHashesForSig(inputIndex, input, inputs, pubicKey, cache),\n  );\n  return allHashes.flat();\n}\nfunction getPrevoutTaprootKey(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return (0, psbtutils_1.isP2TR)(script) ? script.subarray(2, 34) : null;\n}\nfunction trimTaprootSig(signature) {\n  return signature.length === 64 ? signature : signature.subarray(0, 64);\n}\nfunction getTaprootHashesForSig(\n  inputIndex,\n  input,\n  inputs,\n  pubkey,\n  cache,\n  tapLeafHashToSign,\n  allowedSighashTypes,\n) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_DEFAULT;\n  checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n  const prevOuts = inputs.map((i, index) =>\n    getScriptAndAmountFromUtxo(index, i, cache),\n  );\n  const signingScripts = prevOuts.map(o => o.script);\n  const values = prevOuts.map(o => o.value);\n  const hashes = [];\n  if (input.tapInternalKey && !tapLeafHashToSign) {\n    const outputKey =\n      getPrevoutTaprootKey(inputIndex, input, cache) || Buffer.from([]);\n    if ((0, bip371_1.toXOnly)(pubkey).equals(outputKey)) {\n      const tapKeyHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n      );\n      hashes.push({ pubkey, hash: tapKeyHash });\n    }\n  }\n  const tapLeafHashes = (input.tapLeafScript || [])\n    .filter(tapLeaf => (0, psbtutils_1.pubkeyInScript)(pubkey, tapLeaf.script))\n    .map(tapLeaf => {\n      const hash = (0, bip341_1.tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion,\n      });\n      return Object.assign({ hash }, tapLeaf);\n    })\n    .filter(\n      tapLeaf => !tapLeafHashToSign || tapLeafHashToSign.equals(tapLeaf.hash),\n    )\n    .map(tapLeaf => {\n      const tapScriptHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n        tapLeaf.hash,\n      );\n      return {\n        pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash,\n      };\n    });\n  return hashes.concat(tapLeafHashes);\n}\nfunction checkSighashTypeAllowed(sighashType, sighashTypes) {\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = payments.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = payments.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = payments.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = payments.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || (0, psbtutils_1.isP2WPKH)(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (!bipDv.pubkey.equals(node.publicKey)) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = payments.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return ps.pubkey.equals(pk);\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case transaction_1.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = transaction_1.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(fee / bytes);\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return script;\n}\nfunction getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return {\n      script: input.witnessUtxo.script,\n      value: input.witnessUtxo.value,\n    };\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n    return { script: o.script, value: o.value };\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = bscript.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !Buffer.isBuffer(lastItem) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return bscript.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = (0, psbtutils_1.isP2SHScript)(script);\n  const isP2SHP2WSH =\n    isP2SH && redeemScript && (0, psbtutils_1.isP2WSHScript)(redeemScript);\n  const isP2WSH = (0, psbtutils_1.isP2WSHScript)(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n      ? 'p2sh'\n      : isP2WSH\n      ? 'p2wsh'\n      : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if (\n    (0, psbtutils_1.isP2WPKH)(script) ||\n    (0, psbtutils_1.isP2SHScript)(script)\n  ) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction classifyScript(script) {\n  if ((0, psbtutils_1.isP2WPKH)(script)) return 'witnesspubkeyhash';\n  if ((0, psbtutils_1.isP2PKH)(script)) return 'pubkeyhash';\n  if ((0, psbtutils_1.isP2MS)(script)) return 'multisig';\n  if ((0, psbtutils_1.isP2PK)(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.initEccLib =\n  exports.Transaction =\n  exports.opcodes =\n  exports.Psbt =\n  exports.Block =\n  exports.script =\n  exports.payments =\n  exports.networks =\n  exports.crypto =\n  exports.address =\n    void 0;\nconst address = require('./address');\nexports.address = address;\nconst crypto = require('./crypto');\nexports.crypto = crypto;\nconst networks = require('./networks');\nexports.networks = networks;\nconst payments = require('./payments');\nexports.payments = payments;\nconst script = require('./script');\nexports.script = script;\nvar block_1 = require('./block');\nObject.defineProperty(exports, 'Block', {\n  enumerable: true,\n  get: function () {\n    return block_1.Block;\n  },\n});\nvar psbt_1 = require('./psbt');\nObject.defineProperty(exports, 'Psbt', {\n  enumerable: true,\n  get: function () {\n    return psbt_1.Psbt;\n  },\n});\n/** @hidden */\nvar ops_1 = require('./ops');\nObject.defineProperty(exports, 'opcodes', {\n  enumerable: true,\n  get: function () {\n    return ops_1.OPS;\n  },\n});\nvar transaction_1 = require('./transaction');\nObject.defineProperty(exports, 'Transaction', {\n  enumerable: true,\n  get: function () {\n    return transaction_1.Transaction;\n  },\n});\nvar ecc_lib_1 = require('./ecc_lib');\nObject.defineProperty(exports, 'initEccLib', {\n  enumerable: true,\n  get: function () {\n    return ecc_lib_1.initEccLib;\n  },\n});\n",
    "/*\n  info from:\n    https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'BitcoinCash',\n  per1: 1e8,\n  unit: 'BCH'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xe8f3e1e3 // careful, sent over wire as little endian\n  },\n  // vSeeds\n  seedsDns: [\n    'seed.bitcoinabc.org',\n    'seed-abc.bitcoinforks.org',\n    'btccash-seeder.bitcoinunlimited.info',\n    'seed.bitprim.org',\n    'seed.deadalnix.me',\n    'seeder.criptolayer.net'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 145,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xf4f3e5f4\n  },\n  seedsDns: [\n    'testnet-seed.bitcoinabc.org',\n    'testnet-seed-abc.bitcoinforks.org',\n    'testnet-seed.bitprim.org',\n    'testnet-seed.deadalnix.me',\n    'testnet-seeder.criptolayer.net'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xfabfb5da\n  },\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n",
    "/*\n  info from:\n    https://github.com/rat4/blackcoin/blob/master/src/chainparams.cpp\n*/\nvar common = {\n  name: 'BlackCoin',\n  per1: 1e8,\n  unit: 'BLK'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000001faef25dec4fbcf906e6242621df2c183bf232f263d0ba5b101911e4563',\n  port: 15714,\n  portRpc: 15715,\n  protocol: {\n    magic: 0x05223570 // careful, sent over wire as little endian\n  },\n  seedsDns: [\n    'rat4.blackcoin.co',\n    'seed.blackcoin.co',\n    'archon.darkfox.id.au',\n    'foxy.seeds.darkfox.id.au',\n    '6.syllabear.us.to',\n    'bcseed.syllabear.us.to'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 0xa,\n    private: 0x99,\n    public: 0x19,\n    scripthash: 0x55\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test: null\n}\n",
    "/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Bitcoin',\n  per1: 1e8,\n  unit: 'BTC',\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd9b4bef9 // careful, sent over wire as little endian\n  },\n  bech32: 'bc',\n  // vSeeds\n  seedsDns: [\n    'seed.bitcoin.sipa.be',\n    'dnsseed.bluematt.me',\n    'seed.bitcoinstats.com',\n    'seed.bitcoin.jonasschnelli.ch',\n    'seed.btc.petertodd.org',\n    'seed.bitcoin.sprovoost.nl',\n    'dnsseed.emzy.de'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 0,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tb',\n  seedsDns: [\n    'testnet-seed.alexykot.me',\n    'testnet-seed.bitcoin.schildbach.de',\n    'testnet-seed.bitcoin.petertodd.org',\n    'testnet-seed.bluematt.me'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'bcrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\n// source: https://github.com/btcsuite/btcd/blob/6867ff32788a1beb9d148e414d7f84f50958f0d2/chaincfg/params.go#L508\nvar simnet = Object.assign({}, {\n  hashGenesisBlock: 'f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68',\n  port: 18555,\n  portRpc: 18556,\n  protocol: {\n    magic: 0x12141c16\n  },\n  bech32: 'sb',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x0420b900,\n      public: 0x0420bd3a\n    },\n    bip44: 115,\n    private: 0x64,\n    public: 0x3f,\n    scripthash: 0x7b\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest,\n  simnet\n}\n",
    "/*\n  info from:\n    https://github.com/BTCGPU/BTCGPU/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Bitcoin Gold',\n  unit: 'BTG'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8338,\n  protocol: {\n    // pchMessageStart\n    magic: 0x446d47e1 // careful, sent over wire as little endian\n  },\n  bech32: 'btg',\n  // vSeeds\n  seedsDns: [\n    'eu-dnsseed.bitcoingold-official.org',\n    'dnsseed.bitcoingold.org',\n    'dnsseed.btcgpu.org'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 156,\n    private: 0x80,\n    public: 0x26,\n    scripthash: 0x17\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '0x00000000e0781ebe24b91eedc293adfea2f557b53ec379e78959de3853e6f9f6',\n  port: 18338,\n  portRpc: 18332,\n  protocol: {\n    magic: 0x456e48e2\n  },\n  bech32: 'tbtg',\n  seedsDns: [\n    'test-dnsseed.bitcoingold.org',\n    'test-dnsseed.btcgpu.org',\n    'eu-test-dnsseed.bitcoingold-official.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 156,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/c0ban/c0ban/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'c0ban',\n  unit: 'RYO'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000005184ffce04351e687a3965b300ee011d26b2089232cd039273be4a67',\n  // nDefaultPort\n  port: 3881,\n  portRpc: 3882,\n  protocol: {\n    magic: 0x6e623063 // pchMessageStart\n  },\n  // vSeeds\n  seedsDns: [\n    'jp01.dnsseed.c0ban.com',\n    'kr01.dnsseed.c0ban.com'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4, // base58Prefixes[EXT_SECRET_KEY]\n      public: 0x0488b21e // base58Prefixes[EXT_PUBLIC_KEY]\n    },\n    // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n    bip44: 88888, // TODO: decide cbn bip44\n    private: 0x88, // base58Prefixes[SECRET_KEY]\n    public: 0x12, // base58Prefixes[PUBKEY_ADDRESS]\n    scripthash: 0x1c // base58Prefixes[SCRIPT_ADDRESS]\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000005184ffce04351e687a3965b300ee011d26b2089232cd039273be4a67',\n  port: 13881,\n  portRpc: 13882,\n  protocol: {\n    magic: 0x8e828083 // pchMessageStart\n  },\n  seedsDns: [\n  ],\n  versions: {\n    bip32: {\n      private: 0x04388388, // base58Prefixes[EXT_SECRET_KEY]\n      public: 0x04588788 // base58Prefixes[EXT_PUBLIC_KEY]\n    },\n    // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n    bip44: 1,\n    private: 0xee, // base58Prefixes[SECRET_KEY]\n    public: 0x76, // base58Prefixes[PUBKEY_ADDRESS]\n    scripthash: 0xc6 // base58Prefixes[SCRIPT_ADDRESS]\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '3249e44acac8fc67e6b94e882525cea6f5a9853e1ff7b4a1d5f470b23ff8ae11',\n  port: 23881,\n  portRpc: 23882,\n  protocol: {\n    magic: 0xdab5bffa // pchMessageStart\n  },\n  seedsDns: [\n  ],\n  versions: {\n    bip32: {\n      private: 0x043587cf, // base58Prefixes[EXT_SECRET_KEY]\n      public: 0x04358394 // base58Prefixes[EXT_PUBLIC_KEY]\n    },\n    // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n    bip44: 1,\n    private: 0xef, // base58Prefixes[SECRET_KEY]\n    public: 0x6f, // base58Prefixes[PUBKEY_ADDRESS]\n    scripthash: 0xc4 // base58Prefixes[SCRIPT_ADDRESS]\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n",
    "var common = {\n  name: 'CityCoin',\n  isProofOfStake: true\n}\n\nvar main = Object.assign({}, {\n  unit: 'CITY',\n  hashGenesisBlock: '00000b0517068e602ed5279c20168cfa1e69884ee4e784909652da34c361bff2',\n  port: 4333,\n  portRpc: 4334,\n  protocol: {\n    magic: 0x43545901\n  },\n  seedsDns: [\n    'seed.city-chain.org',\n    'seed.city-coin.org',\n    'seed.citychain.foundation',\n    'seed.liberstad.com'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 1926,\n    private: 0xed,\n    public: 0x1c,\n    scripthash: 0x58\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  unit: 'TCITY',\n  hashGenesisBlock: '00077765f625cc2cb6266544ff7d5a462f25be14ea1116dc2bd2fec17e40a5e3',\n  port: 24333,\n  portRpc: 24334,\n  protocol: {\n    magic: 0x43545401\n  },\n  seedsDns: [\n    'testseed.city-chain.org',\n    'testseed.city-coin.org',\n    'testseed.citychain.foundation'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 1926,\n    private: 0xc2,\n    public: 0x42,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/dashpay/dash/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Dash',\n  unit: 'DASH'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00000ffd590b1485b3caadc19b22e6379c733355108f107a430458cdf3407ab6',\n  // nDefaultPort\n  port: 9999,\n  portRpc: 9998,\n  protocol: {\n    magic: 0xbd6b0cbf // careful, sent over wire as little endian\n  },\n  // vSeeds\n  seedsDns: [\n    'dash.org',\n    'dnsseed.dash.org',\n    'dashdot.io',\n    'dnsseed.dashdot.io',\n    'masternode.io',\n    'dnsseed.masternode.io',\n    'dashpay.io',\n    'dnsseed.dashpay.io'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 5,\n    private: 0xcc,\n    public: 0x4c,\n    scripthash: 0x10\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '00000bafbc94add76cb75e2ec92894837288a481e5c005f6563d91623bf8bc2c',\n  port: 19999,\n  portRpc: 19998,\n  seedsDns: [\n    'dashdot.io',\n    'testnet-seed.dashdot.io',\n    'masternode.io',\n    'test.dnsseed.masternode.io'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x8c,\n    scripthash: 0x13\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "// https://github.com/carsenk/denarius/blob/master/src/main.cpp\n\nvar common = {\n  name: 'Denarius',\n  unit: 'DNR'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00000d5dbbda01621cfc16bbc1f9bf3264d641a5dbf0de89fd0182c2c4828fcd',\n  port: 33339,\n  portRpc: 32339,\n  protocol: {\n    magic: 0xb4eff2fa\n  },\n  seedsDns: [\n    'denariusexplorer.org',\n    'denarius.host',\n    'denarius.tech',\n    'denarius.network'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 116,\n    private: 0x9e,\n    public: 0x1e,\n    scripthash: 0x5a\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000086bfe8264d241f7f8e5393f747784b8ca2aa98bdd066278d590462a4fdb4',\n  versions: {\n    bip44: 1,\n    private: 0x8c,\n    public: 0x12,\n    scripthash: 0x74\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "var common = {\n  name: 'Decred',\n  unit: 'DCR'\n}\n\n// https://github.com/decred/dcrd/blob/ef71103c95cbf77e5a0418e3d413b5906e710b25/chaincfg/params.go\n// https://github.com/decred/bitcore/blob/a92381b2b0023b28a1b7eb03e6cb0bfb7800200d/lib/networks.js\nvar main = Object.assign({}, {\n  hashGenesisBlock: '298e5cc3d985bfe7f81dc135f360abe089edd4396b86d2de66b0cef42b21d980',\n  port: 9108,\n  portRpc: 9109,\n  protocol: {\n    magic: 0xf900b4d9\n  },\n  seedsDns: [\n    'mainnet-seed.decred.mindcry.org',\n    'mainnet-seed.decred.netpurgatory.com',\n    'mainnet.decredseed.org',\n    'mainnet-seed.decred.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x02fda4e8,\n      public: 0x02fda926\n    },\n    bip44: 42,\n    private: 0x22de,\n    public: 0x073f,\n    scripthash: 0x071a\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '5b7466edf6739adc9b32aaedc54e24bdc59a05f0ced855088835fe3cbe58375f',\n  port: 19108,\n  portRpc: 19109,\n  protocol: {\n    magic: 0x48e7a065\n  },\n  seedsDns: [\n    'testnet-seed.decred.mindcry.org',\n    'testnet-seed.decred.netpurgatory.org',\n    'testnet.decredseed.org',\n    'testnet-seed.decred.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358397,\n      public: 0x043587d1\n    },\n    bip44: 42,\n    private: 0x230e,\n    public: 0x0f21,\n    scripthash: 0x0efc\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/digibyte/digibyte/blob/9e4c0b3ddfd10a7ab852240ff716a7b93af89a07/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'DigiByte',\n  per1: 1e8,\n  unit: 'DGB'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 12024,\n  portRpc: 14022,\n  protocol: {\n    // pchMessageStart\n    magic: 0xfac3b6da // careful, sent over wire as little endian\n  },\n  bech32: 'dgb',\n  // vSeeds\n  seedsDns: [\n    'seed.digibyte.io',\n    'digiexplorer.info',\n    'digihash.co'\n  ],\n  // base58Prefixes\n  versions: {\n    bip44: 0x80000014,\n    private: 0x80,\n    public: 0x1e,\n    scripthash: 0x3f, // new 'S' prefix\n    scripthash2: 0x05 // old '3' prefix\n  }\n}, common)\n\nmodule.exports = { main }\n",
    "// https://github.com/dogecoin/dogecoin/blob/master/src/chainparams.cpp\n\nvar common = {\n  name: 'Dogecoin',\n  unit: 'DOGE'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '1a91e3dace36e2be3bf030a65679fe821aa1d6ef92e7c9902eb318182c355691',\n  port: 22556,\n  protocol: {\n    magic: 0xc0c0c0c0\n  },\n  seedsDns: [\n    'seed.multidoge.org',\n    'seed2.multidoge.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x02fac398,\n      public: 0x02facafd\n    },\n    bip44: 3,\n    private: 0x9e,\n    public: 0x1e,\n    scripthash: 0x16\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: 'bb0a78264637406b6360aad926284d544d7049f45189db5664f3c4d07350559e',\n  port: 44556,\n  protocol: {\n    magic: 0xfcc1b7dc\n  },\n  seedsDns: [\n    'testseed.jrn.me.uk'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xf1,\n    public: 0x71,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Groestlcoin',\n  per1: 1e8,\n  unit: 'GRS',\n  messagePrefix: '\\x1CGroestlCoin Signed Message:\\n'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00000ac5927c594d49cc0bdb81759d0da8297eb614683d3acb62f0703b639023',\n  // nDefaultPort\n  port: 1331,\n  portRpc: 1441,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd4b4bef9 // careful, sent over wire as little endian\n  },\n  bech32: 'grs',\n  // vSeeds\n  seedsDns: [\n    'dnsseed1.groestlcoin.org',\n    'dnsseed2.groestlcoin.org',\n    'dnsseed3.groestlcoin.org',\n    'dnsseed4.groestlcoin.org'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 17,\n    private: 0x80,\n    public: 0x24,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 17777,\n  portRpc: 17766,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tgrs',\n  seedsDns: [\n    'testnet-seed1.groestlcoin.org',\n    'testnet-seed2.groestlcoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0x000000ffbb50fc9898cdd36ec163e6ba23230164c0052a28876255b7dcf2cd36',\n  port: 18888,\n  portRpc: 18443,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'grsrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n",
    "// https://github.com/litecoin-project/litecoin/blob/master-0.10/src/chainparams.cpp\n\nvar common = {\n  name: 'Litecoin',\n  unit: 'LTC'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '12a765e31ffd4059bada1e25190f6e98c99d9714d334efa41a195a7e7e04bfe2',\n  port: 9333,\n  protocol: {\n    magic: 0xdbb6c0fb\n  },\n  bech32: 'ltc',\n  seedsDns: [\n    'dnsseed.litecointools.com',\n    'dnsseed.litecoinpool.org',\n    'dnsseed.ltc.xurious.com',\n    'dnsseed.koin-project.com',\n    'dnsseed.weminemnc.com'\n  ],\n  versions: {\n    bip32: {\n      private: 0x019d9cfe,\n      public: 0x019da462\n    },\n    bip44: 2,\n    private: 0xb0,\n    public: 0x30,\n    scripthash: 0x32,\n    scripthash2: 0x05 // old '3' prefix. available for backward compatibility.\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: 'f5ae71e26c74beacc88382716aced69cddf3dffff24f384e1808905e0188f68f',\n  bech32: 'tltc',\n  versions: {\n    bip32: {\n      private: 0x0436ef7d,\n      public: 0x0436f6e1\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0x3a,\n    scripthash2: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "// https://github.com/viacoin/viacoin/blob/master/src/chainparams.cpp\n\nvar common = {\n  name: 'Viacoin',\n  unit: 'VIA'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '4e9b54001f9976049830128ec0331515eaabe35a70970d79971da1539a400ba1',\n  port: 5223,\n  protocol: {\n    magic: 0xcbc6680f\n  },\n  seedsDns: [\n    'seed.viacoin.net',\n    'viaseeder.barbatos.fr',\n    'mainnet.viacoin.net'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 14,\n    private: 0xc7,\n    public: 0x47,\n    scripthash: 0x21\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '770aa712aa08fdcbdecc1c8df1b3e2d4e17a7cf6e63a28b785b32e74c96cb27d',\n  port: 25223,\n  protocol: {\n    magic: 0x92efc5a9\n  },\n  seedsDns: [\n    'testnet.viacoin.net',\n    'seed-testnet.viacoin.net'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xff,\n    public: 0x7f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "// https://github.com/monacoinproject/monacoin/blob/master-0.13/src/chainparams.cpp\n\nvar common = {\n  name: 'Monacoin',\n  unit: 'MONA'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: 'ff9f1c0116d19de7c9963845e129f9ed1bfc0b376eb54fd7afa42e0d418c8bb6',\n  port: 9401,\n  portRpc: 9402,\n  protocol: {\n    magic: 0xdbb6c0fb\n  },\n  bech32: 'mona',\n  seedsDns: [\n    'dnsseed.monacoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 22,\n    private: 0xb0,\n    private2: 0xb2, // old wif\n    public: 0x32,\n    scripthash: 0x37,\n    scripthash2: 0x05 // old '3' prefix. available for backward compatibility.\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: 'a2b106ceba3be0c6d097b2a6a6aacf9d638ba8258ae478158f449c321061e0b2',\n  port: 19403,\n  portRpc: 19402,\n  protocol: {\n    magic: 0xf1c8d2fd\n  },\n  bech32: 'tmona',\n  seedsDns: [\n    'testnet-dnsseed.monacoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0x75,\n    scripthash2: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "var common = {\n  name: 'NuBits',\n  per1: 1e6,\n  unit: 'NBT'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000003cc2da5a0a289ad0a590c20a8b975219ddc1204efd169e947dd4cbad73f',\n  // nDefaultPort\n  port: 7890,\n  portRpc: 14002,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd9b4bef9 // careful, sent over wire as little endian\n  },\n  // vSeeds\n  seedsDns: [\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 12,\n    private: 0x96,\n    public: 0x19,\n    scripthash: 0x1a\n  }\n}, common)\n\nmodule.exports = {\n  main\n}\n",
    "var common = {\n  name: 'Namecoin',\n  unit: 'NMC'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000062b72c5e2ceb45fbc8587e807c155b0da735e6483dfba2f0a9c770',\n  versions: {\n    bip44: 7,\n    private: 0xb4,\n    public: 0x34,\n    scripthash: 0x05\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test: null\n}\n",
    "// https://github.com/peercoin/peercoin/tree/v0.7.0ppc/src\n// https://github.com/peercoin/peercoin/blob/v0.7.0ppc/src/${filename}\n\nvar common = {\n  name: 'Peercoin',\n  per1: 1e6, // util.h:40\n  unit: 'PPC',\n  messagePrefix: '\\x18Peercoin Signed Message:\\n' // main.cpp:77\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '0000000032fe677166d54963b62a4677d8957e87c508eaa4fd7eb1c880cd27e3', // main.h:84\n  // nDefaultPort\n  port: 9901, // protocol.h:18\n  portRpc: 9902, // protocol.h:19\n  protocol: {\n    // pchMessageStart\n    magic: 0xe5e9e8e6 // careful, sent over wire as little endian protocol.cpp:31\n  },\n  // vSeeds\n  seedsDns: [\n    // net.cpp:1209\n    'seed.peercoin.net',\n    'seed2.peercoin.net',\n    'seed.peercoin-library.org',\n    'ppcseed.ns.7server.net'\n  ],\n  versions: {\n    // not implemented in Peercoin <= v0.7.x nodes, only 3rd party wallets\n    // https://github.com/jmacwhyte/recovery-phrase-recovery/blob/52073aba08e9d01032c0b5aff8c682911fe2e5fc/js/bitcoinjs-extensions.js#L58\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 6, // https://github.com/satoshilabs/slips/blob/master/slip-0044.md\n    private: 0xb7, // base58.h:402 ; 128 + PUBKEY_ADDRESS\n    public: 0x37, // base58.h:276\n    scripthash: 0x75 // base58.h:277\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '00000001f757bb737f6596503e17cd17b0658ce630cc727c0cca81aec47c9f06',\n  port: 9903,\n  portRpc: 9904,\n  protocol: {\n    magic: 0xefc0f2cb\n  },\n  seedsDns: [\n    'tseed.peercoin.net',\n    'tseed2.peercoin.net',\n    'tseed.peercoin-library.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/qtumproject/qtum/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Qtum',\n  unit: 'QTUM'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000075aef83cf2853580f8ae8ce6f8c3096cfa21d98334d6e3f95e5582ed986c',\n  // nDefaultPort\n  port: 3888,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd3a6cff1 // careful, sent over wire as little endian\n  },\n  bech32: 'qc',\n  // vSeeds\n  seedsDns: [\n    'qtum3.dynu.net'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 2301,\n    private: 0x80,\n    public: 0x3A,\n    scripthash: 0x32\n  }\n}, common)\n\nmodule.exports = {\n  main\n}\n",
    "// https://github.com/RavenProject/Ravencoin/blob/master/src/chainparams.cpp\n\nvar common = {\n  name: 'Ravencoin',\n  unit: 'RVN'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90',\n  port: 8767,\n  protocol: {\n    magic: 0x4e564152\n  },\n  bech32: 'rc',\n  seedsDns: [\n    'seed-raven.bitactivate.com',\n    'seed-raven.ravencoin.com',\n    'seed-raven.ravencoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 175,\n    private: 0x80,\n    public: 0x3c,\n    scripthash: 0x7a\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000ecfc5e6324a079542221d00e10362bdc894d56500c414060eea8a3ad5a',\n  port: 18770,\n  protocol: {\n    magic: 0x544e5652\n  },\n  bech32: 'tr',\n  seedsDns: [\n    'seed-testnet-raven.bitactivate.com',\n    'seed-testnet-raven.ravencoin.com',\n    'seed-testnet-raven.ravencoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "var common = {\n  name: 'ReddCoin',\n  unit: 'RDD'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: 'b868e0d95a3c3c0e0dadc67ee587aaf9dc8acbf99e3b4b3110fad4eb74c1decc',\n  versions: {\n    bip44: 4,\n    private: 0xbd,\n    public: 0x3d,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: 'a12ac9bd4cd26262c53a6277aafc61fe9dfe1e2b05eaa1ca148a5be8b394e35a',\n  versions: {\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/vertcoin/vertcoin/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Vertcoin',\n  unit: 'VTC'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '4d96a915f49d40b1e5c2844d1ee2dccb90013a990ccea12c492d22110489f0c4',\n  // nDefaultPort\n  port: 5889,\n  protocol: {\n    // pchMessageStart\n    magic: 0xdab5bffa // careful, sent over wire as little endian\n  },\n  bech32: 'vtc',\n  // vSeeds\n  seedsDns: [\n    'useast1.vtconline.org',\n    'vtc.gertjaap.org',\n    'seed.vtc.bryangoodson.org',\n    'dnsseed.pknight.ca',\n    'seed.orderofthetaco.org',\n    'seed.alexturek.org',\n    'vertcoin.mbl.cash'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 28,\n    private: 0x80,\n    public: 0x47,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: 'cee8f24feb7a64c8f07916976aa4855decac79b6741a8ec2e32e2747497ad2c9',\n  port: 15889,\n  // portRpc: 18332,\n  protocol: {\n    magic: 0x74726576\n  },\n  bech32: 'tvtc',\n  seedsDns: [\n    'jlovejoy.mit.edu',\n    'gertjaap.ddns.net',\n    'fr1.vtconline.org',\n    'tvtc.vertcoin.org'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    private: 0xef,\n    public: 0x4a,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  // portRpc: 18332,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n",
    "var common = {\n  name: 'x42',\n  isProofOfStake: true\n}\n\nvar main = Object.assign({}, {\n  unit: 'x42',\n  hashGenesisBlock: '04ffe583707a96c1c2eb54af33a4b1dc6d9d8e09fea8c9a7b097ba88f0cb64c4',\n  port: 52342,\n  portRpc: 52343,\n  protocol: {\n    magic: 0x3526642\n  },\n  seedsDns: [\n    'mainnet1.x42seed.host',\n    'mainnetnode1.x42seed.host',\n    'tech.x42.cloud',\n    'x42.seed.blockcore.net'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 424242,\n    private: 0xcb,\n    public: 0x4b,\n    scripthash: 0x7d\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  unit: 'Tx42',\n  hashGenesisBlock: 'a92bf124a1e6f237015440d5f1e1999bdef8e321f2d3fdc367eb2f7733b17854',\n  port: 62342,\n  portRpc: 62343,\n  protocol: {\n    magic: 0x4526642\n  },\n  seedsDns: [\n    'testnet1.x42seed.host'\n  ],\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 424242,\n    private: 0xc1,\n    public: 0x41,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "/*\n  info from:\n    https://github.com/zcash/zcash/blob/v1.0.12/src/chainparamsbase.cpp\n    https://github.com/zcash/zcash/blob/v1.0.12/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Zcash',\n  unit: 'ZEC'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '00040fe8ec8471911baa1db1266ea15dd06b4a8a5c453883c000b031973dce08',\n  // nDefaultPort\n  port: 8233,\n  portRpc: 8232,\n  protocol: {\n    // pchMessageStart\n    magic: 0x6427e924 // careful, sent over wire as little endian\n  },\n  // vSeeds\n  seedsDns: [\n    'dnsseed.z.cash',\n    'dnsseed.str4d.xyz',\n    'dnsseed.znodes.org'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 133,\n    private: 0x80,\n    public: 0x1cb8,\n    scripthash: 0x1cbd\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '0x05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38',\n  port: 18233,\n  portRpc: 18232,\n  protocol: {\n    magic: 0xbff91afa\n  },\n  seedsDns: [\n    'dnsseed.testnet.z.cash'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 133,\n    private: 0xef,\n    public: 0x1d25,\n    scripthash: 0x1cba\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test\n}\n",
    "var Buffer = require('safe-buffer').Buffer\n\n// annoyingly, this is for browserify\nvar coins = [\n  require('./coins/bch'),\n  require('./coins/blk'),\n  require('./coins/btc'),\n  require('./coins/btg'),\n  require('./coins/cbn'),\n  require('./coins/city'),\n  require('./coins/dash'),\n  require('./coins/dnr'),\n  require('./coins/dcr'),\n  require('./coins/dgb'),\n  require('./coins/doge'),\n  require('./coins/grs'),\n  require('./coins/ltc'),\n  require('./coins/via'),\n  require('./coins/mona'),\n  require('./coins/nbt'),\n  require('./coins/nmc'),\n  require('./coins/ppc'),\n  require('./coins/qtum'),\n  require('./coins/rvn'),\n  require('./coins/rdd'),\n  require('./coins/vtc'),\n  require('./coins/x42'),\n  require('./coins/zec')\n]\n\nvar supportedCoins = {}\n\ncoins.forEach(function (coin) {\n  var unit = coin.main.unit.toLowerCase()\n  var name = coin.main.name.toLowerCase()\n\n  coin.main.testnet = false\n  coin.main.toBitcoinJS = toBitcoinJS.bind(coin.main)\n  coin.main.toBitcore = toBitcore.bind(coin.main)\n  supportedCoins[unit] = coin.main\n  supportedCoins[name] = coin.main\n\n  if (coin.test) {\n    coin.test.testnet = true\n    coin.test.toBitcoinJS = toBitcoinJS.bind(coin.test)\n    coin.test.toBitcore = toBitcore.bind(coin.test)\n    supportedCoins[unit + '-test'] = coin.test\n    supportedCoins[name + '-test'] = coin.test\n  }\n\n  if (coin.regtest) {\n    coin.regtest.testnet = true\n    coin.regtest.toBitcoinJS = toBitcoinJS.bind(coin.regtest)\n    coin.regtest.toBitcore = toBitcore.bind(coin.regtest)\n    supportedCoins[unit + '-regtest'] = coin.regtest\n    supportedCoins[name + '-regtest'] = coin.regtest\n  }\n\n  if (coin.simnet) {\n    coin.simnet.testnet = true\n    coin.simnet.toBitcoinJS = toBitcoinJS.bind(coin.simnet)\n    coin.simnet.toBitcore = toBitcore.bind(coin.simnet)\n    supportedCoins[unit + '-simnet'] = coin.simnet\n    supportedCoins[name + '-simnet'] = coin.simnet\n  }\n})\n\nfunction coininfo (input) {\n  var coin = input.toLowerCase()\n\n  if (!(coin in supportedCoins)) {\n    return null\n  } else {\n    return supportedCoins[coin]\n  }\n}\n\ncoins.forEach(function (coin) {\n  coininfo[coin.main.name.toLowerCase()] = coin\n})\n\nfunction toBitcoinJS () {\n  return Object.assign({}, this, {\n    messagePrefix: this.messagePrefix || ('\\x19' + this.name + ' Signed Message:\\n'),\n    bech32: this.bech32,\n    bip32: {\n      public: (this.versions.bip32 || {}).public,\n      private: (this.versions.bip32 || {}).private\n    },\n    pubKeyHash: this.versions.public,\n    scriptHash: this.versions.scripthash,\n    wif: this.versions.private,\n    dustThreshold: null // TODO\n  })\n}\n\nfunction toBitcore () {\n  // reverse magic\n  var nm = Buffer.allocUnsafe(4)\n  nm.writeUInt32BE(this.protocol ? this.protocol.magic : 0, 0)\n  nm = nm.readUInt32LE(0)\n\n  return Object.assign({}, this, {\n    name: this.testnet ? 'testnet' : 'livenet',\n    alias: this.testnet ? 'testnet' : 'mainnet',\n    pubkeyhash: this.versions.public,\n    privatekey: this.versions.private,\n    scripthash: this.versions.scripthash,\n    xpubkey: (this.versions.bip32 || {}).public,\n    xprivkey: (this.versions.bip32 || {}).private,\n    networkMagic: nm,\n    port: this.port,\n    dnsSeeds: this.seedsDns || []\n  })\n}\n\nmodule.exports = coininfo\n",
    "\"use strict\";\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexports.CURVE = CURVE;\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = exports.utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => exports.utils.hashToPrivateKey(exports.utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(exports.utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n",
    "var OPS = require(\"@psf/bitcoincash-ops\");\n\nfunction encodingLength(i) {\n  return i < OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\n\nfunction encode(buffer, number, offset) {\n  var size = encodingLength(number);\n\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(number, offset);\n\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(number, offset + 1);\n\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(number, offset + 1);\n\n    // 32 bit\n  } else {\n    buffer.writeUInt8(OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(number, offset + 1);\n  }\n\n  return size;\n}\n\nfunction decode(buffer, offset) {\n  var opcode = buffer.readUInt8(offset);\n  var number, size;\n\n  // ~6 bit\n  if (opcode < OPS.OP_PUSHDATA1) {\n    number = opcode;\n    size = 1;\n\n    // 8 bit\n  } else if (opcode === OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    number = buffer.readUInt8(offset + 1);\n    size = 2;\n\n    // 16 bit\n  } else if (opcode === OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    number = buffer.readUInt16LE(offset + 1);\n    size = 3;\n\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== OPS.OP_PUSHDATA4) throw new Error(\"Unexpected opcode\");\n\n    number = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  };\n}\n\nmodule.exports = {\n  encodingLength: encodingLength,\n  encode: encode,\n  decode: decode\n};\n",
    "var typeforce = require('typeforce')\n\nvar UINT31_MAX = Math.pow(2, 31) - 1\nfunction UInt31 (value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX\n}\n\nfunction BIP32Path (value) {\n  return typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/)\n}\nBIP32Path.toJSON = function () { return 'BIP32 derivation path' }\n\nvar SATOSHI_MAX = 21 * 1e14\nfunction Satoshi (value) {\n  return typeforce.UInt53(value) && value <= SATOSHI_MAX\n}\n\n// external dependent types\nvar BigInt = typeforce.quacksLike('BigInteger')\nvar ECPoint = typeforce.quacksLike('Point')\n\n// exposed, external API\nvar ECSignature = typeforce.compile({ r: BigInt, s: BigInt })\nvar Network = typeforce.compile({\n  messagePrefix: typeforce.oneOf(typeforce.Buffer, typeforce.String),\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32\n  },\n  pubKeyHash: typeforce.UInt8,\n  scriptHash: typeforce.UInt8,\n  wif: typeforce.UInt8\n})\n\n// extend typeforce types with ours\nvar types = {\n  BigInt: BigInt,\n  BIP32Path: BIP32Path,\n  Buffer256bit: typeforce.BufferN(32),\n  ECPoint: ECPoint,\n  ECSignature: ECSignature,\n  Hash160bit: typeforce.BufferN(20),\n  Hash256bit: typeforce.BufferN(32),\n  Network: Network,\n  Satoshi: Satoshi,\n  UInt31: UInt31\n}\n\nfor (var typeName in typeforce) {\n  types[typeName] = typeforce[typeName]\n}\n\nmodule.exports = types\n",
    "var Buffer = require('safe-buffer').Buffer\n\nfunction decode (buffer, maxLength, minimal) {\n  maxLength = maxLength || 4\n  minimal = minimal === undefined ? true : minimal\n\n  var length = buffer.length\n  if (length === 0) return 0\n  if (length > maxLength) throw new TypeError('Script number overflow')\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0) throw new Error('Non-minimally encoded script number')\n    }\n  }\n\n  // 40-bit\n  if (length === 5) {\n    var a = buffer.readUInt32LE(0)\n    var b = buffer.readUInt8(4)\n\n    if (b & 0x80) return -(((b & ~0x80) * 0x100000000) + a)\n    return (b * 0x100000000) + a\n  }\n\n  var result = 0\n\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  for (var i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i)\n  }\n\n  if (buffer[length - 1] & 0x80) return -(result & ~(0x80 << (8 * (length - 1))))\n  return result\n}\n\nfunction scriptNumSize (i) {\n  return i > 0x7fffffff ? 5\n    : i > 0x7fffff ? 4\n      : i > 0x7fff ? 3\n        : i > 0x7f ? 2\n          : i > 0x00 ? 1\n            : 0\n}\n\nfunction encode (number) {\n  var value = Math.abs(number)\n  var size = scriptNumSize(value)\n  var buffer = Buffer.allocUnsafe(size)\n  var negative = number < 0\n\n  for (var i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i)\n    value >>= 8\n  }\n\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1)\n  } else if (negative) {\n    buffer[size - 1] |= 0x80\n  }\n\n  return buffer\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode\n}\n",
    "var OPS = require('./index.json')\n\nvar map = {}\nfor (var op in OPS) {\n  var code = OPS[op]\n  map[code] = op\n}\n\nmodule.exports = map\n",
    "var Buffer = require(\"safe-buffer\").Buffer;\nvar bip66 = require(\"bip66\");\nvar pushdata = require(\"@psf/pushdata-bitcoin\");\nvar typeforce = require(\"typeforce\");\nvar types = require(\"./types\");\nvar scriptNumber = require(\"./script_number\");\n\nvar OPS = require(\"@psf/bitcoincash-ops\");\nvar REVERSE_OPS = require(\"@psf/bitcoincash-ops/map\");\nvar OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\n\nfunction isOPInt(value) {\n  return (\n    types.Number(value) &&\n    (value === OPS.OP_0 ||\n      (value >= OPS.OP_1 && value <= OPS.OP_16) ||\n      value === OPS.OP_1NEGATE)\n  );\n}\n\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\n\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\n\n// This function reaks havoc on the OP_RETURN call of an SLP transaction.\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return OPS.OP_1NEGATE;\n}\n\n// Originalize compile() function. This will not correctly compile some scripts,\n// including the OP_RETURN for SLP tokens. Use compile2() for that.\nfunction compile(chunks) {\n  // TODO: remove me\n  if (Buffer.isBuffer(chunks)) return chunks;\n\n  typeforce(types.Array, chunks);\n\n  var bufferSize = chunks.reduce(function(accum, chunk) {\n    // data chunk\n    if (Buffer.isBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    }\n\n    // opcode\n    return accum + 1;\n  }, 0.0);\n\n  var buffer = Buffer.allocUnsafe(bufferSize);\n  var offset = 0;\n\n  chunks.forEach(function(chunk) {\n    // data chunk\n    if (Buffer.isBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      var opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length;\n\n      // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n\n  if (offset !== buffer.length) throw new Error(\"Could not decode chunks\");\n  return buffer;\n}\n\n// Compile for non-minimal Script, like for SLP OP_RETURNs.\n// Expects an array of Buffers, to be compiled into a binary blob returned\n// as a Buffer. This final blob is ready to used as an output of a Bitcoin\n// Cash transaction.\nfunction compile2(chunks) {\n  // If the chunks object is a Buffer, return it.\n  if (Buffer.isBuffer(chunks)) return chunks\n\n  // Calculate the final size the buffer should be. Allows error checking in\n  // case compilation goes wonky.\n  var bufferSize = chunks.reduce(function(accum, chunk) {\n    // If the chunk is of type Buffer.\n    if (Buffer.isBuffer(chunk)) {\n      // Return the final complied length this Buffer will take up.\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length\n    }\n\n    // Otherwise the chunk object is an OP code. It will take up 1 byte.\n    return accum + 1\n  }, 0.0)\n\n  // buffer will hold final compiled Buffer.\n  var buffer = Buffer.allocUnsafe(bufferSize)\n  var offset = 0\n\n  // Loop through each element in the chunks Array.\n  chunks.forEach(function(chunk, index) {\n    // If the chunk is a Buffer and not an OP code.\n    if (Buffer.isBuffer(chunk)) {\n      // console.log(\" \")\n      // console.log(`index: ${index}`)\n      // console.log(`chunk: ${chunk.toString(\"hex\")}`)\n      // console.log(`original buffer: ${buffer.toString(\"hex\")}`)\n\n      // Calculate the offset for adding this new chunk.\n      offset += pushdata.encode(buffer, chunk.length, offset)\n\n      // Copy the current chunk into the buffer.\n      chunk.copy(buffer, offset)\n\n      // Calculate the new offset.\n      offset += chunk.length\n\n      // The chunk is an OP code and not a Buffer.\n    } else {\n      // Add the 1-byte OP code to the final Buffer output.\n      buffer.writeUInt8(chunk, offset)\n      offset += 1\n    }\n  })\n\n  // If the calculated offset and buffer length don't match, then something\n  // went wrong. Throw an error.\n  if (offset !== buffer.length) throw new Error(\"Could not decode chunks\")\n\n  // Return the final, compiled binary blog as a buffer.\n  return buffer\n}\n\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (types.Array(buffer)) return buffer;\n\n  typeforce(types.Buffer, buffer);\n\n  var chunks = [];\n  var i = 0;\n\n  while (i < buffer.length) {\n    var opcode = buffer[i];\n\n    // data chunk\n    if (opcode > OPS.OP_0 && opcode <= OPS.OP_PUSHDATA4) {\n      var d = pushdata.decode(buffer, i);\n\n      // did reading a pushDataInt fail? empty script\n      if (d === null) return [];\n      i += d.size;\n\n      // attempt to read too much data? empty script\n      // if (i + d.number > buffer.length) return []\n\n      var data = buffer.slice(i, i + d.number);\n      i += d.number;\n\n      // decompile minimally\n      var op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n\n      // opcode\n    } else {\n      chunks.push(opcode);\n\n      i += 1;\n    }\n  }\n\n  return chunks;\n}\n\nfunction toASM(chunks) {\n  if (Buffer.isBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n\n  return chunks\n    .map(function(chunk) {\n      // data?\n      if (Buffer.isBuffer(chunk)) {\n        var op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString(\"hex\");\n        chunk = op;\n      }\n\n      // opcode!\n      return REVERSE_OPS[chunk];\n    })\n    .join(\" \");\n}\n\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n\n  return compile(\n    asm.split(\" \").map(function(chunkStr) {\n      // opcode?\n      if (OPS[chunkStr] !== undefined) return OPS[chunkStr];\n      // typeforce(types.Hex, chunkStr)\n\n      // data!\n      return Buffer.from(chunkStr, \"hex\");\n    })\n  );\n}\n\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n\n  return chunks.map(function(op) {\n    if (Buffer.isBuffer(op)) return op;\n    if (op === OPS.OP_0) return Buffer.allocUnsafe(0);\n\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\n\nfunction isCanonicalPubKey(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (buffer.length < 33) return false;\n\n  switch (buffer[0]) {\n    case 0x02:\n    case 0x03:\n      return buffer.length === 33;\n    case 0x04:\n      return buffer.length === 65;\n  }\n\n  return false;\n}\n\nfunction isDefinedHashType(hashType) {\n  var hashTypeMod = hashType & ~0xc0;\n\n  // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\n\nfunction isCanonicalSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n\n  if(buffer.length === 65) return true;\n\n  return bip66.check(buffer.slice(0, -1));\n}\n\nmodule.exports = {\n  compile: compile,\n  compile2: compile2,\n  decompile: decompile,\n  fromASM: fromASM,\n  toASM: toASM,\n  toStack: toStack,\n\n  number: require(\"./script_number\"),\n\n  isCanonicalPubKey: isCanonicalPubKey,\n  isCanonicalSignature: isCanonicalSignature,\n  isPushOnly: isPushOnly,\n  isDefinedHashType: isDefinedHashType\n};\n",
    "// m [pubKeys ...] n OP_CHECKMULTISIG\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\nvar OP_INT_BASE = OPS.OP_RESERVED // OP_1 - 1\n\nfunction check (script, allowIncomplete) {\n  var chunks = bscript.decompile(script)\n\n  if (chunks.length < 4) return false\n  if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) return false\n  if (!types.Number(chunks[0])) return false\n  if (!types.Number(chunks[chunks.length - 2])) return false\n  var m = chunks[0] - OP_INT_BASE\n  var n = chunks[chunks.length - 2] - OP_INT_BASE\n\n  if (m <= 0) return false\n  if (n > 16) return false\n  if (m > n) return false\n  if (n !== chunks.length - 3) return false\n  if (allowIncomplete) return true\n\n  var keys = chunks.slice(1, -2)\n  return keys.every(bscript.isCanonicalPubKey)\n}\ncheck.toJSON = function () { return 'multi-sig output' }\n\nfunction encode (m, pubKeys) {\n  typeforce({\n    m: types.Number,\n    pubKeys: [bscript.isCanonicalPubKey]\n  }, {\n    m: m,\n    pubKeys: pubKeys\n  })\n\n  var n = pubKeys.length\n  if (n < m) throw new TypeError('Not enough pubKeys provided')\n\n  return bscript.compile([].concat(\n    OP_INT_BASE + m,\n    pubKeys,\n    OP_INT_BASE + n,\n    OPS.OP_CHECKMULTISIG\n  ))\n}\n\nfunction decode (buffer, allowIncomplete) {\n  var chunks = bscript.decompile(buffer)\n  typeforce(check, chunks, allowIncomplete)\n\n  return {\n    m: chunks[0] - OP_INT_BASE,\n    pubKeys: chunks.slice(1, -2)\n  }\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "// OP_0 [signatures ...]\n\nvar Buffer = require('safe-buffer').Buffer\nvar bscript = require('../../script')\nvar p2mso = require('./output')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction partialSignature (value) {\n  return value === OPS.OP_0 || bscript.isCanonicalSignature(value)\n}\n\nfunction check (script, allowIncomplete) {\n  var chunks = bscript.decompile(script)\n  if (chunks.length < 2) return false\n  if (chunks[0] !== OPS.OP_0) return false\n\n  if (allowIncomplete) {\n    return chunks.slice(1).every(partialSignature)\n  }\n\n  return chunks.slice(1).every(bscript.isCanonicalSignature)\n}\ncheck.toJSON = function () { return 'multisig input' }\n\nvar EMPTY_BUFFER = Buffer.allocUnsafe(0)\n\nfunction encodeStack (signatures, scriptPubKey) {\n  typeforce([partialSignature], signatures)\n\n  if (scriptPubKey) {\n    var scriptData = p2mso.decode(scriptPubKey)\n\n    if (signatures.length < scriptData.m) {\n      throw new TypeError('Not enough signatures provided')\n    }\n\n    if (signatures.length > scriptData.pubKeys.length) {\n      throw new TypeError('Too many signatures provided')\n    }\n  }\n\n  return [].concat(EMPTY_BUFFER, signatures.map(function (sig) {\n    if (sig === OPS.OP_0) {\n      return EMPTY_BUFFER\n    }\n    return sig\n  }))\n}\n\nfunction encode (signatures, scriptPubKey) {\n  return bscript.compile(encodeStack(signatures, scriptPubKey))\n}\n\nfunction decodeStack (stack, allowIncomplete) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack, allowIncomplete)\n  return stack.slice(1)\n}\n\nfunction decode (buffer, allowIncomplete) {\n  var stack = bscript.decompile(buffer)\n  return decodeStack(stack, allowIncomplete)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// OP_RETURN {data}\n\nvar bscript = require('../script')\nvar types = require('../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length > 1 &&\n    buffer[0] === OPS.OP_RETURN\n}\ncheck.toJSON = function () { return 'null data output' }\n\nfunction encode (data) {\n  typeforce(types.Buffer, data)\n\n  return bscript.compile([OPS.OP_RETURN, data])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(2)\n}\n\nmodule.exports = {\n  output: {\n    check: check,\n    decode: decode,\n    encode: encode\n  }\n}\n",
    "// {signature}\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 1 &&\n    bscript.isCanonicalSignature(chunks[0])\n}\ncheck.toJSON = function () { return 'pubKey input' }\n\nfunction encodeStack (signature) {\n  typeforce(bscript.isCanonicalSignature, signature)\n  return [signature]\n}\n\nfunction encode (signature) {\n  return bscript.compile(encodeStack(signature))\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n  return stack[0]\n}\n\nfunction decode (buffer) {\n  var stack = bscript.decompile(buffer)\n  return decodeStack(stack)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n}\n",
    "// {pubKey} OP_CHECKSIG\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 2 &&\n    bscript.isCanonicalPubKey(chunks[0]) &&\n    chunks[1] === OPS.OP_CHECKSIG\n}\ncheck.toJSON = function () { return 'pubKey output' }\n\nfunction encode (pubKey) {\n  typeforce(bscript.isCanonicalPubKey, pubKey)\n\n  return bscript.compile([pubKey, OPS.OP_CHECKSIG])\n}\n\nfunction decode (buffer) {\n  var chunks = bscript.decompile(buffer)\n  typeforce(check, chunks)\n\n  return chunks[0]\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// {signature} {pubKey}\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 2 &&\n    bscript.isCanonicalSignature(chunks[0]) &&\n    bscript.isCanonicalPubKey(chunks[1])\n}\ncheck.toJSON = function () { return 'pubKeyHash input' }\n\nfunction encodeStack (signature, pubKey) {\n  typeforce({\n    signature: bscript.isCanonicalSignature,\n    pubKey: bscript.isCanonicalPubKey\n  }, {\n    signature: signature,\n    pubKey: pubKey\n  })\n\n  return [signature, pubKey]\n}\n\nfunction encode (signature, pubKey) {\n  return bscript.compile(encodeStack(signature, pubKey))\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n\n  return {\n    signature: stack[0],\n    pubKey: stack[1]\n  }\n}\n\nfunction decode (buffer) {\n  var stack = bscript.decompile(buffer)\n  return decodeStack(stack)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n}\n",
    "// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length === 25 &&\n    buffer[0] === OPS.OP_DUP &&\n    buffer[1] === OPS.OP_HASH160 &&\n    buffer[2] === 0x14 &&\n    buffer[23] === OPS.OP_EQUALVERIFY &&\n    buffer[24] === OPS.OP_CHECKSIG\n}\ncheck.toJSON = function () { return 'pubKeyHash output' }\n\nfunction encode (pubKeyHash) {\n  typeforce(types.Hash160bit, pubKeyHash)\n\n  return bscript.compile([\n    OPS.OP_DUP,\n    OPS.OP_HASH160,\n    pubKeyHash,\n    OPS.OP_EQUALVERIFY,\n    OPS.OP_CHECKSIG\n  ])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(3, 23)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// OP_0 {pubKeyHash}\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length === 22 &&\n    buffer[0] === OPS.OP_0 &&\n    buffer[1] === 0x14\n}\ncheck.toJSON = function () { return 'Witness pubKeyHash output' }\n\nfunction encode (pubKeyHash) {\n  typeforce(types.Hash160bit, pubKeyHash)\n\n  return bscript.compile([OPS.OP_0, pubKeyHash])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(2)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "// OP_0 {scriptHash}\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length === 34 &&\n    buffer[0] === OPS.OP_0 &&\n    buffer[1] === 0x20\n}\ncheck.toJSON = function () { return 'Witness scriptHash output' }\n\nfunction encode (scriptHash) {\n  typeforce(types.Hash256bit, scriptHash)\n\n  return bscript.compile([OPS.OP_0, scriptHash])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(2)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "// <scriptSig> {serialized scriptPubKey script}\n\nvar Buffer = require('safe-buffer').Buffer\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nvar p2ms = require('../multisig/')\nvar p2pk = require('../pubkey/')\nvar p2pkh = require('../pubkeyhash/')\nvar p2wpkho = require('../witnesspubkeyhash/output')\nvar p2wsho = require('../witnessscripthash/output')\n\nfunction check (script, allowIncomplete) {\n  var chunks = bscript.decompile(script)\n  if (chunks.length < 1) return false\n\n  var lastChunk = chunks[chunks.length - 1]\n  if (!Buffer.isBuffer(lastChunk)) return false\n\n  var scriptSigChunks = bscript.decompile(bscript.compile(chunks.slice(0, -1)))\n  var redeemScriptChunks = bscript.decompile(lastChunk)\n\n  // is redeemScript a valid script?\n  if (redeemScriptChunks.length === 0) return false\n\n  // is redeemScriptSig push only?\n  if (!bscript.isPushOnly(scriptSigChunks)) return false\n\n  // is witness?\n  if (chunks.length === 1) {\n    return p2wsho.check(redeemScriptChunks) ||\n      p2wpkho.check(redeemScriptChunks)\n  }\n\n  // match types\n  if (p2pkh.input.check(scriptSigChunks) &&\n    p2pkh.output.check(redeemScriptChunks)) return true\n\n  if (p2ms.input.check(scriptSigChunks, allowIncomplete) &&\n    p2ms.output.check(redeemScriptChunks)) return true\n\n  if (p2pk.input.check(scriptSigChunks) &&\n    p2pk.output.check(redeemScriptChunks)) return true\n\n  return false\n}\ncheck.toJSON = function () { return 'scriptHash input' }\n\nfunction encodeStack (redeemScriptStack, redeemScript) {\n  var serializedScriptPubKey = bscript.compile(redeemScript)\n\n  return [].concat(redeemScriptStack, serializedScriptPubKey)\n}\n\nfunction encode (redeemScriptSig, redeemScript) {\n  var redeemScriptStack = bscript.decompile(redeemScriptSig)\n\n  return bscript.compile(encodeStack(redeemScriptStack, redeemScript))\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n\n  return {\n    redeemScriptStack: stack.slice(0, -1),\n    redeemScript: stack[stack.length - 1]\n  }\n}\n\nfunction decode (buffer) {\n  var stack = bscript.decompile(buffer)\n  var result = decodeStack(stack)\n  result.redeemScriptSig = bscript.compile(result.redeemScriptStack)\n  delete result.redeemScriptStack\n  return result\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  decodeStack: decodeStack,\n  encode: encode,\n  encodeStack: encodeStack\n}\n",
    "// OP_HASH160 {scriptHash} OP_EQUAL\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length === 23 &&\n    buffer[0] === OPS.OP_HASH160 &&\n    buffer[1] === 0x14 &&\n    buffer[22] === OPS.OP_EQUAL\n}\ncheck.toJSON = function () { return 'scriptHash output' }\n\nfunction encode (scriptHash) {\n  typeforce(types.Hash160bit, scriptHash)\n\n  return bscript.compile([OPS.OP_HASH160, scriptHash, OPS.OP_EQUAL])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return buffer.slice(2, 22)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// {signature} {pubKey}\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nfunction isCompressedCanonicalPubKey (pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33\n}\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 2 &&\n    bscript.isCanonicalSignature(chunks[0]) &&\n    isCompressedCanonicalPubKey(chunks[1])\n}\ncheck.toJSON = function () { return 'witnessPubKeyHash input' }\n\nfunction encodeStack (signature, pubKey) {\n  typeforce({\n    signature: bscript.isCanonicalSignature,\n    pubKey: isCompressedCanonicalPubKey\n  }, {\n    signature: signature,\n    pubKey: pubKey\n  })\n\n  return [signature, pubKey]\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n\n  return {\n    signature: stack[0],\n    pubKey: stack[1]\n  }\n}\n\nmodule.exports = {\n  check: check,\n  decodeStack: decodeStack,\n  encodeStack: encodeStack\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// <scriptSig> {serialized scriptPubKey script}\n\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\n\nvar p2ms = require('../multisig/')\nvar p2pk = require('../pubkey/')\nvar p2pkh = require('../pubkeyhash/')\n\nfunction check (chunks, allowIncomplete) {\n  typeforce(types.Array, chunks)\n  if (chunks.length < 1) return false\n\n  var witnessScript = chunks[chunks.length - 1]\n  if (!Buffer.isBuffer(witnessScript)) return false\n\n  var witnessScriptChunks = bscript.decompile(witnessScript)\n\n  // is witnessScript a valid script?\n  if (witnessScriptChunks.length === 0) return false\n\n  var witnessRawScriptSig = bscript.compile(chunks.slice(0, -1))\n\n  // match types\n  if (p2pkh.input.check(witnessRawScriptSig) &&\n    p2pkh.output.check(witnessScriptChunks)) return true\n\n  if (p2ms.input.check(witnessRawScriptSig, allowIncomplete) &&\n    p2ms.output.check(witnessScriptChunks)) return true\n\n  if (p2pk.input.check(witnessRawScriptSig) &&\n    p2pk.output.check(witnessScriptChunks)) return true\n\n  return false\n}\ncheck.toJSON = function () { return 'witnessScriptHash input' }\n\nfunction encodeStack (witnessData, witnessScript) {\n  typeforce({\n    witnessData: [types.Buffer],\n    witnessScript: types.Buffer\n  }, {\n    witnessData: witnessData,\n    witnessScript: witnessScript\n  })\n\n  return [].concat(witnessData, witnessScript)\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n  return {\n    witnessData: stack.slice(0, -1),\n    witnessScript: stack[stack.length - 1]\n  }\n}\n\nmodule.exports = {\n  check: check,\n  decodeStack: decodeStack,\n  encodeStack: encodeStack\n}\n",
    "module.exports = {\n  input: require('./input'),\n  output: require('./output')\n}\n",
    "// OP_RETURN {aa21a9ed} {commitment}\n\nvar Buffer = require('safe-buffer').Buffer\nvar bscript = require('../../script')\nvar types = require('../../types')\nvar typeforce = require('typeforce')\nvar OPS = require('@psf/bitcoincash-ops')\n\nvar HEADER = Buffer.from('aa21a9ed', 'hex')\n\nfunction check (script) {\n  var buffer = bscript.compile(script)\n\n  return buffer.length > 37 &&\n    buffer[0] === OPS.OP_RETURN &&\n    buffer[1] === 0x24 &&\n    buffer.slice(2, 6).equals(HEADER)\n}\n\ncheck.toJSON = function () { return 'Witness commitment output' }\n\nfunction encode (commitment) {\n  typeforce(types.Hash256bit, commitment)\n\n  var buffer = Buffer.allocUnsafe(36)\n  HEADER.copy(buffer, 0)\n  commitment.copy(buffer, 4)\n\n  return bscript.compile([OPS.OP_RETURN, buffer])\n}\n\nfunction decode (buffer) {\n  typeforce(check, buffer)\n\n  return bscript.decompile(buffer)[1].slice(4, 36)\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n",
    "module.exports = {\n  output: require('./output')\n}\n",
    "var decompile = require('../script').decompile\nvar multisig = require('./multisig')\nvar nullData = require('./nulldata')\nvar pubKey = require('./pubkey')\nvar pubKeyHash = require('./pubkeyhash')\nvar scriptHash = require('./scripthash')\nvar witnessPubKeyHash = require('./witnesspubkeyhash')\nvar witnessScriptHash = require('./witnessscripthash')\nvar witnessCommitment = require('./witnesscommitment')\n\nvar types = {\n  MULTISIG: 'multisig',\n  NONSTANDARD: 'nonstandard',\n  NULLDATA: 'nulldata',\n  P2PK: 'pubkey',\n  P2PKH: 'pubkeyhash',\n  P2SH: 'scripthash',\n  P2WPKH: 'witnesspubkeyhash',\n  P2WSH: 'witnessscripthash',\n  WITNESS_COMMITMENT: 'witnesscommitment'\n}\n\nfunction classifyOutput (script) {\n  if (witnessPubKeyHash.output.check(script)) return types.P2WPKH\n  if (witnessScriptHash.output.check(script)) return types.P2WSH\n  if (pubKeyHash.output.check(script)) return types.P2PKH\n  if (scriptHash.output.check(script)) return types.P2SH\n\n  // XXX: optimization, below functions .decompile before use\n  var chunks = decompile(script)\n  if (multisig.output.check(chunks)) return types.MULTISIG\n  if (pubKey.output.check(chunks)) return types.P2PK\n  if (witnessCommitment.output.check(chunks)) return types.WITNESS_COMMITMENT\n  if (nullData.output.check(chunks)) return types.NULLDATA\n\n  return types.NONSTANDARD\n}\n\nfunction classifyInput (script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  var chunks = decompile(script)\n\n  if (pubKeyHash.input.check(chunks)) return types.P2PKH\n  if (scriptHash.input.check(chunks, allowIncomplete)) return types.P2SH\n  if (multisig.input.check(chunks, allowIncomplete)) return types.MULTISIG\n  if (pubKey.input.check(chunks)) return types.P2PK\n\n  return types.NONSTANDARD\n}\n\nfunction classifyWitness (script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  var chunks = decompile(script)\n\n  if (witnessPubKeyHash.input.check(chunks)) return types.P2WPKH\n  if (witnessScriptHash.input.check(chunks, allowIncomplete)) return types.P2WSH\n\n  return types.NONSTANDARD\n}\n\nmodule.exports = {\n  classifyInput: classifyInput,\n  classifyOutput: classifyOutput,\n  classifyWitness: classifyWitness,\n  multisig: multisig,\n  nullData: nullData,\n  pubKey: pubKey,\n  pubKeyHash: pubKeyHash,\n  scriptHash: scriptHash,\n  witnessPubKeyHash: witnessPubKeyHash,\n  witnessScriptHash: witnessScriptHash,\n  witnessCommitment: witnessCommitment,\n  types: types\n}\n",
    "var pushdata = require('@psf/pushdata-bitcoin')\nvar varuint = require('varuint-bitcoin')\n\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint (value, max) {\n  if (typeof value !== 'number') throw new Error('cannot write a non-number as a number')\n  if (value < 0) throw new Error('specified a negative value for writing an unsigned value')\n  if (value > max) throw new Error('RangeError: value out of range')\n  if (Math.floor(value) !== value) throw new Error('value has a fractional component')\n}\n\nfunction readUInt64LE (buffer, offset) {\n  var a = buffer.readUInt32LE(offset)\n  var b = buffer.readUInt32LE(offset + 4)\n  b *= 0x100000000\n\n  verifuint(b + a, 0x001fffffffffffff)\n\n  return b + a\n}\n\nfunction writeUInt64LE (buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff)\n\n  buffer.writeInt32LE(value & -1, offset)\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4)\n  return offset + 8\n}\n\n// TODO: remove in 4.0.0?\nfunction readVarInt (buffer, offset) {\n  var result = varuint.decode(buffer, offset)\n\n  return {\n    number: result,\n    size: varuint.decode.bytes\n  }\n}\n\n// TODO: remove in 4.0.0?\nfunction writeVarInt (buffer, number, offset) {\n  varuint.encode(number, buffer, offset)\n  return varuint.encode.bytes\n}\n\nmodule.exports = {\n  pushDataSize: pushdata.encodingLength,\n  readPushDataInt: pushdata.decode,\n  readUInt64LE: readUInt64LE,\n  readVarInt: readVarInt,\n  varIntBuffer: varuint.encode,\n  varIntSize: varuint.encodingLength,\n  writePushDataInt: pushdata.encode,\n  writeUInt64LE: writeUInt64LE,\n  writeVarInt: writeVarInt\n}\n",
    "var createHash = require('create-hash')\n\nfunction ripemd160 (buffer) {\n  // return createHash('rmd160').update(buffer).digest()\n  return createHash('ripemd160').update(buffer).digest()\n}\n\nfunction sha1 (buffer) {\n  return createHash('sha1').update(buffer).digest()\n}\n\nfunction sha256 (buffer) {\n  return createHash('sha256').update(buffer).digest()\n}\n\nfunction hash160 (buffer) {\n  return ripemd160(sha256(buffer))\n}\n\nfunction hash256 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n}\n",
    "var Buffer = require('safe-buffer').Buffer\nvar bcrypto = require('./crypto')\nvar bscript = require('./script')\nvar bufferutils = require('./bufferutils')\nvar opcodes = require('@psf/bitcoincash-ops')\nvar typeforce = require('typeforce')\nvar types = require('./types')\nvar varuint = require('varuint-bitcoin')\n\nfunction varSliceSize (someScript) {\n  var length = someScript.length\n\n  return varuint.encodingLength(length) + length\n}\n\nfunction vectorSize (someVector) {\n  var length = someVector.length\n\n  return varuint.encodingLength(length) + someVector.reduce(function (sum, witness) {\n    return sum + varSliceSize(witness)\n  }, 0)\n}\n\nfunction Transaction () {\n  this.version = 2\n  this.locktime = 0\n  this.ins = []\n  this.outs = []\n}\n\nTransaction.DEFAULT_SEQUENCE = 0xffffffff\nTransaction.SIGHASH_ALL = 0x01\nTransaction.SIGHASH_NONE = 0x02\nTransaction.SIGHASH_SINGLE = 0x03\nTransaction.SIGHASH_ANYONECANPAY = 0x80\nTransaction.SIGHASH_BITCOINCASHBIP143 = 0x40\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01\n\nvar EMPTY_SCRIPT = Buffer.allocUnsafe(0)\nvar EMPTY_WITNESS = []\nvar ZERO = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\nvar ONE = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\nvar VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex')\nvar BLANK_OUTPUT = {\n  script: EMPTY_SCRIPT,\n  valueBuffer: VALUE_UINT64_MAX\n}\n\nTransaction.fromBuffer = function (buffer, __noStrict) {\n  var offset = 0\n  function readSlice (n) {\n    offset += n\n    return buffer.slice(offset - n, offset)\n  }\n\n  function readUInt32 () {\n    var i = buffer.readUInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  function readInt32 () {\n    var i = buffer.readInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  function readUInt64 () {\n    var i = bufferutils.readUInt64LE(buffer, offset)\n    offset += 8\n    return i\n  }\n\n  function readVarInt () {\n    var vi = varuint.decode(buffer, offset)\n    offset += varuint.decode.bytes\n    return vi\n  }\n\n  function readVarSlice () {\n    return readSlice(readVarInt())\n  }\n\n  function readVector () {\n    var count = readVarInt()\n    var vector = []\n    for (var i = 0; i < count; i++) vector.push(readVarSlice())\n    return vector\n  }\n\n  var tx = new Transaction()\n  tx.version = readInt32()\n\n  var marker = buffer.readUInt8(offset)\n  var flag = buffer.readUInt8(offset + 1)\n\n  var hasWitnesses = false\n  if (marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n    offset += 2\n    hasWitnesses = true\n  }\n\n  var vinLen = readVarInt()\n  for (var i = 0; i < vinLen; ++i) {\n    tx.ins.push({\n      hash: readSlice(32),\n      index: readUInt32(),\n      script: readVarSlice(),\n      sequence: readUInt32(),\n      witness: EMPTY_WITNESS\n    })\n  }\n\n  var voutLen = readVarInt()\n  for (i = 0; i < voutLen; ++i) {\n    tx.outs.push({\n      value: readUInt64(),\n      script: readVarSlice()\n    })\n  }\n\n  if (hasWitnesses) {\n    for (i = 0; i < vinLen; ++i) {\n      tx.ins[i].witness = readVector()\n    }\n\n    // was this pointless?\n    if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data')\n  }\n\n  tx.locktime = readUInt32()\n\n  if (__noStrict) return tx\n  if (offset !== buffer.length) throw new Error('Transaction has unexpected data')\n\n  return tx\n}\n\nTransaction.fromHex = function (hex) {\n  return Transaction.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nTransaction.isCoinbaseHash = function (buffer) {\n  typeforce(types.Hash256bit, buffer)\n  for (var i = 0; i < 32; ++i) {\n    if (buffer[i] !== 0) return false\n  }\n  return true\n}\n\nTransaction.prototype.isCoinbase = function () {\n  return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n}\n\nTransaction.prototype.addInput = function (hash, index, sequence, scriptSig) {\n  typeforce(types.tuple(\n    types.Hash256bit,\n    types.UInt32,\n    types.maybe(types.UInt32),\n    types.maybe(types.Buffer)\n  ), arguments)\n\n  if (types.Null(sequence)) {\n    sequence = Transaction.DEFAULT_SEQUENCE\n  }\n\n  // Add the input and return the input's index\n  return (this.ins.push({\n    hash: hash,\n    index: index,\n    script: scriptSig || EMPTY_SCRIPT,\n    sequence: sequence,\n    witness: EMPTY_WITNESS\n  }) - 1)\n}\n\nTransaction.prototype.addOutput = function (scriptPubKey, value) {\n  typeforce(types.tuple(types.Buffer, types.Satoshi), arguments)\n\n  // Add the output and return the output's index\n  return (this.outs.push({\n    script: scriptPubKey,\n    value: value\n  }) - 1)\n}\n\nTransaction.prototype.hasWitnesses = function () {\n  return this.ins.some(function (x) {\n    return x.witness.length !== 0\n  })\n}\n\nTransaction.prototype.weight = function () {\n  var base = this.__byteLength(false)\n  var total = this.__byteLength(true)\n  return base * 3 + total\n}\n\nTransaction.prototype.virtualSize = function () {\n  return Math.ceil(this.weight() / 4)\n}\n\nTransaction.prototype.byteLength = function () {\n  return this.__byteLength(true)\n}\n\nTransaction.prototype.__byteLength = function (__allowWitness) {\n  var hasWitnesses = __allowWitness && this.hasWitnesses()\n\n  return (\n    (hasWitnesses ? 10 : 8) +\n    varuint.encodingLength(this.ins.length) +\n    varuint.encodingLength(this.outs.length) +\n    this.ins.reduce(function (sum, input) { return sum + 40 + varSliceSize(input.script) }, 0) +\n    this.outs.reduce(function (sum, output) { return sum + 8 + varSliceSize(output.script) }, 0) +\n    (hasWitnesses ? this.ins.reduce(function (sum, input) { return sum + vectorSize(input.witness) }, 0) : 0)\n  )\n}\n\nTransaction.prototype.clone = function () {\n  var newTx = new Transaction()\n  newTx.version = this.version\n  newTx.locktime = this.locktime\n\n  newTx.ins = this.ins.map(function (txIn) {\n    return {\n      hash: txIn.hash,\n      index: txIn.index,\n      script: txIn.script,\n      sequence: txIn.sequence,\n      witness: txIn.witness\n    }\n  })\n\n  newTx.outs = this.outs.map(function (txOut) {\n    return {\n      script: txOut.script,\n      value: txOut.value\n    }\n  })\n\n  return newTx\n}\n\n/**\n * Hash transaction for signing a specific input.\n *\n * Bitcoin uses a different hash for each signed transaction input.\n * This method copies the transaction, makes the necessary changes based on the\n * hashType, and then hashes the result.\n * This hash can then be used to sign the provided transaction input.\n */\nTransaction.prototype.hashForSignature = function (inIndex, prevOutScript, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number), arguments)\n\n  // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n  if (inIndex >= this.ins.length) return ONE\n\n  // ignore OP_CODESEPARATOR\n  var ourScript = bscript.compile(bscript.decompile(prevOutScript).filter(function (x) {\n    return x !== opcodes.OP_CODESEPARATOR\n  }))\n\n  var txTmp = this.clone()\n\n  // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n  if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n    txTmp.outs = []\n\n    // ignore sequence numbers (except at inIndex)\n    txTmp.ins.forEach(function (input, i) {\n      if (i === inIndex) return\n\n      input.sequence = 0\n    })\n\n  // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n    if (inIndex >= this.outs.length) return ONE\n\n    // truncate outputs after\n    txTmp.outs.length = inIndex + 1\n\n    // \"blank\" outputs before\n    for (var i = 0; i < inIndex; i++) {\n      txTmp.outs[i] = BLANK_OUTPUT\n    }\n\n    // ignore sequence numbers (except at inIndex)\n    txTmp.ins.forEach(function (input, y) {\n      if (y === inIndex) return\n\n      input.sequence = 0\n    })\n  }\n\n  // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n  if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n    txTmp.ins = [txTmp.ins[inIndex]]\n    txTmp.ins[0].script = ourScript\n\n  // SIGHASH_ALL: only ignore input scripts\n  } else {\n    // \"blank\" others input scripts\n    txTmp.ins.forEach(function (input) { input.script = EMPTY_SCRIPT })\n    txTmp.ins[inIndex].script = ourScript\n  }\n\n  // serialize and hash\n  var buffer = Buffer.allocUnsafe(txTmp.__byteLength(false) + 4)\n  buffer.writeInt32LE(hashType, buffer.length - 4)\n  txTmp.__toBuffer(buffer, 0, false)\n\n  return bcrypto.hash256(buffer)\n}\n\nTransaction.prototype.hashForWitnessV0 = function (inIndex, prevOutScript, value, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32), arguments)\n\n  var tbuffer, toffset\n  function writeSlice (slice) { toffset += slice.copy(tbuffer, toffset) }\n  function writeUInt32 (i) { toffset = tbuffer.writeUInt32LE(i, toffset) }\n  function writeUInt64 (i) { toffset = bufferutils.writeUInt64LE(tbuffer, i, toffset) }\n  function writeVarInt (i) {\n    varuint.encode(i, tbuffer, toffset)\n    toffset += varuint.encode.bytes\n  }\n  function writeVarSlice (slice) { writeVarInt(slice.length); writeSlice(slice) }\n\n  var hashOutputs = ZERO\n  var hashPrevouts = ZERO\n  var hashSequence = ZERO\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n    tbuffer = Buffer.allocUnsafe(36 * this.ins.length)\n    toffset = 0\n\n    this.ins.forEach(function (txIn) {\n      writeSlice(txIn.hash)\n      writeUInt32(txIn.index)\n    })\n\n    hashPrevouts = bcrypto.hash256(tbuffer)\n  }\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n       (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n       (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    tbuffer = Buffer.allocUnsafe(4 * this.ins.length)\n    toffset = 0\n\n    this.ins.forEach(function (txIn) {\n      writeUInt32(txIn.sequence)\n    })\n\n    hashSequence = bcrypto.hash256(tbuffer)\n  }\n\n  if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    var txOutsSize = this.outs.reduce(function (sum, output) {\n      return sum + 8 + varSliceSize(output.script)\n    }, 0)\n\n    tbuffer = Buffer.allocUnsafe(txOutsSize)\n    toffset = 0\n\n    this.outs.forEach(function (out) {\n      writeUInt64(out.value)\n      writeVarSlice(out.script)\n    })\n\n    hashOutputs = bcrypto.hash256(tbuffer)\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n    var output = this.outs[inIndex]\n\n    tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script))\n    toffset = 0\n    writeUInt64(output.value)\n    writeVarSlice(output.script)\n\n    hashOutputs = bcrypto.hash256(tbuffer)\n  }\n\n  tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript))\n  toffset = 0\n\n  var input = this.ins[inIndex]\n  writeUInt32(this.version)\n  writeSlice(hashPrevouts)\n  writeSlice(hashSequence)\n  writeSlice(input.hash)\n  writeUInt32(input.index)\n  writeVarSlice(prevOutScript)\n  writeUInt64(value)\n  writeUInt32(input.sequence)\n  writeSlice(hashOutputs)\n  writeUInt32(this.locktime)\n  writeUInt32(hashType)\n  return bcrypto.hash256(tbuffer)\n}\n\n/**\n * Hash transaction for signing a specific input for Bitcoin Cash.\n */\nTransaction.prototype.hashForCashSignature = function (inIndex, prevOutScript, inAmount, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number, types.maybe(types.UInt53)), arguments)\n\n  // This function works the way it does because Bitcoin Cash\n  // uses BIP143 as their replay protection, AND their algo\n  // includes `forkId | hashType`, AND since their forkId=0,\n  // this is a NOP, and has no difference to segwit. To support\n  // other forks, another parameter is required, and a new parameter\n  // would be required in the hashForWitnessV0 function, or\n  // it could be broken into two..\n\n  // BIP143 sighash activated in BitcoinCash via 0x40 bit\n  if (hashType & Transaction.SIGHASH_BITCOINCASHBIP143) {\n    if (types.Null(inAmount)) {\n      throw new Error('Bitcoin Cash sighash requires value of input to be signed.')\n    }\n    return this.hashForWitnessV0(inIndex, prevOutScript, inAmount, hashType)\n  } else {\n    return this.hashForSignature(inIndex, prevOutScript, hashType)\n  }\n}\n\nTransaction.prototype.getHash = function () {\n  return bcrypto.hash256(this.__toBuffer(undefined, undefined, false))\n}\n\nTransaction.prototype.getId = function () {\n  // transaction hash's are displayed in reverse order\n  return this.getHash().reverse().toString('hex')\n}\n\nTransaction.prototype.toBuffer = function (buffer, initialOffset) {\n  return this.__toBuffer(buffer, initialOffset, true)\n}\n\nTransaction.prototype.__toBuffer = function (buffer, initialOffset, __allowWitness) {\n  if (!buffer) buffer = Buffer.allocUnsafe(this.__byteLength(__allowWitness))\n\n  var offset = initialOffset || 0\n  function writeSlice (slice) { offset += slice.copy(buffer, offset) }\n  function writeUInt8 (i) { offset = buffer.writeUInt8(i, offset) }\n  function writeUInt32 (i) { offset = buffer.writeUInt32LE(i, offset) }\n  function writeInt32 (i) { offset = buffer.writeInt32LE(i, offset) }\n  function writeUInt64 (i) { offset = bufferutils.writeUInt64LE(buffer, i, offset) }\n  function writeVarInt (i) {\n    varuint.encode(i, buffer, offset)\n    offset += varuint.encode.bytes\n  }\n  function writeVarSlice (slice) { writeVarInt(slice.length); writeSlice(slice) }\n  function writeVector (vector) { writeVarInt(vector.length); vector.forEach(writeVarSlice) }\n\n  writeInt32(this.version)\n\n  var hasWitnesses = __allowWitness && this.hasWitnesses()\n\n  if (hasWitnesses) {\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER)\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG)\n  }\n\n  writeVarInt(this.ins.length)\n\n  this.ins.forEach(function (txIn) {\n    writeSlice(txIn.hash)\n    writeUInt32(txIn.index)\n    writeVarSlice(txIn.script)\n    writeUInt32(txIn.sequence)\n  })\n\n  writeVarInt(this.outs.length)\n  this.outs.forEach(function (txOut) {\n    if (!txOut.valueBuffer) {\n      writeUInt64(txOut.value)\n    } else {\n      writeSlice(txOut.valueBuffer)\n    }\n\n    writeVarSlice(txOut.script)\n  })\n\n  if (hasWitnesses) {\n    this.ins.forEach(function (input) {\n      writeVector(input.witness)\n    })\n  }\n\n  writeUInt32(this.locktime)\n\n  // avoid slicing unless necessary\n  if (initialOffset !== undefined) return buffer.slice(initialOffset, offset)\n  return buffer\n}\n\nTransaction.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nTransaction.prototype.setInputScript = function (index, scriptSig) {\n  typeforce(types.tuple(types.Number, types.Buffer), arguments)\n\n  this.ins[index].script = scriptSig\n}\n\nTransaction.prototype.setWitness = function (index, witness) {\n  typeforce(types.tuple(types.Number, [types.Buffer]), arguments)\n\n  this.ins[index].witness = witness\n}\n\nmodule.exports = Transaction\n",
    "var Buffer = require('safe-buffer').Buffer\nvar bcrypto = require('./crypto')\nvar fastMerkleRoot = require('merkle-lib/fastRoot')\nvar typeforce = require('typeforce')\nvar types = require('./types')\nvar varuint = require('varuint-bitcoin')\n\nvar Transaction = require('./transaction')\n\nfunction Block () {\n  this.version = 1\n  this.prevHash = null\n  this.merkleRoot = null\n  this.timestamp = 0\n  this.bits = 0\n  this.nonce = 0\n}\n\nBlock.fromBuffer = function (buffer) {\n  if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)')\n\n  var offset = 0\n  function readSlice (n) {\n    offset += n\n    return buffer.slice(offset - n, offset)\n  }\n\n  function readUInt32 () {\n    var i = buffer.readUInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  function readInt32 () {\n    var i = buffer.readInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  var block = new Block()\n  block.version = readInt32()\n  block.prevHash = readSlice(32)\n  block.merkleRoot = readSlice(32)\n  block.timestamp = readUInt32()\n  block.bits = readUInt32()\n  block.nonce = readUInt32()\n\n  if (buffer.length === 80) return block\n\n  function readVarInt () {\n    var vi = varuint.decode(buffer, offset)\n    offset += varuint.decode.bytes\n    return vi\n  }\n\n  function readTransaction () {\n    var tx = Transaction.fromBuffer(buffer.slice(offset), true)\n    offset += tx.byteLength()\n    return tx\n  }\n\n  var nTransactions = readVarInt()\n  block.transactions = []\n\n  for (var i = 0; i < nTransactions; ++i) {\n    var tx = readTransaction()\n    block.transactions.push(tx)\n  }\n\n  return block\n}\n\nBlock.prototype.byteLength = function (headersOnly) {\n  if (headersOnly || !this.transactions) return 80\n\n  return 80 + varuint.encodingLength(this.transactions.length) + this.transactions.reduce(function (a, x) {\n    return a + x.byteLength()\n  }, 0)\n}\n\nBlock.fromHex = function (hex) {\n  return Block.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBlock.prototype.getHash = function () {\n  return bcrypto.hash256(this.toBuffer(true))\n}\n\nBlock.prototype.getId = function () {\n  return this.getHash().reverse().toString('hex')\n}\n\nBlock.prototype.getUTCDate = function () {\n  var date = new Date(0) // epoch\n  date.setUTCSeconds(this.timestamp)\n\n  return date\n}\n\n// TODO: buffer, offset compatibility\nBlock.prototype.toBuffer = function (headersOnly) {\n  var buffer = Buffer.allocUnsafe(this.byteLength(headersOnly))\n\n  var offset = 0\n  function writeSlice (slice) {\n    slice.copy(buffer, offset)\n    offset += slice.length\n  }\n\n  function writeInt32 (i) {\n    buffer.writeInt32LE(i, offset)\n    offset += 4\n  }\n  function writeUInt32 (i) {\n    buffer.writeUInt32LE(i, offset)\n    offset += 4\n  }\n\n  writeInt32(this.version)\n  writeSlice(this.prevHash)\n  writeSlice(this.merkleRoot)\n  writeUInt32(this.timestamp)\n  writeUInt32(this.bits)\n  writeUInt32(this.nonce)\n\n  if (headersOnly || !this.transactions) return buffer\n\n  varuint.encode(this.transactions.length, buffer, offset)\n  offset += varuint.encode.bytes\n\n  this.transactions.forEach(function (tx) {\n    var txSize = tx.byteLength() // TODO: extract from toBuffer?\n    tx.toBuffer(buffer, offset)\n    offset += txSize\n  })\n\n  return buffer\n}\n\nBlock.prototype.toHex = function (headersOnly) {\n  return this.toBuffer(headersOnly).toString('hex')\n}\n\nBlock.calculateTarget = function (bits) {\n  var exponent = ((bits & 0xff000000) >> 24) - 3\n  var mantissa = bits & 0x007fffff\n  var target = Buffer.alloc(32, 0)\n  target.writeUInt32BE(mantissa, 28 - exponent)\n  return target\n}\n\nBlock.calculateMerkleRoot = function (transactions) {\n  typeforce([{ getHash: types.Function }], transactions)\n  if (transactions.length === 0) throw TypeError('Cannot compute merkle root for zero transactions')\n\n  var hashes = transactions.map(function (transaction) {\n    return transaction.getHash()\n  })\n\n  return fastMerkleRoot(hashes, bcrypto.hash256)\n}\n\nBlock.prototype.checkMerkleRoot = function () {\n  if (!this.transactions) return false\n\n  var actualMerkleRoot = Block.calculateMerkleRoot(this.transactions)\n  return this.merkleRoot.compare(actualMerkleRoot) === 0\n}\n\nBlock.prototype.checkProofOfWork = function () {\n  var hash = this.getHash().reverse()\n  var target = Block.calculateTarget(this.bits)\n\n  return hash.compare(target) <= 0\n}\n\nmodule.exports = Block\n",
    "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n",
    "// https://en.bitcoin.it/wiki/List_of_address_prefixes\n// Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731\n\nmodule.exports = {\n  bitcoin: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: {\n      public: 0x0488b21e,\n      private: 0x0488ade4\n    },\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80\n  },\n  testnet: {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'tb',\n    bip32: {\n      public: 0x043587cf,\n      private: 0x04358394\n    },\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    wif: 0xef\n  },\n  litecoin: {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bip32: {\n      public: 0x019da462,\n      private: 0x019d9cfe\n    },\n    pubKeyHash: 0x30,\n    scriptHash: 0x32,\n    wif: 0xb0\n  }\n}\n",
    "var Buffer = require('safe-buffer').Buffer\nvar bech32 = require('bech32')\nvar bs58check = require('bs58check')\nvar bscript = require('./script')\nvar btemplates = require('./templates')\nvar networks = require('./networks')\nvar typeforce = require('typeforce')\nvar types = require('./types')\n\nfunction fromBase58Check (address) {\n  var payload = bs58check.decode(address)\n\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short')\n  if (payload.length > 21) throw new TypeError(address + ' is too long')\n\n  var version = payload.readUInt8(0)\n  var hash = payload.slice(1)\n\n  return { version: version, hash: hash }\n}\n\nfunction fromBech32 (address) {\n  var result = bech32.decode(address)\n  var data = bech32.fromWords(result.words.slice(1))\n\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data)\n  }\n}\n\nfunction toBase58Check (hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments)\n\n  var payload = Buffer.allocUnsafe(21)\n  payload.writeUInt8(version, 0)\n  hash.copy(payload, 1)\n\n  return bs58check.encode(payload)\n}\n\nfunction toBech32 (data, version, prefix) {\n  var words = bech32.toWords(data)\n  words.unshift(version)\n\n  return bech32.encode(prefix, words)\n}\n\nfunction fromOutputScript (outputScript, network) {\n  network = network || networks.bitcoin\n\n  if (btemplates.pubKeyHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(3, 23), network.pubKeyHash)\n  if (btemplates.scriptHash.output.check(outputScript)) return toBase58Check(bscript.compile(outputScript).slice(2, 22), network.scriptHash)\n  if (btemplates.witnessPubKeyHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 22), 0, network.bech32)\n  if (btemplates.witnessScriptHash.output.check(outputScript)) return toBech32(bscript.compile(outputScript).slice(2, 34), 0, network.bech32)\n\n  throw new Error(bscript.toASM(outputScript) + ' has no matching Address')\n}\n\nfunction toOutputScript (address, network) {\n  network = network || networks.bitcoin\n\n  var decode\n  try {\n    decode = fromBase58Check(address)\n  } catch (e) {}\n\n  if (decode) {\n    if (decode.version === network.pubKeyHash) return btemplates.pubKeyHash.output.encode(decode.hash)\n    if (decode.version === network.scriptHash) return btemplates.scriptHash.output.encode(decode.hash)\n  } else {\n    try {\n      decode = fromBech32(address)\n    } catch (e) {}\n\n    if (decode) {\n      if (decode.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix')\n      if (decode.version === 0) {\n        if (decode.data.length === 20) return btemplates.witnessPubKeyHash.output.encode(decode.data)\n        if (decode.data.length === 32) return btemplates.witnessScriptHash.output.encode(decode.data)\n      }\n    }\n  }\n\n  throw new Error(address + ' has no matching Script')\n}\n\nmodule.exports = {\n  fromBase58Check: fromBase58Check,\n  fromBech32: fromBech32,\n  fromOutputScript: fromOutputScript,\n  toBase58Check: toBase58Check,\n  toBech32: toBech32,\n  toOutputScript: toOutputScript\n}\n",
    "// (public) Constructor\nfunction BigInteger(a, b, c) {\n  if (!(this instanceof BigInteger))\n    return new BigInteger(a, b, c)\n\n  if (a != null) {\n    if (\"number\" == typeof a) this.fromNumber(a, b, c)\n    else if (b == null && \"string\" != typeof a) this.fromString(a, 256)\n    else this.fromString(a, b)\n  }\n}\n\nvar proto = BigInteger.prototype\n\n// duck-typed isBigInteger\nproto.__bigi = require('../package.json').version\nBigInteger.isBigInteger = function (obj, check_ver) {\n  return obj && obj.__bigi && (!check_ver || obj.__bigi === proto.__bigi)\n}\n\n// Bits per digit\nvar dbits\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n  while (--n >= 0) {\n    var v = x * this[i++] + w[j] + c\n    c = Math.floor(v / 0x4000000)\n    w[j++] = v & 0x3ffffff\n  }\n  return c\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n  var xl = x & 0x7fff,\n    xh = x >> 15\n  while (--n >= 0) {\n    var l = this[i] & 0x7fff\n    var h = this[i++] >> 15\n    var m = xh * l + h * xl\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff)\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30)\n    w[j++] = l & 0x3fffffff\n  }\n  return c\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n  var xl = x & 0x3fff,\n    xh = x >> 14\n  while (--n >= 0) {\n    var l = this[i] & 0x3fff\n    var h = this[i++] >> 14\n    var m = xh * l + h * xl\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c\n    c = (l >> 28) + (m >> 14) + xh * h\n    w[j++] = l & 0xfffffff\n  }\n  return c\n}\n\n// wtf?\nBigInteger.prototype.am = am1\ndbits = 26\n\nBigInteger.prototype.DB = dbits\nBigInteger.prototype.DM = ((1 << dbits) - 1)\nvar DV = BigInteger.prototype.DV = (1 << dbits)\n\nvar BI_FP = 52\nBigInteger.prototype.FV = Math.pow(2, BI_FP)\nBigInteger.prototype.F1 = BI_FP - dbits\nBigInteger.prototype.F2 = 2 * dbits - BI_FP\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\"\nvar BI_RC = new Array()\nvar rr, vv\nrr = \"0\".charCodeAt(0)\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv\nrr = \"a\".charCodeAt(0)\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv\nrr = \"A\".charCodeAt(0)\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv\n\nfunction int2char(n) {\n  return BI_RM.charAt(n)\n}\n\nfunction intAt(s, i) {\n  var c = BI_RC[s.charCodeAt(i)]\n  return (c == null) ? -1 : c\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i]\n  r.t = this.t\n  r.s = this.s\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1\n  this.s = (x < 0) ? -1 : 0\n  if (x > 0) this[0] = x\n  else if (x < -1) this[0] = x + DV\n  else this.t = 0\n}\n\n// return bigint initialized to value\nfunction nbv(i) {\n  var r = new BigInteger()\n  r.fromInt(i)\n  return r\n}\n\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n  var self = this\n\n  var k\n  if (b == 16) k = 4\n  else if (b == 8) k = 3\n  else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1\n  else if (b == 32) k = 5\n  else if (b == 4) k = 2\n  else {\n    self.fromRadix(s, b)\n    return\n  }\n  self.t = 0\n  self.s = 0\n  var i = s.length,\n    mi = false,\n    sh = 0\n  while (--i >= 0) {\n    var x = (k == 8) ? s[i] & 0xff : intAt(s, i)\n    if (x < 0) {\n      if (s.charAt(i) == \"-\") mi = true\n      continue\n    }\n    mi = false\n    if (sh == 0)\n      self[self.t++] = x\n    else if (sh + k > self.DB) {\n      self[self.t - 1] |= (x & ((1 << (self.DB - sh)) - 1)) << sh\n      self[self.t++] = (x >> (self.DB - sh))\n    } else\n      self[self.t - 1] |= x << sh\n    sh += k\n    if (sh >= self.DB) sh -= self.DB\n  }\n  if (k == 8 && (s[0] & 0x80) != 0) {\n    self.s = -1\n    if (sh > 0) self[self.t - 1] |= ((1 << (self.DB - sh)) - 1) << sh\n  }\n  self.clamp()\n  if (mi) BigInteger.ZERO.subTo(self, self)\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s & this.DM\n  while (this.t > 0 && this[this.t - 1] == c)--this.t\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  var self = this\n  if (self.s < 0) return \"-\" + self.negate()\n    .toString(b)\n  var k\n  if (b == 16) k = 4\n  else if (b == 8) k = 3\n  else if (b == 2) k = 1\n  else if (b == 32) k = 5\n  else if (b == 4) k = 2\n  else return self.toRadix(b)\n  var km = (1 << k) - 1,\n    d, m = false,\n    r = \"\",\n    i = self.t\n  var p = self.DB - (i * self.DB) % k\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) > 0) {\n      m = true\n      r = int2char(d)\n    }\n    while (i >= 0) {\n      if (p < k) {\n        d = (self[i] & ((1 << p) - 1)) << (k - p)\n        d |= self[--i] >> (p += self.DB - k)\n      } else {\n        d = (self[i] >> (p -= k)) & km\n        if (p <= 0) {\n          p += self.DB\n          --i\n        }\n      }\n      if (d > 0) m = true\n      if (m) r += int2char(d)\n    }\n  }\n  return m ? r : \"0\"\n}\n\n// (public) -this\nfunction bnNegate() {\n  var r = new BigInteger()\n  BigInteger.ZERO.subTo(this, r)\n  return r\n}\n\n// (public) |this|\nfunction bnAbs() {\n  return (this.s < 0) ? this.negate() : this\n}\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s - a.s\n  if (r != 0) return r\n  var i = this.t\n  r = i - a.t\n  if (r != 0) return (this.s < 0) ? -r : r\n  while (--i >= 0)\n    if ((r = this[i] - a[i]) != 0) return r\n  return 0\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1,\n    t\n  if ((t = x >>> 16) != 0) {\n    x = t\n    r += 16\n  }\n  if ((t = x >> 8) != 0) {\n    x = t\n    r += 8\n  }\n  if ((t = x >> 4) != 0) {\n    x = t\n    r += 4\n  }\n  if ((t = x >> 2) != 0) {\n    x = t\n    r += 2\n  }\n  if ((t = x >> 1) != 0) {\n    x = t\n    r += 1\n  }\n  return r\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if (this.t <= 0) return 0\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM))\n}\n\n// (public) return the number of bytes in \"this\"\nfunction bnByteLength() {\n  return this.bitLength() >> 3\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n  var i\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i]\n  for (i = n - 1; i >= 0; --i) r[i] = 0\n  r.t = this.t + n\n  r.s = this.s\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n  for (var i = n; i < this.t; ++i) r[i - n] = this[i]\n  r.t = Math.max(this.t - n, 0)\n  r.s = this.s\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n  var self = this\n  var bs = n % self.DB\n  var cbs = self.DB - bs\n  var bm = (1 << cbs) - 1\n  var ds = Math.floor(n / self.DB),\n    c = (self.s << bs) & self.DM,\n    i\n  for (i = self.t - 1; i >= 0; --i) {\n    r[i + ds + 1] = (self[i] >> cbs) | c\n    c = (self[i] & bm) << bs\n  }\n  for (i = ds - 1; i >= 0; --i) r[i] = 0\n  r[ds] = c\n  r.t = self.t + ds + 1\n  r.s = self.s\n  r.clamp()\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n  var self = this\n  r.s = self.s\n  var ds = Math.floor(n / self.DB)\n  if (ds >= self.t) {\n    r.t = 0\n    return\n  }\n  var bs = n % self.DB\n  var cbs = self.DB - bs\n  var bm = (1 << bs) - 1\n  r[0] = self[ds] >> bs\n  for (var i = ds + 1; i < self.t; ++i) {\n    r[i - ds - 1] |= (self[i] & bm) << cbs\n    r[i - ds] = self[i] >> bs\n  }\n  if (bs > 0) r[self.t - ds - 1] |= (self.s & bm) << cbs\n  r.t = self.t - ds\n  r.clamp()\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n  var self = this\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, self.t)\n  while (i < m) {\n    c += self[i] - a[i]\n    r[i++] = c & self.DM\n    c >>= self.DB\n  }\n  if (a.t < self.t) {\n    c -= a.s\n    while (i < self.t) {\n      c += self[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += self.s\n  } else {\n    c += self.s\n    while (i < a.t) {\n      c -= a[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c -= a.s\n  }\n  r.s = (c < 0) ? -1 : 0\n  if (c < -1) r[i++] = self.DV + c\n  else if (c > 0) r[i++] = c\n  r.t = i\n  r.clamp()\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n  var x = this.abs(),\n    y = a.abs()\n  var i = x.t\n  r.t = i + y.t\n  while (--i >= 0) r[i] = 0\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t)\n  r.s = 0\n  r.clamp()\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r)\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs()\n  var i = r.t = 2 * x.t\n  while (--i >= 0) r[i] = 0\n  for (i = 0; i < x.t - 1; ++i) {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1)\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n      r[i + x.t] -= x.DV\n      r[i + x.t + 1] = 1\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1)\n  r.s = 0\n  r.clamp()\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n  var self = this\n  var pm = m.abs()\n  if (pm.t <= 0) return\n  var pt = self.abs()\n  if (pt.t < pm.t) {\n    if (q != null) q.fromInt(0)\n    if (r != null) self.copyTo(r)\n    return\n  }\n  if (r == null) r = new BigInteger()\n  var y = new BigInteger(),\n    ts = self.s,\n    ms = m.s\n  var nsh = self.DB - nbits(pm[pm.t - 1]); // normalize modulus\n  if (nsh > 0) {\n    pm.lShiftTo(nsh, y)\n    pt.lShiftTo(nsh, r)\n  } else {\n    pm.copyTo(y)\n    pt.copyTo(r)\n  }\n  var ys = y.t\n  var y0 = y[ys - 1]\n  if (y0 == 0) return\n  var yt = y0 * (1 << self.F1) + ((ys > 1) ? y[ys - 2] >> self.F2 : 0)\n  var d1 = self.FV / yt,\n    d2 = (1 << self.F1) / yt,\n    e = 1 << self.F2\n  var i = r.t,\n    j = i - ys,\n    t = (q == null) ? new BigInteger() : q\n  y.dlShiftTo(j, t)\n  if (r.compareTo(t) >= 0) {\n    r[r.t++] = 1\n    r.subTo(t, r)\n  }\n  BigInteger.ONE.dlShiftTo(ys, t)\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y[y.t++] = 0\n  while (--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i] == y0) ? self.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2)\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\n      y.dlShiftTo(j, t)\n      r.subTo(t, r)\n      while (r[i] < --qd) r.subTo(t, r)\n    }\n  }\n  if (q != null) {\n    r.drShiftTo(ys, q)\n    if (ts != ms) BigInteger.ZERO.subTo(q, q)\n  }\n  r.t = ys\n  r.clamp()\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r)\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = new BigInteger()\n  this.abs()\n    .divRemTo(a, null, r)\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r)\n  return r\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) {\n  this.m = m\n}\n\nfunction cConvert(x) {\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m)\n  else return x\n}\n\nfunction cRevert(x) {\n  return x\n}\n\nfunction cReduce(x) {\n  x.divRemTo(this.m, null, x)\n}\n\nfunction cMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nfunction cSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\nClassic.prototype.convert = cConvert\nClassic.prototype.revert = cRevert\nClassic.prototype.reduce = cReduce\nClassic.prototype.mulTo = cMulTo\nClassic.prototype.sqrTo = cSqrTo\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if (this.t < 1) return 0\n  var x = this[0]\n  if ((x & 1) == 0) return 0\n  var y = x & 3; // y == 1/x mod 2^2\n  y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n  y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n  y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y > 0) ? this.DV - y : -y\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m\n  this.mp = m.invDigit()\n  this.mpl = this.mp & 0x7fff\n  this.mph = this.mp >> 15\n  this.um = (1 << (m.DB - 15)) - 1\n  this.mt2 = 2 * m.t\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = new BigInteger()\n  x.abs()\n    .dlShiftTo(this.m.t, r)\n  r.divRemTo(this.m, null, r)\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)\n  return r\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = new BigInteger()\n  x.copyTo(r)\n  this.reduce(r)\n  return r\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while (x.t <= this.mt2) // pad x so am has enough room later\n    x[x.t++] = 0\n  for (var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff\n    var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t)\n    // propagate carry\n    while (x[j] >= x.DV) {\n      x[j] -= x.DV\n      x[++j]++\n    }\n  }\n  x.clamp()\n  x.drShiftTo(this.m.t, x)\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x)\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nMontgomery.prototype.convert = montConvert\nMontgomery.prototype.revert = montRevert\nMontgomery.prototype.reduce = montReduce\nMontgomery.prototype.mulTo = montMulTo\nMontgomery.prototype.sqrTo = montSqrTo\n\n// (protected) true iff this is even\nfunction bnpIsEven() {\n  return ((this.t > 0) ? (this[0] & 1) : this.s) == 0\n}\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e, z) {\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE\n  var r = new BigInteger(),\n    r2 = new BigInteger(),\n    g = z.convert(this),\n    i = nbits(e) - 1\n  g.copyTo(r)\n  while (--i >= 0) {\n    z.sqrTo(r, r2)\n    if ((e & (1 << i)) > 0) z.mulTo(r2, g, r)\n    else {\n      var t = r\n      r = r2\n      r2 = t\n    }\n  }\n  return z.revert(r)\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e, m) {\n  var z\n  if (e < 256 || m.isEven()) z = new Classic(m)\n  else z = new Montgomery(m)\n  return this.exp(e, z)\n}\n\n// protected\nproto.copyTo = bnpCopyTo\nproto.fromInt = bnpFromInt\nproto.fromString = bnpFromString\nproto.clamp = bnpClamp\nproto.dlShiftTo = bnpDLShiftTo\nproto.drShiftTo = bnpDRShiftTo\nproto.lShiftTo = bnpLShiftTo\nproto.rShiftTo = bnpRShiftTo\nproto.subTo = bnpSubTo\nproto.multiplyTo = bnpMultiplyTo\nproto.squareTo = bnpSquareTo\nproto.divRemTo = bnpDivRemTo\nproto.invDigit = bnpInvDigit\nproto.isEven = bnpIsEven\nproto.exp = bnpExp\n\n// public\nproto.toString = bnToString\nproto.negate = bnNegate\nproto.abs = bnAbs\nproto.compareTo = bnCompareTo\nproto.bitLength = bnBitLength\nproto.byteLength = bnByteLength\nproto.mod = bnMod\nproto.modPowInt = bnModPowInt\n\n// (public)\nfunction bnClone() {\n  var r = new BigInteger()\n  this.copyTo(r)\n  return r\n}\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if (this.s < 0) {\n    if (this.t == 1) return this[0] - this.DV\n    else if (this.t == 0) return -1\n  } else if (this.t == 1) return this[0]\n  else if (this.t == 0) return 0\n  // assumes 16 < DB < 32\n  return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0]\n}\n\n// (public) return value as byte\nfunction bnByteValue() {\n  return (this.t == 0) ? this.s : (this[0] << 24) >> 24\n}\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() {\n  return (this.t == 0) ? this.s : (this[0] << 16) >> 16\n}\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) {\n  return Math.floor(Math.LN2 * this.DB / Math.log(r))\n}\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if (this.s < 0) return -1\n  else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0\n  else return 1\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if (b == null) b = 10\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\"\n  var cs = this.chunkSize(b)\n  var a = Math.pow(b, cs)\n  var d = nbv(a),\n    y = new BigInteger(),\n    z = new BigInteger(),\n    r = \"\"\n  this.divRemTo(d, y, z)\n  while (y.signum() > 0) {\n    r = (a + z.intValue())\n      .toString(b)\n      .substr(1) + r\n    y.divRemTo(d, y, z)\n  }\n  return z.intValue()\n    .toString(b) + r\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s, b) {\n  var self = this\n  self.fromInt(0)\n  if (b == null) b = 10\n  var cs = self.chunkSize(b)\n  var d = Math.pow(b, cs),\n    mi = false,\n    j = 0,\n    w = 0\n  for (var i = 0; i < s.length; ++i) {\n    var x = intAt(s, i)\n    if (x < 0) {\n      if (s.charAt(i) == \"-\" && self.signum() == 0) mi = true\n      continue\n    }\n    w = b * w + x\n    if (++j >= cs) {\n      self.dMultiply(d)\n      self.dAddOffset(w, 0)\n      j = 0\n      w = 0\n    }\n  }\n  if (j > 0) {\n    self.dMultiply(Math.pow(b, j))\n    self.dAddOffset(w, 0)\n  }\n  if (mi) BigInteger.ZERO.subTo(self, self)\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a, b, c) {\n  var self = this\n  if (\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) self.fromInt(1)\n    else {\n      self.fromNumber(a, c)\n      if (!self.testBit(a - 1)) // force MSB set\n        self.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, self)\n      if (self.isEven()) self.dAddOffset(1, 0); // force odd\n      while (!self.isProbablePrime(b)) {\n        self.dAddOffset(2, 0)\n        if (self.bitLength() > a) self.subTo(BigInteger.ONE.shiftLeft(a - 1), self)\n      }\n    }\n  } else {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n      t = a & 7\n    x.length = (a >> 3) + 1\n    b.nextBytes(x)\n    if (t > 0) x[0] &= ((1 << t) - 1)\n    else x[0] = 0\n    self.fromString(x, 256)\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var self = this\n  var i = self.t,\n    r = new Array()\n  r[0] = self.s\n  var p = self.DB - (i * self.DB) % 8,\n    d, k = 0\n  if (i-- > 0) {\n    if (p < self.DB && (d = self[i] >> p) != (self.s & self.DM) >> p)\n      r[k++] = d | (self.s << (self.DB - p))\n    while (i >= 0) {\n      if (p < 8) {\n        d = (self[i] & ((1 << p) - 1)) << (8 - p)\n        d |= self[--i] >> (p += self.DB - 8)\n      } else {\n        d = (self[i] >> (p -= 8)) & 0xff\n        if (p <= 0) {\n          p += self.DB\n          --i\n        }\n      }\n      if ((d & 0x80) != 0) d |= -256\n      if (k === 0 && (self.s & 0x80) != (d & 0x80))++k\n      if (k > 0 || d != self.s) r[k++] = d\n    }\n  }\n  return r\n}\n\nfunction bnEquals(a) {\n  return (this.compareTo(a) == 0)\n}\n\nfunction bnMin(a) {\n  return (this.compareTo(a) < 0) ? this : a\n}\n\nfunction bnMax(a) {\n  return (this.compareTo(a) > 0) ? this : a\n}\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a, op, r) {\n  var self = this\n  var i, f, m = Math.min(a.t, self.t)\n  for (i = 0; i < m; ++i) r[i] = op(self[i], a[i])\n  if (a.t < self.t) {\n    f = a.s & self.DM\n    for (i = m; i < self.t; ++i) r[i] = op(self[i], f)\n    r.t = self.t\n  } else {\n    f = self.s & self.DM\n    for (i = m; i < a.t; ++i) r[i] = op(f, a[i])\n    r.t = a.t\n  }\n  r.s = op(self.s, a.s)\n  r.clamp()\n}\n\n// (public) this & a\nfunction op_and(x, y) {\n  return x & y\n}\n\nfunction bnAnd(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_and, r)\n  return r\n}\n\n// (public) this | a\nfunction op_or(x, y) {\n  return x | y\n}\n\nfunction bnOr(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_or, r)\n  return r\n}\n\n// (public) this ^ a\nfunction op_xor(x, y) {\n  return x ^ y\n}\n\nfunction bnXor(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_xor, r)\n  return r\n}\n\n// (public) this & ~a\nfunction op_andnot(x, y) {\n  return x & ~y\n}\n\nfunction bnAndNot(a) {\n  var r = new BigInteger()\n  this.bitwiseTo(a, op_andnot, r)\n  return r\n}\n\n// (public) ~this\nfunction bnNot() {\n  var r = new BigInteger()\n  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i]\n  r.t = this.t\n  r.s = ~this.s\n  return r\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = new BigInteger()\n  if (n < 0) this.rShiftTo(-n, r)\n  else this.lShiftTo(n, r)\n  return r\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = new BigInteger()\n  if (n < 0) this.lShiftTo(-n, r)\n  else this.rShiftTo(n, r)\n  return r\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if (x == 0) return -1\n  var r = 0\n  if ((x & 0xffff) == 0) {\n    x >>= 16\n    r += 16\n  }\n  if ((x & 0xff) == 0) {\n    x >>= 8\n    r += 8\n  }\n  if ((x & 0xf) == 0) {\n    x >>= 4\n    r += 4\n  }\n  if ((x & 3) == 0) {\n    x >>= 2\n    r += 2\n  }\n  if ((x & 1) == 0)++r\n  return r\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for (var i = 0; i < this.t; ++i)\n    if (this[i] != 0) return i * this.DB + lbit(this[i])\n  if (this.s < 0) return this.t * this.DB\n  return -1\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0\n  while (x != 0) {\n    x &= x - 1\n    ++r\n  }\n  return r\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0,\n    x = this.s & this.DM\n  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x)\n  return r\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n / this.DB)\n  if (j >= this.t) return (this.s != 0)\n  return ((this[j] & (1 << (n % this.DB))) != 0)\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n, op) {\n  var r = BigInteger.ONE.shiftLeft(n)\n  this.bitwiseTo(r, op, r)\n  return r\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) {\n  return this.changeBit(n, op_or)\n}\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) {\n  return this.changeBit(n, op_andnot)\n}\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) {\n  return this.changeBit(n, op_xor)\n}\n\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n  var self = this\n\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, self.t)\n  while (i < m) {\n    c += self[i] + a[i]\n    r[i++] = c & self.DM\n    c >>= self.DB\n  }\n  if (a.t < self.t) {\n    c += a.s\n    while (i < self.t) {\n      c += self[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += self.s\n  } else {\n    c += self.s\n    while (i < a.t) {\n      c += a[i]\n      r[i++] = c & self.DM\n      c >>= self.DB\n    }\n    c += a.s\n  }\n  r.s = (c < 0) ? -1 : 0\n  if (c > 0) r[i++] = c\n  else if (c < -1) r[i++] = self.DV + c\n  r.t = i\n  r.clamp()\n}\n\n// (public) this + a\nfunction bnAdd(a) {\n  var r = new BigInteger()\n  this.addTo(a, r)\n  return r\n}\n\n// (public) this - a\nfunction bnSubtract(a) {\n  var r = new BigInteger()\n  this.subTo(a, r)\n  return r\n}\n\n// (public) this * a\nfunction bnMultiply(a) {\n  var r = new BigInteger()\n  this.multiplyTo(a, r)\n  return r\n}\n\n// (public) this^2\nfunction bnSquare() {\n  var r = new BigInteger()\n  this.squareTo(r)\n  return r\n}\n\n// (public) this / a\nfunction bnDivide(a) {\n  var r = new BigInteger()\n  this.divRemTo(a, r, null)\n  return r\n}\n\n// (public) this % a\nfunction bnRemainder(a) {\n  var r = new BigInteger()\n  this.divRemTo(a, null, r)\n  return r\n}\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = new BigInteger(),\n    r = new BigInteger()\n  this.divRemTo(a, q, r)\n  return new Array(q, r)\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t)\n  ++this.t\n  this.clamp()\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n, w) {\n  if (n == 0) return\n  while (this.t <= w) this[this.t++] = 0\n  this[w] += n\n  while (this[w] >= this.DV) {\n    this[w] -= this.DV\n    if (++w >= this.t) this[this.t++] = 0\n    ++this[w]\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\n\nfunction nNop(x) {\n  return x\n}\n\nfunction nMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n}\n\nfunction nSqrTo(x, r) {\n  x.squareTo(r)\n}\n\nNullExp.prototype.convert = nNop\nNullExp.prototype.revert = nNop\nNullExp.prototype.mulTo = nMulTo\nNullExp.prototype.sqrTo = nSqrTo\n\n// (public) this^e\nfunction bnPow(e) {\n  return this.exp(e, new NullExp())\n}\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a, n, r) {\n  var i = Math.min(this.t + a.t, n)\n  r.s = 0; // assumes a,this >= 0\n  r.t = i\n  while (i > 0) r[--i] = 0\n  var j\n  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t)\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i)\n  r.clamp()\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a, n, r) {\n  --n\n  var i = r.t = this.t + a.t - n\n  r.s = 0; // assumes a,this >= 0\n  while (--i >= 0) r[i] = 0\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n)\n  r.clamp()\n  r.drShiftTo(1, r)\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = new BigInteger()\n  this.q3 = new BigInteger()\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2)\n  this.mu = this.r2.divide(m)\n  this.m = m\n}\n\nfunction barrettConvert(x) {\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m)\n  else if (x.compareTo(this.m) < 0) return x\n  else {\n    var r = new BigInteger()\n    x.copyTo(r)\n    this.reduce(r)\n    return r\n  }\n}\n\nfunction barrettRevert(x) {\n  return x\n}\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  var self = this\n  x.drShiftTo(self.m.t - 1, self.r2)\n  if (x.t > self.m.t + 1) {\n    x.t = self.m.t + 1\n    x.clamp()\n  }\n  self.mu.multiplyUpperTo(self.r2, self.m.t + 1, self.q3)\n  self.m.multiplyLowerTo(self.q3, self.m.t + 1, self.r2)\n  while (x.compareTo(self.r2) < 0) x.dAddOffset(1, self.m.t + 1)\n  x.subTo(self.r2, x)\n  while (x.compareTo(self.m) >= 0) x.subTo(self.m, x)\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x, r) {\n  x.squareTo(r)\n  this.reduce(r)\n}\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x, y, r) {\n  x.multiplyTo(y, r)\n  this.reduce(r)\n}\n\nBarrett.prototype.convert = barrettConvert\nBarrett.prototype.revert = barrettRevert\nBarrett.prototype.reduce = barrettReduce\nBarrett.prototype.mulTo = barrettMulTo\nBarrett.prototype.sqrTo = barrettSqrTo\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m) {\n  var i = e.bitLength(),\n    k, r = nbv(1),\n    z\n  if (i <= 0) return r\n  else if (i < 18) k = 1\n  else if (i < 48) k = 3\n  else if (i < 144) k = 4\n  else if (i < 768) k = 5\n  else k = 6\n  if (i < 8)\n    z = new Classic(m)\n  else if (m.isEven())\n    z = new Barrett(m)\n  else\n    z = new Montgomery(m)\n\n  // precomputation\n  var g = new Array(),\n    n = 3,\n    k1 = k - 1,\n    km = (1 << k) - 1\n  g[1] = z.convert(this)\n  if (k > 1) {\n    var g2 = new BigInteger()\n    z.sqrTo(g[1], g2)\n    while (n <= km) {\n      g[n] = new BigInteger()\n      z.mulTo(g2, g[n - 2], g[n])\n      n += 2\n    }\n  }\n\n  var j = e.t - 1,\n    w, is1 = true,\n    r2 = new BigInteger(),\n    t\n  i = nbits(e[j]) - 1\n  while (j >= 0) {\n    if (i >= k1) w = (e[j] >> (i - k1)) & km\n    else {\n      w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i)\n      if (j > 0) w |= e[j - 1] >> (this.DB + i - k1)\n    }\n\n    n = k\n    while ((w & 1) == 0) {\n      w >>= 1\n      --n\n    }\n    if ((i -= n) < 0) {\n      i += this.DB\n      --j\n    }\n    if (is1) { // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r)\n      is1 = false\n    } else {\n      while (n > 1) {\n        z.sqrTo(r, r2)\n        z.sqrTo(r2, r)\n        n -= 2\n      }\n      if (n > 0) z.sqrTo(r, r2)\n      else {\n        t = r\n        r = r2\n        r2 = t\n      }\n      z.mulTo(r2, g[w], r)\n    }\n\n    while (j >= 0 && (e[j] & (1 << i)) == 0) {\n      z.sqrTo(r, r2)\n      t = r\n      r = r2\n      r2 = t\n      if (--i < 0) {\n        i = this.DB - 1\n        --j\n      }\n    }\n  }\n  return z.revert(r)\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = (this.s < 0) ? this.negate() : this.clone()\n  var y = (a.s < 0) ? a.negate() : a.clone()\n  if (x.compareTo(y) < 0) {\n    var t = x\n    x = y\n    y = t\n  }\n  var i = x.getLowestSetBit(),\n    g = y.getLowestSetBit()\n  if (g < 0) return x\n  if (i < g) g = i\n  if (g > 0) {\n    x.rShiftTo(g, x)\n    y.rShiftTo(g, y)\n  }\n  while (x.signum() > 0) {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x)\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y)\n    if (x.compareTo(y) >= 0) {\n      x.subTo(y, x)\n      x.rShiftTo(1, x)\n    } else {\n      y.subTo(x, y)\n      y.rShiftTo(1, y)\n    }\n  }\n  if (g > 0) y.lShiftTo(g, y)\n  return y\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if (n <= 0) return 0\n  var d = this.DV % n,\n    r = (this.s < 0) ? n - 1 : 0\n  if (this.t > 0)\n    if (d == 0) r = this[0] % n\n    else\n      for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n\n  return r\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven()\n  if (this.signum() === 0) throw new Error('division by zero')\n  if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO\n  var u = m.clone(),\n    v = this.clone()\n  var a = nbv(1),\n    b = nbv(0),\n    c = nbv(0),\n    d = nbv(1)\n  while (u.signum() != 0) {\n    while (u.isEven()) {\n      u.rShiftTo(1, u)\n      if (ac) {\n        if (!a.isEven() || !b.isEven()) {\n          a.addTo(this, a)\n          b.subTo(m, b)\n        }\n        a.rShiftTo(1, a)\n      } else if (!b.isEven()) b.subTo(m, b)\n      b.rShiftTo(1, b)\n    }\n    while (v.isEven()) {\n      v.rShiftTo(1, v)\n      if (ac) {\n        if (!c.isEven() || !d.isEven()) {\n          c.addTo(this, c)\n          d.subTo(m, d)\n        }\n        c.rShiftTo(1, c)\n      } else if (!d.isEven()) d.subTo(m, d)\n      d.rShiftTo(1, d)\n    }\n    if (u.compareTo(v) >= 0) {\n      u.subTo(v, u)\n      if (ac) a.subTo(c, a)\n      b.subTo(d, b)\n    } else {\n      v.subTo(u, v)\n      if (ac) c.subTo(a, c)\n      d.subTo(b, d)\n    }\n  }\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO\n  while (d.compareTo(m) >= 0) d.subTo(m, d)\n  while (d.signum() < 0) d.addTo(m, d)\n  return d\n}\n\nvar lowprimes = [\n  2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\n  73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\n  157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233,\n  239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317,\n  331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\n  421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\n  509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607,\n  613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n  709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\n  821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\n  919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997\n]\n\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1]\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i, x = this.abs()\n  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n    for (i = 0; i < lowprimes.length; ++i)\n      if (x[0] == lowprimes[i]) return true\n    return false\n  }\n  if (x.isEven()) return false\n  i = 1\n  while (i < lowprimes.length) {\n    var m = lowprimes[i],\n      j = i + 1\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++]\n    m = x.modInt(m)\n    while (i < j) if (m % lowprimes[i++] == 0) return false\n  }\n  return x.millerRabin(t)\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE)\n  var k = n1.getLowestSetBit()\n  if (k <= 0) return false\n  var r = n1.shiftRight(k)\n  t = (t + 1) >> 1\n  if (t > lowprimes.length) t = lowprimes.length\n  var a = new BigInteger(null)\n  var j, bases = []\n  for (var i = 0; i < t; ++i) {\n    for (;;) {\n      j = lowprimes[Math.floor(Math.random() * lowprimes.length)]\n      if (bases.indexOf(j) == -1) break\n    }\n    bases.push(j)\n    a.fromInt(j)\n    var y = a.modPow(r, this)\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1\n      while (j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2, this)\n        if (y.compareTo(BigInteger.ONE) == 0) return false\n      }\n      if (y.compareTo(n1) != 0) return false\n    }\n  }\n  return true\n}\n\n// protected\nproto.chunkSize = bnpChunkSize\nproto.toRadix = bnpToRadix\nproto.fromRadix = bnpFromRadix\nproto.fromNumber = bnpFromNumber\nproto.bitwiseTo = bnpBitwiseTo\nproto.changeBit = bnpChangeBit\nproto.addTo = bnpAddTo\nproto.dMultiply = bnpDMultiply\nproto.dAddOffset = bnpDAddOffset\nproto.multiplyLowerTo = bnpMultiplyLowerTo\nproto.multiplyUpperTo = bnpMultiplyUpperTo\nproto.modInt = bnpModInt\nproto.millerRabin = bnpMillerRabin\n\n// public\nproto.clone = bnClone\nproto.intValue = bnIntValue\nproto.byteValue = bnByteValue\nproto.shortValue = bnShortValue\nproto.signum = bnSigNum\nproto.toByteArray = bnToByteArray\nproto.equals = bnEquals\nproto.min = bnMin\nproto.max = bnMax\nproto.and = bnAnd\nproto.or = bnOr\nproto.xor = bnXor\nproto.andNot = bnAndNot\nproto.not = bnNot\nproto.shiftLeft = bnShiftLeft\nproto.shiftRight = bnShiftRight\nproto.getLowestSetBit = bnGetLowestSetBit\nproto.bitCount = bnBitCount\nproto.testBit = bnTestBit\nproto.setBit = bnSetBit\nproto.clearBit = bnClearBit\nproto.flipBit = bnFlipBit\nproto.add = bnAdd\nproto.subtract = bnSubtract\nproto.multiply = bnMultiply\nproto.divide = bnDivide\nproto.remainder = bnRemainder\nproto.divideAndRemainder = bnDivideAndRemainder\nproto.modPow = bnModPow\nproto.modInverse = bnModInverse\nproto.pow = bnPow\nproto.gcd = bnGCD\nproto.isProbablePrime = bnIsProbablePrime\n\n// JSBN-specific extension\nproto.square = bnSquare\n\n// constants\nBigInteger.ZERO = nbv(0)\nBigInteger.ONE = nbv(1)\nBigInteger.valueOf = nbv\n\nmodule.exports = BigInteger\n",
    "var di=Object.create;var Re=Object.defineProperty;var hi=Object.getOwnPropertyDescriptor;var bi=Object.getOwnPropertyNames;var mi=Object.getPrototypeOf,vi=Object.prototype.hasOwnProperty;var Si=(e,r)=>()=>(e&&(r=e(e=0)),r);var y=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Ai=(e,r)=>{for(var t in r)Re(e,t,{get:r[t],enumerable:!0})},Te=(e,r,t,n)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let o of bi(r))!vi.call(e,o)&&o!==t&&Re(e,o,{get:()=>r[o],enumerable:!(n=hi(r,o))||n.enumerable});return e},D=(e,r,t)=>(Te(e,r,\"default\"),t&&Te(t,r,\"default\")),bt=(e,r,t)=>(t=e!=null?di(mi(e)):{},Te(r||!e||!e.__esModule?Re(t,\"default\",{value:e,enumerable:!0}):t,e)),ue=e=>Te(Re({},\"__esModule\",{value:!0}),e);var hr=y((Lu,mt)=>{\"use strict\";mt.exports=function(){if(typeof Symbol!=\"function\"||typeof Object.getOwnPropertySymbols!=\"function\")return!1;if(typeof Symbol.iterator==\"symbol\")return!0;var r={},t=Symbol(\"test\"),n=Object(t);if(typeof t==\"string\"||Object.prototype.toString.call(t)!==\"[object Symbol]\"||Object.prototype.toString.call(n)!==\"[object Symbol]\")return!1;var o=42;r[t]=o;for(t in r)return!1;if(typeof Object.keys==\"function\"&&Object.keys(r).length!==0||typeof Object.getOwnPropertyNames==\"function\"&&Object.getOwnPropertyNames(r).length!==0)return!1;var i=Object.getOwnPropertySymbols(r);if(i.length!==1||i[0]!==t||!Object.prototype.propertyIsEnumerable.call(r,t))return!1;if(typeof Object.getOwnPropertyDescriptor==\"function\"){var a=Object.getOwnPropertyDescriptor(r,t);if(a.value!==o||a.enumerable!==!0)return!1}return!0}});var ce=y((Vu,vt)=>{\"use strict\";var Oi=hr();vt.exports=function(){return Oi()&&!!Symbol.toStringTag}});var Ot=y((Wu,At)=>{\"use strict\";var St=typeof Symbol<\"u\"&&Symbol,Ei=hr();At.exports=function(){return typeof St!=\"function\"||typeof Symbol!=\"function\"||typeof St(\"foo\")!=\"symbol\"||typeof Symbol(\"bar\")!=\"symbol\"?!1:Ei()}});var wt=y((zu,Et)=>{\"use strict\";var wi=\"Function.prototype.bind called on incompatible \",br=Array.prototype.slice,ji=Object.prototype.toString,Pi=\"[object Function]\";Et.exports=function(r){var t=this;if(typeof t!=\"function\"||ji.call(t)!==Pi)throw new TypeError(wi+t);for(var n=br.call(arguments,1),o,i=function(){if(this instanceof o){var s=t.apply(this,n.concat(br.call(arguments)));return Object(s)===s?s:this}else return t.apply(r,n.concat(br.call(arguments)))},a=Math.max(0,t.length-n.length),f=[],u=0;u<a;u++)f.push(\"$\"+u);if(o=Function(\"binder\",\"return function (\"+f.join(\",\")+\"){ return binder.apply(this,arguments); }\")(i),t.prototype){var c=function(){};c.prototype=t.prototype,o.prototype=new c,c.prototype=null}return o}});var Ne=y((Cu,jt)=>{\"use strict\";var qi=wt();jt.exports=Function.prototype.bind||qi});var qt=y((Hu,Pt)=>{\"use strict\";var Ii=Ne();Pt.exports=Ii.call(Function.call,Object.prototype.hasOwnProperty)});var le=y((Ju,Ft)=>{\"use strict\";var h,Z=SyntaxError,Nt=Function,X=TypeError,mr=function(e){try{return Nt('\"use strict\"; return ('+e+\").constructor;\")()}catch{}},G=Object.getOwnPropertyDescriptor;if(G)try{G({},\"\")}catch{G=null}var vr=function(){throw new X},Ti=G?function(){try{return arguments.callee,vr}catch{try{return G(arguments,\"callee\").get}catch{return vr}}}():vr,J=Ot()(),x=Object.getPrototypeOf||function(e){return e.__proto__},Y={},Ri=typeof Uint8Array>\"u\"?h:x(Uint8Array),L={\"%AggregateError%\":typeof AggregateError>\"u\"?h:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer>\"u\"?h:ArrayBuffer,\"%ArrayIteratorPrototype%\":J?x([][Symbol.iterator]()):h,\"%AsyncFromSyncIteratorPrototype%\":h,\"%AsyncFunction%\":Y,\"%AsyncGenerator%\":Y,\"%AsyncGeneratorFunction%\":Y,\"%AsyncIteratorPrototype%\":Y,\"%Atomics%\":typeof Atomics>\"u\"?h:Atomics,\"%BigInt%\":typeof BigInt>\"u\"?h:BigInt,\"%BigInt64Array%\":typeof BigInt64Array>\"u\"?h:BigInt64Array,\"%BigUint64Array%\":typeof BigUint64Array>\"u\"?h:BigUint64Array,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView>\"u\"?h:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array>\"u\"?h:Float32Array,\"%Float64Array%\":typeof Float64Array>\"u\"?h:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry>\"u\"?h:FinalizationRegistry,\"%Function%\":Nt,\"%GeneratorFunction%\":Y,\"%Int8Array%\":typeof Int8Array>\"u\"?h:Int8Array,\"%Int16Array%\":typeof Int16Array>\"u\"?h:Int16Array,\"%Int32Array%\":typeof Int32Array>\"u\"?h:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":J?x(x([][Symbol.iterator]())):h,\"%JSON%\":typeof JSON==\"object\"?JSON:h,\"%Map%\":typeof Map>\"u\"?h:Map,\"%MapIteratorPrototype%\":typeof Map>\"u\"||!J?h:x(new Map()[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise>\"u\"?h:Promise,\"%Proxy%\":typeof Proxy>\"u\"?h:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect>\"u\"?h:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set>\"u\"?h:Set,\"%SetIteratorPrototype%\":typeof Set>\"u\"||!J?h:x(new Set()[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer>\"u\"?h:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":J?x(\"\"[Symbol.iterator]()):h,\"%Symbol%\":J?Symbol:h,\"%SyntaxError%\":Z,\"%ThrowTypeError%\":Ti,\"%TypedArray%\":Ri,\"%TypeError%\":X,\"%Uint8Array%\":typeof Uint8Array>\"u\"?h:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray>\"u\"?h:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array>\"u\"?h:Uint16Array,\"%Uint32Array%\":typeof Uint32Array>\"u\"?h:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap>\"u\"?h:WeakMap,\"%WeakRef%\":typeof WeakRef>\"u\"?h:WeakRef,\"%WeakSet%\":typeof WeakSet>\"u\"?h:WeakSet};try{null.error}catch(e){It=x(x(e)),L[\"%Error.prototype%\"]=It}var It,Ni=function e(r){var t;if(r===\"%AsyncFunction%\")t=mr(\"async function () {}\");else if(r===\"%GeneratorFunction%\")t=mr(\"function* () {}\");else if(r===\"%AsyncGeneratorFunction%\")t=mr(\"async function* () {}\");else if(r===\"%AsyncGenerator%\"){var n=e(\"%AsyncGeneratorFunction%\");n&&(t=n.prototype)}else if(r===\"%AsyncIteratorPrototype%\"){var o=e(\"%AsyncGenerator%\");o&&(t=x(o.prototype))}return L[r]=t,t},Tt={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]},se=Ne(),Fe=qt(),Fi=se.call(Function.call,Array.prototype.concat),xi=se.call(Function.apply,Array.prototype.splice),Rt=se.call(Function.call,String.prototype.replace),xe=se.call(Function.call,String.prototype.slice),Di=se.call(Function.call,RegExp.prototype.exec),Bi=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g,Ui=/\\\\(\\\\)?/g,Mi=function(r){var t=xe(r,0,1),n=xe(r,-1);if(t===\"%\"&&n!==\"%\")throw new Z(\"invalid intrinsic syntax, expected closing `%`\");if(n===\"%\"&&t!==\"%\")throw new Z(\"invalid intrinsic syntax, expected opening `%`\");var o=[];return Rt(r,Bi,function(i,a,f,u){o[o.length]=f?Rt(u,Ui,\"$1\"):a||i}),o},_i=function(r,t){var n=r,o;if(Fe(Tt,n)&&(o=Tt[n],n=\"%\"+o[0]+\"%\"),Fe(L,n)){var i=L[n];if(i===Y&&(i=Ni(n)),typeof i>\"u\"&&!t)throw new X(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\");return{alias:o,name:n,value:i}}throw new Z(\"intrinsic \"+r+\" does not exist!\")};Ft.exports=function(r,t){if(typeof r!=\"string\"||r.length===0)throw new X(\"intrinsic name must be a non-empty string\");if(arguments.length>1&&typeof t!=\"boolean\")throw new X('\"allowMissing\" argument must be a boolean');if(Di(/^%?[^%]*%?$/,r)===null)throw new Z(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");var n=Mi(r),o=n.length>0?n[0]:\"\",i=_i(\"%\"+o+\"%\",t),a=i.name,f=i.value,u=!1,c=i.alias;c&&(o=c[0],xi(n,Fi([0,1],c)));for(var s=1,l=!0;s<n.length;s+=1){var p=n[s],m=xe(p,0,1),S=xe(p,-1);if((m==='\"'||m===\"'\"||m===\"`\"||S==='\"'||S===\"'\"||S===\"`\")&&m!==S)throw new Z(\"property names with quotes must have matching quotes\");if((p===\"constructor\"||!l)&&(u=!0),o+=\".\"+p,a=\"%\"+o+\"%\",Fe(L,a))f=L[a];else if(f!=null){if(!(p in f)){if(!t)throw new X(\"base intrinsic for \"+r+\" exists, but the property is not available.\");return}if(G&&s+1>=n.length){var q=G(f,p);l=!!q,l&&\"get\"in q&&!(\"originalValue\"in q.get)?f=q.get:f=f[p]}else l=Fe(f,p),f=f[p];l&&!u&&(L[a]=f)}}return f}});var Be=y((Yu,De)=>{\"use strict\";var Sr=Ne(),Q=le(),Bt=Q(\"%Function.prototype.apply%\"),Ut=Q(\"%Function.prototype.call%\"),Mt=Q(\"%Reflect.apply%\",!0)||Sr.call(Ut,Bt),xt=Q(\"%Object.getOwnPropertyDescriptor%\",!0),V=Q(\"%Object.defineProperty%\",!0),$i=Q(\"%Math.max%\");if(V)try{V({},\"a\",{value:1})}catch{V=null}De.exports=function(r){var t=Mt(Sr,Ut,arguments);if(xt&&V){var n=xt(t,\"length\");n.configurable&&V(t,\"length\",{value:1+$i(0,r.length-(arguments.length-1))})}return t};var Dt=function(){return Mt(Sr,Bt,arguments)};V?V(De.exports,\"apply\",{value:Dt}):De.exports.apply=Dt});var Ue=y((Xu,kt)=>{\"use strict\";var _t=le(),$t=Be(),ki=$t(_t(\"String.prototype.indexOf\"));kt.exports=function(r,t){var n=_t(r,!!t);return typeof n==\"function\"&&ki(r,\".prototype.\")>-1?$t(n):n}});var Vt=y((Zu,Lt)=>{\"use strict\";var Gi=ce()(),Li=Ue(),Ar=Li(\"Object.prototype.toString\"),Me=function(r){return Gi&&r&&typeof r==\"object\"&&Symbol.toStringTag in r?!1:Ar(r)===\"[object Arguments]\"},Gt=function(r){return Me(r)?!0:r!==null&&typeof r==\"object\"&&typeof r.length==\"number\"&&r.length>=0&&Ar(r)!==\"[object Array]\"&&Ar(r.callee)===\"[object Function]\"},Vi=function(){return Me(arguments)}();Me.isLegacyArguments=Gt;Lt.exports=Vi?Me:Gt});var Ct=y((Qu,zt)=>{\"use strict\";var Wi=Object.prototype.toString,zi=Function.prototype.toString,Ci=/^\\s*(?:function)?\\*/,Wt=ce()(),Or=Object.getPrototypeOf,Hi=function(){if(!Wt)return!1;try{return Function(\"return function*() {}\")()}catch{}},Er;zt.exports=function(r){if(typeof r!=\"function\")return!1;if(Ci.test(zi.call(r)))return!0;if(!Wt){var t=Wi.call(r);return t===\"[object GeneratorFunction]\"}if(!Or)return!1;if(typeof Er>\"u\"){var n=Hi();Er=n?Or(n):!1}return Or(r)===Er}});var Xt=y((Ku,Yt)=>{\"use strict\";var Jt=Function.prototype.toString,K=typeof Reflect==\"object\"&&Reflect!==null&&Reflect.apply,jr,_e;if(typeof K==\"function\"&&typeof Object.defineProperty==\"function\")try{jr=Object.defineProperty({},\"length\",{get:function(){throw _e}}),_e={},K(function(){throw 42},null,jr)}catch(e){e!==_e&&(K=null)}else K=null;var Ji=/^\\s*class\\b/,Pr=function(r){try{var t=Jt.call(r);return Ji.test(t)}catch{return!1}},wr=function(r){try{return Pr(r)?!1:(Jt.call(r),!0)}catch{return!1}},$e=Object.prototype.toString,Yi=\"[object Object]\",Xi=\"[object Function]\",Zi=\"[object GeneratorFunction]\",Qi=\"[object HTMLAllCollection]\",Ki=\"[object HTML document.all class]\",ea=\"[object HTMLCollection]\",ra=typeof Symbol==\"function\"&&!!Symbol.toStringTag,ta=!(0 in[,]),qr=function(){return!1};typeof document==\"object\"&&(Ht=document.all,$e.call(Ht)===$e.call(document.all)&&(qr=function(r){if((ta||!r)&&(typeof r>\"u\"||typeof r==\"object\"))try{var t=$e.call(r);return(t===Qi||t===Ki||t===ea||t===Yi)&&r(\"\")==null}catch{}return!1}));var Ht;Yt.exports=K?function(r){if(qr(r))return!0;if(!r||typeof r!=\"function\"&&typeof r!=\"object\")return!1;try{K(r,null,jr)}catch(t){if(t!==_e)return!1}return!Pr(r)&&wr(r)}:function(r){if(qr(r))return!0;if(!r||typeof r!=\"function\"&&typeof r!=\"object\")return!1;if(ra)return wr(r);if(Pr(r))return!1;var t=$e.call(r);return t!==Xi&&t!==Zi&&!/^\\[object HTML/.test(t)?!1:wr(r)}});var Ir=y((ec,Qt)=>{\"use strict\";var na=Xt(),oa=Object.prototype.toString,Zt=Object.prototype.hasOwnProperty,ia=function(r,t,n){for(var o=0,i=r.length;o<i;o++)Zt.call(r,o)&&(n==null?t(r[o],o,r):t.call(n,r[o],o,r))},aa=function(r,t,n){for(var o=0,i=r.length;o<i;o++)n==null?t(r.charAt(o),o,r):t.call(n,r.charAt(o),o,r)},fa=function(r,t,n){for(var o in r)Zt.call(r,o)&&(n==null?t(r[o],o,r):t.call(n,r[o],o,r))},ua=function(r,t,n){if(!na(t))throw new TypeError(\"iterator must be a function\");var o;arguments.length>=3&&(o=n),oa.call(r)===\"[object Array]\"?ia(r,t,o):typeof r==\"string\"?aa(r,t,o):fa(r,t,o)};Qt.exports=ua});var Rr=y((rc,Kt)=>{\"use strict\";var Tr=[\"BigInt64Array\",\"BigUint64Array\",\"Float32Array\",\"Float64Array\",\"Int16Array\",\"Int32Array\",\"Int8Array\",\"Uint16Array\",\"Uint32Array\",\"Uint8Array\",\"Uint8ClampedArray\"],ca=typeof globalThis>\"u\"?global:globalThis;Kt.exports=function(){for(var r=[],t=0;t<Tr.length;t++)typeof ca[Tr[t]]==\"function\"&&(r[r.length]=Tr[t]);return r}});var Nr=y((tc,en)=>{\"use strict\";var sa=le(),ke=sa(\"%Object.getOwnPropertyDescriptor%\",!0);if(ke)try{ke([],\"length\")}catch{ke=null}en.exports=ke});var Dr=y((nc,an)=>{\"use strict\";var rn=Ir(),la=Rr(),xr=Ue(),pa=xr(\"Object.prototype.toString\"),tn=ce()(),Ge=Nr(),ya=typeof globalThis>\"u\"?global:globalThis,nn=la(),ga=xr(\"Array.prototype.indexOf\",!0)||function(r,t){for(var n=0;n<r.length;n+=1)if(r[n]===t)return n;return-1},da=xr(\"String.prototype.slice\"),on={},Fr=Object.getPrototypeOf;tn&&Ge&&Fr&&rn(nn,function(e){var r=new ya[e];if(Symbol.toStringTag in r){var t=Fr(r),n=Ge(t,Symbol.toStringTag);if(!n){var o=Fr(t);n=Ge(o,Symbol.toStringTag)}on[e]=n.get}});var ha=function(r){var t=!1;return rn(on,function(n,o){if(!t)try{t=n.call(r)===o}catch{}}),t};an.exports=function(r){if(!r||typeof r!=\"object\")return!1;if(!tn||!(Symbol.toStringTag in r)){var t=da(pa(r),8,-1);return ga(nn,t)>-1}return Ge?ha(r):!1}});var yn=y((oc,pn)=>{\"use strict\";var un=Ir(),ba=Rr(),cn=Ue(),Br=Nr(),ma=cn(\"Object.prototype.toString\"),sn=ce()(),fn=typeof globalThis>\"u\"?global:globalThis,va=ba(),Sa=cn(\"String.prototype.slice\"),ln={},Ur=Object.getPrototypeOf;sn&&Br&&Ur&&un(va,function(e){if(typeof fn[e]==\"function\"){var r=new fn[e];if(Symbol.toStringTag in r){var t=Ur(r),n=Br(t,Symbol.toStringTag);if(!n){var o=Ur(t);n=Br(o,Symbol.toStringTag)}ln[e]=n.get}}});var Aa=function(r){var t=!1;return un(ln,function(n,o){if(!t)try{var i=n.call(r);i===o&&(t=i)}catch{}}),t},Oa=Dr();pn.exports=function(r){return Oa(r)?!sn||!(Symbol.toStringTag in r)?Sa(ma(r),8,-1):Aa(r):!1}});var qn=y(g=>{\"use strict\";var Ea=Vt(),wa=Ct(),T=yn(),gn=Dr();function ee(e){return e.call.bind(e)}var dn=typeof BigInt<\"u\",hn=typeof Symbol<\"u\",E=ee(Object.prototype.toString),ja=ee(Number.prototype.valueOf),Pa=ee(String.prototype.valueOf),qa=ee(Boolean.prototype.valueOf);dn&&(bn=ee(BigInt.prototype.valueOf));var bn;hn&&(mn=ee(Symbol.prototype.valueOf));var mn;function ye(e,r){if(typeof e!=\"object\")return!1;try{return r(e),!0}catch{return!1}}g.isArgumentsObject=Ea;g.isGeneratorFunction=wa;g.isTypedArray=gn;function Ia(e){return typeof Promise<\"u\"&&e instanceof Promise||e!==null&&typeof e==\"object\"&&typeof e.then==\"function\"&&typeof e.catch==\"function\"}g.isPromise=Ia;function Ta(e){return typeof ArrayBuffer<\"u\"&&ArrayBuffer.isView?ArrayBuffer.isView(e):gn(e)||Sn(e)}g.isArrayBufferView=Ta;function Ra(e){return T(e)===\"Uint8Array\"}g.isUint8Array=Ra;function Na(e){return T(e)===\"Uint8ClampedArray\"}g.isUint8ClampedArray=Na;function Fa(e){return T(e)===\"Uint16Array\"}g.isUint16Array=Fa;function xa(e){return T(e)===\"Uint32Array\"}g.isUint32Array=xa;function Da(e){return T(e)===\"Int8Array\"}g.isInt8Array=Da;function Ba(e){return T(e)===\"Int16Array\"}g.isInt16Array=Ba;function Ua(e){return T(e)===\"Int32Array\"}g.isInt32Array=Ua;function Ma(e){return T(e)===\"Float32Array\"}g.isFloat32Array=Ma;function _a(e){return T(e)===\"Float64Array\"}g.isFloat64Array=_a;function $a(e){return T(e)===\"BigInt64Array\"}g.isBigInt64Array=$a;function ka(e){return T(e)===\"BigUint64Array\"}g.isBigUint64Array=ka;function Le(e){return E(e)===\"[object Map]\"}Le.working=typeof Map<\"u\"&&Le(new Map);function Ga(e){return typeof Map>\"u\"?!1:Le.working?Le(e):e instanceof Map}g.isMap=Ga;function Ve(e){return E(e)===\"[object Set]\"}Ve.working=typeof Set<\"u\"&&Ve(new Set);function La(e){return typeof Set>\"u\"?!1:Ve.working?Ve(e):e instanceof Set}g.isSet=La;function We(e){return E(e)===\"[object WeakMap]\"}We.working=typeof WeakMap<\"u\"&&We(new WeakMap);function Va(e){return typeof WeakMap>\"u\"?!1:We.working?We(e):e instanceof WeakMap}g.isWeakMap=Va;function _r(e){return E(e)===\"[object WeakSet]\"}_r.working=typeof WeakSet<\"u\"&&_r(new WeakSet);function Wa(e){return _r(e)}g.isWeakSet=Wa;function ze(e){return E(e)===\"[object ArrayBuffer]\"}ze.working=typeof ArrayBuffer<\"u\"&&ze(new ArrayBuffer);function vn(e){return typeof ArrayBuffer>\"u\"?!1:ze.working?ze(e):e instanceof ArrayBuffer}g.isArrayBuffer=vn;function Ce(e){return E(e)===\"[object DataView]\"}Ce.working=typeof ArrayBuffer<\"u\"&&typeof DataView<\"u\"&&Ce(new DataView(new ArrayBuffer(1),0,1));function Sn(e){return typeof DataView>\"u\"?!1:Ce.working?Ce(e):e instanceof DataView}g.isDataView=Sn;var Mr=typeof SharedArrayBuffer<\"u\"?SharedArrayBuffer:void 0;function pe(e){return E(e)===\"[object SharedArrayBuffer]\"}function An(e){return typeof Mr>\"u\"?!1:(typeof pe.working>\"u\"&&(pe.working=pe(new Mr)),pe.working?pe(e):e instanceof Mr)}g.isSharedArrayBuffer=An;function za(e){return E(e)===\"[object AsyncFunction]\"}g.isAsyncFunction=za;function Ca(e){return E(e)===\"[object Map Iterator]\"}g.isMapIterator=Ca;function Ha(e){return E(e)===\"[object Set Iterator]\"}g.isSetIterator=Ha;function Ja(e){return E(e)===\"[object Generator]\"}g.isGeneratorObject=Ja;function Ya(e){return E(e)===\"[object WebAssembly.Module]\"}g.isWebAssemblyCompiledModule=Ya;function On(e){return ye(e,ja)}g.isNumberObject=On;function En(e){return ye(e,Pa)}g.isStringObject=En;function wn(e){return ye(e,qa)}g.isBooleanObject=wn;function jn(e){return dn&&ye(e,bn)}g.isBigIntObject=jn;function Pn(e){return hn&&ye(e,mn)}g.isSymbolObject=Pn;function Xa(e){return On(e)||En(e)||wn(e)||jn(e)||Pn(e)}g.isBoxedPrimitive=Xa;function Za(e){return typeof Uint8Array<\"u\"&&(vn(e)||An(e))}g.isAnyArrayBuffer=Za;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach(function(e){Object.defineProperty(g,e,{enumerable:!1,value:function(){throw new Error(e+\" is not supported in userland\")}})})});var Tn=y((ac,In)=>{In.exports=function(r){return r&&typeof r==\"object\"&&typeof r.copy==\"function\"&&typeof r.fill==\"function\"&&typeof r.readUInt8==\"function\"}});var Rn=y((fc,$r)=>{typeof Object.create==\"function\"?$r.exports=function(r,t){t&&(r.super_=t,r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}))}:$r.exports=function(r,t){if(t){r.super_=t;var n=function(){};n.prototype=t.prototype,r.prototype=new n,r.prototype.constructor=r}}});var Un=y(d=>{var Nn=Object.getOwnPropertyDescriptors||function(r){for(var t=Object.keys(r),n={},o=0;o<t.length;o++)n[t[o]]=Object.getOwnPropertyDescriptor(r,t[o]);return n},Qa=/%[sdj%]/g;d.format=function(e){if(!Ke(e)){for(var r=[],t=0;t<arguments.length;t++)r.push(B(arguments[t]));return r.join(\" \")}for(var t=1,n=arguments,o=n.length,i=String(e).replace(Qa,function(f){if(f===\"%%\")return\"%\";if(t>=o)return f;switch(f){case\"%s\":return String(n[t++]);case\"%d\":return Number(n[t++]);case\"%j\":try{return JSON.stringify(n[t++])}catch{return\"[Circular]\"}default:return f}}),a=n[t];t<o;a=n[++t])Qe(a)||!re(a)?i+=\" \"+a:i+=\" \"+B(a);return i};d.deprecate=function(e,r){if(typeof process<\"u\"&&process.noDeprecation===!0)return e;if(typeof process>\"u\")return function(){return d.deprecate(e,r).apply(this,arguments)};var t=!1;function n(){if(!t){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),t=!0}return e.apply(this,arguments)}return n};var He={},Fn=/^$/;process.env.NODE_DEBUG&&(Je=process.env.NODE_DEBUG,Je=Je.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase(),Fn=new RegExp(\"^\"+Je+\"$\",\"i\"));var Je;d.debuglog=function(e){if(e=e.toUpperCase(),!He[e])if(Fn.test(e)){var r=process.pid;He[e]=function(){var t=d.format.apply(d,arguments);console.error(\"%s %d: %s\",e,r,t)}}else He[e]=function(){};return He[e]};function B(e,r){var t={seen:[],stylize:ef};return arguments.length>=3&&(t.depth=arguments[2]),arguments.length>=4&&(t.colors=arguments[3]),Vr(r)?t.showHidden=r:r&&d._extend(t,r),z(t.showHidden)&&(t.showHidden=!1),z(t.depth)&&(t.depth=2),z(t.colors)&&(t.colors=!1),z(t.customInspect)&&(t.customInspect=!0),t.colors&&(t.stylize=Ka),Xe(t,e,t.depth)}d.inspect=B;B.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]};B.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};function Ka(e,r){var t=B.styles[r];return t?\"\\x1B[\"+B.colors[t][0]+\"m\"+e+\"\\x1B[\"+B.colors[t][1]+\"m\":e}function ef(e,r){return e}function rf(e){var r={};return e.forEach(function(t,n){r[t]=!0}),r}function Xe(e,r,t){if(e.customInspect&&r&&Ye(r.inspect)&&r.inspect!==d.inspect&&!(r.constructor&&r.constructor.prototype===r)){var n=r.inspect(t,e);return Ke(n)||(n=Xe(e,n,t)),n}var o=tf(e,r);if(o)return o;var i=Object.keys(r),a=rf(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(r)),de(r)&&(i.indexOf(\"message\")>=0||i.indexOf(\"description\")>=0))return kr(r);if(i.length===0){if(Ye(r)){var f=r.name?\": \"+r.name:\"\";return e.stylize(\"[Function\"+f+\"]\",\"special\")}if(ge(r))return e.stylize(RegExp.prototype.toString.call(r),\"regexp\");if(Ze(r))return e.stylize(Date.prototype.toString.call(r),\"date\");if(de(r))return kr(r)}var u=\"\",c=!1,s=[\"{\",\"}\"];if(xn(r)&&(c=!0,s=[\"[\",\"]\"]),Ye(r)){var l=r.name?\": \"+r.name:\"\";u=\" [Function\"+l+\"]\"}if(ge(r)&&(u=\" \"+RegExp.prototype.toString.call(r)),Ze(r)&&(u=\" \"+Date.prototype.toUTCString.call(r)),de(r)&&(u=\" \"+kr(r)),i.length===0&&(!c||r.length==0))return s[0]+u+s[1];if(t<0)return ge(r)?e.stylize(RegExp.prototype.toString.call(r),\"regexp\"):e.stylize(\"[Object]\",\"special\");e.seen.push(r);var p;return c?p=nf(e,r,t,a,i):p=i.map(function(m){return Lr(e,r,t,a,m,c)}),e.seen.pop(),of(p,u,s)}function tf(e,r){if(z(r))return e.stylize(\"undefined\",\"undefined\");if(Ke(r)){var t=\"'\"+JSON.stringify(r).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(t,\"string\")}if(Dn(r))return e.stylize(\"\"+r,\"number\");if(Vr(r))return e.stylize(\"\"+r,\"boolean\");if(Qe(r))return e.stylize(\"null\",\"null\")}function kr(e){return\"[\"+Error.prototype.toString.call(e)+\"]\"}function nf(e,r,t,n,o){for(var i=[],a=0,f=r.length;a<f;++a)Bn(r,String(a))?i.push(Lr(e,r,t,n,String(a),!0)):i.push(\"\");return o.forEach(function(u){u.match(/^\\d+$/)||i.push(Lr(e,r,t,n,u,!0))}),i}function Lr(e,r,t,n,o,i){var a,f,u;if(u=Object.getOwnPropertyDescriptor(r,o)||{value:r[o]},u.get?u.set?f=e.stylize(\"[Getter/Setter]\",\"special\"):f=e.stylize(\"[Getter]\",\"special\"):u.set&&(f=e.stylize(\"[Setter]\",\"special\")),Bn(n,o)||(a=\"[\"+o+\"]\"),f||(e.seen.indexOf(u.value)<0?(Qe(t)?f=Xe(e,u.value,null):f=Xe(e,u.value,t-1),f.indexOf(`\n`)>-1&&(i?f=f.split(`\n`).map(function(c){return\"  \"+c}).join(`\n`).slice(2):f=`\n`+f.split(`\n`).map(function(c){return\"   \"+c}).join(`\n`))):f=e.stylize(\"[Circular]\",\"special\")),z(a)){if(i&&o.match(/^\\d+$/))return f;a=JSON.stringify(\"\"+o),a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(a=a.slice(1,-1),a=e.stylize(a,\"name\")):(a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),a=e.stylize(a,\"string\"))}return a+\": \"+f}function of(e,r,t){var n=0,o=e.reduce(function(i,a){return n++,a.indexOf(`\n`)>=0&&n++,i+a.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1},0);return o>60?t[0]+(r===\"\"?\"\":r+`\n `)+\" \"+e.join(`,\n  `)+\" \"+t[1]:t[0]+r+\" \"+e.join(\", \")+\" \"+t[1]}d.types=qn();function xn(e){return Array.isArray(e)}d.isArray=xn;function Vr(e){return typeof e==\"boolean\"}d.isBoolean=Vr;function Qe(e){return e===null}d.isNull=Qe;function af(e){return e==null}d.isNullOrUndefined=af;function Dn(e){return typeof e==\"number\"}d.isNumber=Dn;function Ke(e){return typeof e==\"string\"}d.isString=Ke;function ff(e){return typeof e==\"symbol\"}d.isSymbol=ff;function z(e){return e===void 0}d.isUndefined=z;function ge(e){return re(e)&&Wr(e)===\"[object RegExp]\"}d.isRegExp=ge;d.types.isRegExp=ge;function re(e){return typeof e==\"object\"&&e!==null}d.isObject=re;function Ze(e){return re(e)&&Wr(e)===\"[object Date]\"}d.isDate=Ze;d.types.isDate=Ze;function de(e){return re(e)&&(Wr(e)===\"[object Error]\"||e instanceof Error)}d.isError=de;d.types.isNativeError=de;function Ye(e){return typeof e==\"function\"}d.isFunction=Ye;function uf(e){return e===null||typeof e==\"boolean\"||typeof e==\"number\"||typeof e==\"string\"||typeof e==\"symbol\"||typeof e>\"u\"}d.isPrimitive=uf;d.isBuffer=Tn();function Wr(e){return Object.prototype.toString.call(e)}function Gr(e){return e<10?\"0\"+e.toString(10):e.toString(10)}var cf=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function sf(){var e=new Date,r=[Gr(e.getHours()),Gr(e.getMinutes()),Gr(e.getSeconds())].join(\":\");return[e.getDate(),cf[e.getMonth()],r].join(\" \")}d.log=function(){console.log(\"%s - %s\",sf(),d.format.apply(d,arguments))};d.inherits=Rn();d._extend=function(e,r){if(!r||!re(r))return e;for(var t=Object.keys(r),n=t.length;n--;)e[t[n]]=r[t[n]];return e};function Bn(e,r){return Object.prototype.hasOwnProperty.call(e,r)}var W=typeof Symbol<\"u\"?Symbol(\"util.promisify.custom\"):void 0;d.promisify=function(r){if(typeof r!=\"function\")throw new TypeError('The \"original\" argument must be of type Function');if(W&&r[W]){var t=r[W];if(typeof t!=\"function\")throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');return Object.defineProperty(t,W,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var n,o,i=new Promise(function(u,c){n=u,o=c}),a=[],f=0;f<arguments.length;f++)a.push(arguments[f]);a.push(function(u,c){u?o(u):n(c)});try{r.apply(this,a)}catch(u){o(u)}return i}return Object.setPrototypeOf(t,Object.getPrototypeOf(r)),W&&Object.defineProperty(t,W,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,Nn(r))};d.promisify.custom=W;function lf(e,r){if(!e){var t=new Error(\"Promise was rejected with a falsy value\");t.reason=e,e=t}return r(e)}function pf(e){if(typeof e!=\"function\")throw new TypeError('The \"original\" argument must be of type Function');function r(){for(var t=[],n=0;n<arguments.length;n++)t.push(arguments[n]);var o=t.pop();if(typeof o!=\"function\")throw new TypeError(\"The last argument must be of type Function\");var i=this,a=function(){return o.apply(i,arguments)};e.apply(this,t).then(function(f){process.nextTick(a.bind(null,null,f))},function(f){process.nextTick(lf.bind(null,f,a))})}return Object.setPrototypeOf(r,Object.getPrototypeOf(e)),Object.defineProperties(r,Nn(e)),r}d.callbackify=pf});var w={};Ai(w,{TextDecoder:()=>_n,TextEncoder:()=>Mn,default:()=>yf});var Mn,_n,yf,te=Si(()=>{D(w,bt(Un()));Mn=globalThis.TextEncoder,_n=globalThis.TextDecoder,yf={TextEncoder:Mn,TextDecoder:_n}});var Jr=y((sc,Gn)=>{\"use strict\";function ne(e){return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?ne=function(t){return typeof t}:ne=function(t){return t&&typeof Symbol==\"function\"&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},ne(e)}function gf(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function df(e,r){return r&&(ne(r)===\"object\"||typeof r==\"function\")?r:hf(e)}function hf(e){if(e===void 0)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function Cr(e){return Cr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Cr(e)}function bf(e,r){if(typeof r!=\"function\"&&r!==null)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&Hr(e,r)}function Hr(e,r){return Hr=Object.setPrototypeOf||function(n,o){return n.__proto__=o,n},Hr(e,r)}var kn={},oe,zr;function he(e,r,t){t||(t=Error);function n(i,a,f){return typeof r==\"string\"?r:r(i,a,f)}var o=function(i){bf(a,i);function a(f,u,c){var s;return gf(this,a),s=df(this,Cr(a).call(this,n(f,u,c))),s.code=e,s}return a}(t);kn[e]=o}function $n(e,r){if(Array.isArray(e)){var t=e.length;return e=e.map(function(n){return String(n)}),t>2?\"one of \".concat(r,\" \").concat(e.slice(0,t-1).join(\", \"),\", or \")+e[t-1]:t===2?\"one of \".concat(r,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(r,\" \").concat(e[0])}else return\"of \".concat(r,\" \").concat(String(e))}function mf(e,r,t){return e.substr(!t||t<0?0:+t,r.length)===r}function vf(e,r,t){return(t===void 0||t>e.length)&&(t=e.length),e.substring(t-r.length,t)===r}function Sf(e,r,t){return typeof t!=\"number\"&&(t=0),t+r.length>e.length?!1:e.indexOf(r,t)!==-1}he(\"ERR_AMBIGUOUS_ARGUMENT\",'The \"%s\" argument is ambiguous. %s',TypeError);he(\"ERR_INVALID_ARG_TYPE\",function(e,r,t){oe===void 0&&(oe=er()),oe(typeof e==\"string\",\"'name' must be a string\");var n;typeof r==\"string\"&&mf(r,\"not \")?(n=\"must not be\",r=r.replace(/^not /,\"\")):n=\"must be\";var o;if(vf(e,\" argument\"))o=\"The \".concat(e,\" \").concat(n,\" \").concat($n(r,\"type\"));else{var i=Sf(e,\".\")?\"property\":\"argument\";o='The \"'.concat(e,'\" ').concat(i,\" \").concat(n,\" \").concat($n(r,\"type\"))}return o+=\". Received type \".concat(ne(t)),o},TypeError);he(\"ERR_INVALID_ARG_VALUE\",function(e,r){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:\"is invalid\";zr===void 0&&(zr=(te(),ue(w)));var n=zr.inspect(r);return n.length>128&&(n=\"\".concat(n.slice(0,128),\"...\")),\"The argument '\".concat(e,\"' \").concat(t,\". Received \").concat(n)},TypeError,RangeError);he(\"ERR_INVALID_RETURN_VALUE\",function(e,r,t){var n;return t&&t.constructor&&t.constructor.name?n=\"instance of \".concat(t.constructor.name):n=\"type \".concat(ne(t)),\"Expected \".concat(e,' to be returned from the \"').concat(r,'\"')+\" function but got \".concat(n,\".\")},TypeError);he(\"ERR_MISSING_ARGS\",function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];oe===void 0&&(oe=er()),oe(r.length>0,\"At least one arg needs to be specified\");var n=\"The \",o=r.length;switch(r=r.map(function(i){return'\"'.concat(i,'\"')}),o){case 1:n+=\"\".concat(r[0],\" argument\");break;case 2:n+=\"\".concat(r[0],\" and \").concat(r[1],\" arguments\");break;default:n+=r.slice(0,o-1).join(\", \"),n+=\", and \".concat(r[o-1],\" arguments\");break}return\"\".concat(n,\" must be specified\")},TypeError);Gn.exports.codes=kn});var Cn=y((lc,zn)=>{\"use strict\";function Af(e){for(var r=1;r<arguments.length;r++){var t=arguments[r]!=null?arguments[r]:{},n=Object.keys(t);typeof Object.getOwnPropertySymbols==\"function\"&&(n=n.concat(Object.getOwnPropertySymbols(t).filter(function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable}))),n.forEach(function(o){Of(e,o,t[o])})}return e}function Of(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function Ef(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function Ln(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function wf(e,r,t){return r&&Ln(e.prototype,r),t&&Ln(e,t),e}function ie(e,r){return r&&(j(r)===\"object\"||typeof r==\"function\")?r:Yr(e)}function Yr(e){if(e===void 0)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function jf(e,r){if(typeof r!=\"function\"&&r!==null)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&Se(e,r)}function Xr(e){var r=typeof Map==\"function\"?new Map:void 0;return Xr=function(n){if(n===null||!qf(n))return n;if(typeof n!=\"function\")throw new TypeError(\"Super expression must either be null or a function\");if(typeof r<\"u\"){if(r.has(n))return r.get(n);r.set(n,o)}function o(){return rr(n,arguments,U(this).constructor)}return o.prototype=Object.create(n.prototype,{constructor:{value:o,enumerable:!1,writable:!0,configurable:!0}}),Se(o,n)},Xr(e)}function Pf(){if(typeof Reflect>\"u\"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy==\"function\")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch{return!1}}function rr(e,r,t){return Pf()?rr=Reflect.construct:rr=function(o,i,a){var f=[null];f.push.apply(f,i);var u=Function.bind.apply(o,f),c=new u;return a&&Se(c,a.prototype),c},rr.apply(null,arguments)}function qf(e){return Function.toString.call(e).indexOf(\"[native code]\")!==-1}function Se(e,r){return Se=Object.setPrototypeOf||function(n,o){return n.__proto__=o,n},Se(e,r)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},U(e)}function j(e){return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?j=function(t){return typeof t}:j=function(t){return t&&typeof Symbol==\"function\"&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},j(e)}var If=(te(),ue(w)),Zr=If.inspect,Tf=Jr(),Rf=Tf.codes.ERR_INVALID_ARG_TYPE;function Vn(e,r,t){return(t===void 0||t>e.length)&&(t=e.length),e.substring(t-r.length,t)===r}function Nf(e,r){if(r=Math.floor(r),e.length==0||r==0)return\"\";var t=e.length*r;for(r=Math.floor(Math.log(r)/Math.log(2));r;)e+=e,r--;return e+=e.substring(0,t-e.length),e}var R=\"\",be=\"\",me=\"\",v=\"\",C={deepStrictEqual:\"Expected values to be strictly deep-equal:\",strictEqual:\"Expected values to be strictly equal:\",strictEqualObject:'Expected \"actual\" to be reference-equal to \"expected\":',deepEqual:\"Expected values to be loosely deep-equal:\",equal:\"Expected values to be loosely equal:\",notDeepStrictEqual:'Expected \"actual\" not to be strictly deep-equal to:',notStrictEqual:'Expected \"actual\" to be strictly unequal to:',notStrictEqualObject:'Expected \"actual\" not to be reference-equal to \"expected\":',notDeepEqual:'Expected \"actual\" not to be loosely deep-equal to:',notEqual:'Expected \"actual\" to be loosely unequal to:',notIdentical:\"Values identical but not reference-equal:\"},Ff=10;function Wn(e){var r=Object.keys(e),t=Object.create(Object.getPrototypeOf(e));return r.forEach(function(n){t[n]=e[n]}),Object.defineProperty(t,\"message\",{value:e.message}),t}function ve(e){return Zr(e,{compact:!1,customInspect:!1,depth:1e3,maxArrayLength:1/0,showHidden:!1,breakLength:1/0,showProxy:!1,sorted:!0,getters:!0})}function xf(e,r,t){var n=\"\",o=\"\",i=0,a=\"\",f=!1,u=ve(e),c=u.split(`\n`),s=ve(r).split(`\n`),l=0,p=\"\";if(t===\"strictEqual\"&&j(e)===\"object\"&&j(r)===\"object\"&&e!==null&&r!==null&&(t=\"strictEqualObject\"),c.length===1&&s.length===1&&c[0]!==s[0]){var m=c[0].length+s[0].length;if(m<=Ff){if((j(e)!==\"object\"||e===null)&&(j(r)!==\"object\"||r===null)&&(e!==0||r!==0))return\"\".concat(C[t],`\n\n`)+\"\".concat(c[0],\" !== \").concat(s[0],`\n`)}else if(t!==\"strictEqualObject\"){var S=process.stderr&&process.stderr.isTTY?process.stderr.columns:80;if(m<S){for(;c[0][l]===s[0][l];)l++;l>2&&(p=`\n  `.concat(Nf(\" \",l),\"^\"),l=0)}}}for(var q=c[c.length-1],gt=s[s.length-1];q===gt&&(l++<2?a=`\n  `.concat(q).concat(a):n=q,c.pop(),s.pop(),!(c.length===0||s.length===0));)q=c[c.length-1],gt=s[s.length-1];var gr=Math.max(c.length,s.length);if(gr===0){var ae=u.split(`\n`);if(ae.length>30)for(ae[26]=\"\".concat(R,\"...\").concat(v);ae.length>27;)ae.pop();return\"\".concat(C.notIdentical,`\n\n`).concat(ae.join(`\n`),`\n`)}l>3&&(a=`\n`.concat(R,\"...\").concat(v).concat(a),f=!0),n!==\"\"&&(a=`\n  `.concat(n).concat(a),n=\"\");var I=0,dt=C[t]+`\n`.concat(be,\"+ actual\").concat(v,\" \").concat(me,\"- expected\").concat(v),ht=\" \".concat(R,\"...\").concat(v,\" Lines skipped\");for(l=0;l<gr;l++){var F=l-i;if(c.length<l+1)F>1&&l>2&&(F>4?(o+=`\n`.concat(R,\"...\").concat(v),f=!0):F>3&&(o+=`\n  `.concat(s[l-2]),I++),o+=`\n  `.concat(s[l-1]),I++),i=l,n+=`\n`.concat(me,\"-\").concat(v,\" \").concat(s[l]),I++;else if(s.length<l+1)F>1&&l>2&&(F>4?(o+=`\n`.concat(R,\"...\").concat(v),f=!0):F>3&&(o+=`\n  `.concat(c[l-2]),I++),o+=`\n  `.concat(c[l-1]),I++),i=l,o+=`\n`.concat(be,\"+\").concat(v,\" \").concat(c[l]),I++;else{var fe=s[l],k=c[l],dr=k!==fe&&(!Vn(k,\",\")||k.slice(0,-1)!==fe);dr&&Vn(fe,\",\")&&fe.slice(0,-1)===k&&(dr=!1,k+=\",\"),dr?(F>1&&l>2&&(F>4?(o+=`\n`.concat(R,\"...\").concat(v),f=!0):F>3&&(o+=`\n  `.concat(c[l-2]),I++),o+=`\n  `.concat(c[l-1]),I++),i=l,o+=`\n`.concat(be,\"+\").concat(v,\" \").concat(k),n+=`\n`.concat(me,\"-\").concat(v,\" \").concat(fe),I+=2):(o+=n,n=\"\",(F===1||l===0)&&(o+=`\n  `.concat(k),I++))}if(I>20&&l<gr-2)return\"\".concat(dt).concat(ht,`\n`).concat(o,`\n`).concat(R,\"...\").concat(v).concat(n,`\n`)+\"\".concat(R,\"...\").concat(v)}return\"\".concat(dt).concat(f?ht:\"\",`\n`).concat(o).concat(n).concat(a).concat(p)}var Df=function(e){jf(r,e);function r(t){var n;if(Ef(this,r),j(t)!==\"object\"||t===null)throw new Rf(\"options\",\"Object\",t);var o=t.message,i=t.operator,a=t.stackStartFn,f=t.actual,u=t.expected,c=Error.stackTraceLimit;if(Error.stackTraceLimit=0,o!=null)n=ie(this,U(r).call(this,String(o)));else if(process.stderr&&process.stderr.isTTY&&(process.stderr&&process.stderr.getColorDepth&&process.stderr.getColorDepth()!==1?(R=\"\\x1B[34m\",be=\"\\x1B[32m\",v=\"\\x1B[39m\",me=\"\\x1B[31m\"):(R=\"\",be=\"\",v=\"\",me=\"\")),j(f)===\"object\"&&f!==null&&j(u)===\"object\"&&u!==null&&\"stack\"in f&&f instanceof Error&&\"stack\"in u&&u instanceof Error&&(f=Wn(f),u=Wn(u)),i===\"deepStrictEqual\"||i===\"strictEqual\")n=ie(this,U(r).call(this,xf(f,u,i)));else if(i===\"notDeepStrictEqual\"||i===\"notStrictEqual\"){var s=C[i],l=ve(f).split(`\n`);if(i===\"notStrictEqual\"&&j(f)===\"object\"&&f!==null&&(s=C.notStrictEqualObject),l.length>30)for(l[26]=\"\".concat(R,\"...\").concat(v);l.length>27;)l.pop();l.length===1?n=ie(this,U(r).call(this,\"\".concat(s,\" \").concat(l[0]))):n=ie(this,U(r).call(this,\"\".concat(s,`\n\n`).concat(l.join(`\n`),`\n`)))}else{var p=ve(f),m=\"\",S=C[i];i===\"notDeepEqual\"||i===\"notEqual\"?(p=\"\".concat(C[i],`\n\n`).concat(p),p.length>1024&&(p=\"\".concat(p.slice(0,1021),\"...\"))):(m=\"\".concat(ve(u)),p.length>512&&(p=\"\".concat(p.slice(0,509),\"...\")),m.length>512&&(m=\"\".concat(m.slice(0,509),\"...\")),i===\"deepEqual\"||i===\"equal\"?p=\"\".concat(S,`\n\n`).concat(p,`\n\nshould equal\n\n`):m=\" \".concat(i,\" \").concat(m)),n=ie(this,U(r).call(this,\"\".concat(p).concat(m)))}return Error.stackTraceLimit=c,n.generatedMessage=!o,Object.defineProperty(Yr(n),\"name\",{value:\"AssertionError [ERR_ASSERTION]\",enumerable:!1,writable:!0,configurable:!0}),n.code=\"ERR_ASSERTION\",n.actual=f,n.expected=u,n.operator=i,Error.captureStackTrace&&Error.captureStackTrace(Yr(n),a),n.stack,n.name=\"AssertionError\",ie(n)}return wf(r,[{key:\"toString\",value:function(){return\"\".concat(this.name,\" [\").concat(this.code,\"]: \").concat(this.message)}},{key:Zr.custom,value:function(n,o){return Zr(this,Af({},o,{customInspect:!1,depth:0}))}}]),r}(Xr(Error));zn.exports=Df});var Yn=y((pc,Jn)=>{\"use strict\";function Hn(e,r){if(e==null)throw new TypeError(\"Cannot convert first argument to object\");for(var t=Object(e),n=1;n<arguments.length;n++){var o=arguments[n];if(o!=null)for(var i=Object.keys(Object(o)),a=0,f=i.length;a<f;a++){var u=i[a],c=Object.getOwnPropertyDescriptor(o,u);c!==void 0&&c.enumerable&&(t[u]=o[u])}}return t}function Bf(){Object.assign||Object.defineProperty(Object,\"assign\",{enumerable:!1,configurable:!0,writable:!0,value:Hn})}Jn.exports={assign:Hn,polyfill:Bf}});var Qr=y((yc,Zn)=>{\"use strict\";var Xn=Object.prototype.toString;Zn.exports=function(r){var t=Xn.call(r),n=t===\"[object Arguments]\";return n||(n=t!==\"[object Array]\"&&r!==null&&typeof r==\"object\"&&typeof r.length==\"number\"&&r.length>=0&&Xn.call(r.callee)===\"[object Function]\"),n}});var ao=y((gc,io)=>{\"use strict\";var oo;Object.keys||(Ae=Object.prototype.hasOwnProperty,Kr=Object.prototype.toString,Qn=Qr(),et=Object.prototype.propertyIsEnumerable,Kn=!et.call({toString:null},\"toString\"),eo=et.call(function(){},\"prototype\"),Oe=[\"toString\",\"toLocaleString\",\"valueOf\",\"hasOwnProperty\",\"isPrototypeOf\",\"propertyIsEnumerable\",\"constructor\"],tr=function(e){var r=e.constructor;return r&&r.prototype===e},ro={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},to=function(){if(typeof window>\"u\")return!1;for(var e in window)try{if(!ro[\"$\"+e]&&Ae.call(window,e)&&window[e]!==null&&typeof window[e]==\"object\")try{tr(window[e])}catch{return!0}}catch{return!0}return!1}(),no=function(e){if(typeof window>\"u\"||!to)return tr(e);try{return tr(e)}catch{return!1}},oo=function(r){var t=r!==null&&typeof r==\"object\",n=Kr.call(r)===\"[object Function]\",o=Qn(r),i=t&&Kr.call(r)===\"[object String]\",a=[];if(!t&&!n&&!o)throw new TypeError(\"Object.keys called on a non-object\");var f=eo&&n;if(i&&r.length>0&&!Ae.call(r,0))for(var u=0;u<r.length;++u)a.push(String(u));if(o&&r.length>0)for(var c=0;c<r.length;++c)a.push(String(c));else for(var s in r)!(f&&s===\"prototype\")&&Ae.call(r,s)&&a.push(String(s));if(Kn)for(var l=no(r),p=0;p<Oe.length;++p)!(l&&Oe[p]===\"constructor\")&&Ae.call(r,Oe[p])&&a.push(Oe[p]);return a});var Ae,Kr,Qn,et,Kn,eo,Oe,tr,ro,to,no;io.exports=oo});var so=y((dc,co)=>{\"use strict\";var Uf=Array.prototype.slice,Mf=Qr(),fo=Object.keys,nr=fo?function(r){return fo(r)}:ao(),uo=Object.keys;nr.shim=function(){if(Object.keys){var r=function(){var t=Object.keys(arguments);return t&&t.length===arguments.length}(1,2);r||(Object.keys=function(n){return Mf(n)?uo(Uf.call(n)):uo(n)})}else Object.keys=nr;return Object.keys||nr};co.exports=nr});var po=y((hc,lo)=>{\"use strict\";var _f=le(),rt=_f(\"%Object.defineProperty%\",!0),tt=function(){if(rt)try{return rt({},\"a\",{value:1}),!0}catch{return!1}return!1};tt.hasArrayLengthDefineBug=function(){if(!tt())return null;try{return rt([],\"length\",{value:1}).length!==1}catch{return!0}};lo.exports=tt});var Ee=y((bc,bo)=>{\"use strict\";var $f=so(),kf=typeof Symbol==\"function\"&&typeof Symbol(\"foo\")==\"symbol\",Gf=Object.prototype.toString,Lf=Array.prototype.concat,yo=Object.defineProperty,Vf=function(e){return typeof e==\"function\"&&Gf.call(e)===\"[object Function]\"},Wf=po()(),go=yo&&Wf,zf=function(e,r,t,n){if(r in e){if(n===!0){if(e[r]===t)return}else if(!Vf(n)||!n())return}go?yo(e,r,{configurable:!0,enumerable:!1,value:t,writable:!0}):e[r]=t},ho=function(e,r){var t=arguments.length>2?arguments[2]:{},n=$f(r);kf&&(n=Lf.call(n,Object.getOwnPropertySymbols(r)));for(var o=0;o<n.length;o+=1)zf(e,n[o],r[n[o]],t[n[o]])};ho.supportsDescriptors=!!go;bo.exports=ho});var nt=y((mc,vo)=>{\"use strict\";var mo=function(e){return e!==e};vo.exports=function(r,t){return r===0&&t===0?1/r===1/t:!!(r===t||mo(r)&&mo(t))}});var ot=y((vc,So)=>{\"use strict\";var Cf=nt();So.exports=function(){return typeof Object.is==\"function\"?Object.is:Cf}});var Oo=y((Sc,Ao)=>{\"use strict\";var Hf=ot(),Jf=Ee();Ao.exports=function(){var r=Hf();return Jf(Object,{is:r},{is:function(){return Object.is!==r}}),r}});var it=y((Ac,jo)=>{\"use strict\";var Yf=Ee(),Xf=Be(),Zf=nt(),Eo=ot(),Qf=Oo(),wo=Xf(Eo(),Object);Yf(wo,{getPolyfill:Eo,implementation:Zf,shim:Qf});jo.exports=wo});var at=y((Oc,Po)=>{\"use strict\";Po.exports=function(r){return r!==r}});var ft=y((Ec,qo)=>{\"use strict\";var Kf=at();qo.exports=function(){return Number.isNaN&&Number.isNaN(NaN)&&!Number.isNaN(\"a\")?Number.isNaN:Kf}});var To=y((wc,Io)=>{\"use strict\";var eu=Ee(),ru=ft();Io.exports=function(){var r=ru();return eu(Number,{isNaN:r},{isNaN:function(){return Number.isNaN!==r}}),r}});var xo=y((jc,Fo)=>{\"use strict\";var tu=Be(),nu=Ee(),ou=at(),Ro=ft(),iu=To(),No=tu(Ro(),Number);nu(No,{getPolyfill:Ro,implementation:ou,shim:iu});Fo.exports=No});var Qo=y((Pc,Zo)=>{\"use strict\";function Do(e,r){return uu(e)||fu(e,r)||au()}function au(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function fu(e,r){var t=[],n=!0,o=!1,i=void 0;try{for(var a=e[Symbol.iterator](),f;!(n=(f=a.next()).done)&&(t.push(f.value),!(r&&t.length===r));n=!0);}catch(u){o=!0,i=u}finally{try{!n&&a.return!=null&&a.return()}finally{if(o)throw i}}return t}function uu(e){if(Array.isArray(e))return e}function O(e){return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?O=function(t){return typeof t}:O=function(t){return t&&typeof Symbol==\"function\"&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},O(e)}var cu=/a/g.flags!==void 0,sr=function(r){var t=[];return r.forEach(function(n){return t.push(n)}),t},Bo=function(r){var t=[];return r.forEach(function(n,o){return t.push([o,n])}),t},Co=Object.is?Object.is:it(),ur=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols:function(){return[]},ut=Number.isNaN?Number.isNaN:xo();function st(e){return e.call.bind(e)}var je=st(Object.prototype.hasOwnProperty),cr=st(Object.prototype.propertyIsEnumerable),Uo=st(Object.prototype.toString),A=(te(),ue(w)).types,su=A.isAnyArrayBuffer,lu=A.isArrayBufferView,Mo=A.isDate,or=A.isMap,_o=A.isRegExp,ir=A.isSet,pu=A.isNativeError,yu=A.isBoxedPrimitive,$o=A.isNumberObject,ko=A.isStringObject,Go=A.isBooleanObject,Lo=A.isBigIntObject,gu=A.isSymbolObject,du=A.isFloat32Array,hu=A.isFloat64Array;function bu(e){if(e.length===0||e.length>10)return!0;for(var r=0;r<e.length;r++){var t=e.charCodeAt(r);if(t<48||t>57)return!0}return e.length===10&&e>=Math.pow(2,32)}function ar(e){return Object.keys(e).filter(bu).concat(ur(e).filter(Object.prototype.propertyIsEnumerable.bind(e)))}function Ho(e,r){if(e===r)return 0;for(var t=e.length,n=r.length,o=0,i=Math.min(t,n);o<i;++o)if(e[o]!==r[o]){t=e[o],n=r[o];break}return t<n?-1:n<t?1:0}var fr=void 0,mu=!0,vu=!1,ct=0,lt=1,Jo=2,Yo=3;function Su(e,r){return cu?e.source===r.source&&e.flags===r.flags:RegExp.prototype.toString.call(e)===RegExp.prototype.toString.call(r)}function Au(e,r){if(e.byteLength!==r.byteLength)return!1;for(var t=0;t<e.byteLength;t++)if(e[t]!==r[t])return!1;return!0}function Ou(e,r){return e.byteLength!==r.byteLength?!1:Ho(new Uint8Array(e.buffer,e.byteOffset,e.byteLength),new Uint8Array(r.buffer,r.byteOffset,r.byteLength))===0}function Eu(e,r){return e.byteLength===r.byteLength&&Ho(new Uint8Array(e),new Uint8Array(r))===0}function wu(e,r){return $o(e)?$o(r)&&Co(Number.prototype.valueOf.call(e),Number.prototype.valueOf.call(r)):ko(e)?ko(r)&&String.prototype.valueOf.call(e)===String.prototype.valueOf.call(r):Go(e)?Go(r)&&Boolean.prototype.valueOf.call(e)===Boolean.prototype.valueOf.call(r):Lo(e)?Lo(r)&&BigInt.prototype.valueOf.call(e)===BigInt.prototype.valueOf.call(r):gu(r)&&Symbol.prototype.valueOf.call(e)===Symbol.prototype.valueOf.call(r)}function P(e,r,t,n){if(e===r)return e!==0?!0:t?Co(e,r):!0;if(t){if(O(e)!==\"object\")return typeof e==\"number\"&&ut(e)&&ut(r);if(O(r)!==\"object\"||e===null||r===null||Object.getPrototypeOf(e)!==Object.getPrototypeOf(r))return!1}else{if(e===null||O(e)!==\"object\")return r===null||O(r)!==\"object\"?e==r:!1;if(r===null||O(r)!==\"object\")return!1}var o=Uo(e),i=Uo(r);if(o!==i)return!1;if(Array.isArray(e)){if(e.length!==r.length)return!1;var a=ar(e,fr),f=ar(r,fr);return a.length!==f.length?!1:we(e,r,t,n,lt,a)}if(o===\"[object Object]\"&&(!or(e)&&or(r)||!ir(e)&&ir(r)))return!1;if(Mo(e)){if(!Mo(r)||Date.prototype.getTime.call(e)!==Date.prototype.getTime.call(r))return!1}else if(_o(e)){if(!_o(r)||!Su(e,r))return!1}else if(pu(e)||e instanceof Error){if(e.message!==r.message||e.name!==r.name)return!1}else if(lu(e)){if(!t&&(du(e)||hu(e))){if(!Au(e,r))return!1}else if(!Ou(e,r))return!1;var u=ar(e,fr),c=ar(r,fr);return u.length!==c.length?!1:we(e,r,t,n,ct,u)}else{if(ir(e))return!ir(r)||e.size!==r.size?!1:we(e,r,t,n,Jo);if(or(e))return!or(r)||e.size!==r.size?!1:we(e,r,t,n,Yo);if(su(e)){if(!Eu(e,r))return!1}else if(yu(e)&&!wu(e,r))return!1}return we(e,r,t,n,ct)}function Vo(e,r){return r.filter(function(t){return cr(e,t)})}function we(e,r,t,n,o,i){if(arguments.length===5){i=Object.keys(e);var a=Object.keys(r);if(i.length!==a.length)return!1}for(var f=0;f<i.length;f++)if(!je(r,i[f]))return!1;if(t&&arguments.length===5){var u=ur(e);if(u.length!==0){var c=0;for(f=0;f<u.length;f++){var s=u[f];if(cr(e,s)){if(!cr(r,s))return!1;i.push(s),c++}else if(cr(r,s))return!1}var l=ur(r);if(u.length!==l.length&&Vo(r,l).length!==c)return!1}else{var p=ur(r);if(p.length!==0&&Vo(r,p).length!==0)return!1}}if(i.length===0&&(o===ct||o===lt&&e.length===0||e.size===0))return!0;if(n===void 0)n={val1:new Map,val2:new Map,position:0};else{var m=n.val1.get(e);if(m!==void 0){var S=n.val2.get(r);if(S!==void 0)return m===S}n.position++}n.val1.set(e,n.position),n.val2.set(r,n.position);var q=Tu(e,r,t,i,n,o);return n.val1.delete(e),n.val2.delete(r),q}function Wo(e,r,t,n){for(var o=sr(e),i=0;i<o.length;i++){var a=o[i];if(P(r,a,t,n))return e.delete(a),!0}return!1}function Xo(e){switch(O(e)){case\"undefined\":return null;case\"object\":return;case\"symbol\":return!1;case\"string\":e=+e;case\"number\":if(ut(e))return!1}return!0}function ju(e,r,t){var n=Xo(t);return n??(r.has(n)&&!e.has(n))}function Pu(e,r,t,n,o){var i=Xo(t);if(i!=null)return i;var a=r.get(i);return a===void 0&&!r.has(i)||!P(n,a,!1,o)?!1:!e.has(i)&&P(n,a,!1,o)}function qu(e,r,t,n){for(var o=null,i=sr(e),a=0;a<i.length;a++){var f=i[a];if(O(f)===\"object\"&&f!==null)o===null&&(o=new Set),o.add(f);else if(!r.has(f)){if(t||!ju(e,r,f))return!1;o===null&&(o=new Set),o.add(f)}}if(o!==null){for(var u=sr(r),c=0;c<u.length;c++){var s=u[c];if(O(s)===\"object\"&&s!==null){if(!Wo(o,s,t,n))return!1}else if(!t&&!e.has(s)&&!Wo(o,s,t,n))return!1}return o.size===0}return!0}function zo(e,r,t,n,o,i){for(var a=sr(e),f=0;f<a.length;f++){var u=a[f];if(P(t,u,o,i)&&P(n,r.get(u),o,i))return e.delete(u),!0}return!1}function Iu(e,r,t,n){for(var o=null,i=Bo(e),a=0;a<i.length;a++){var f=Do(i[a],2),u=f[0],c=f[1];if(O(u)===\"object\"&&u!==null)o===null&&(o=new Set),o.add(u);else{var s=r.get(u);if(s===void 0&&!r.has(u)||!P(c,s,t,n)){if(t||!Pu(e,r,u,c,n))return!1;o===null&&(o=new Set),o.add(u)}}}if(o!==null){for(var l=Bo(r),p=0;p<l.length;p++){var m=Do(l[p],2),u=m[0],S=m[1];if(O(u)===\"object\"&&u!==null){if(!zo(o,e,u,S,t,n))return!1}else if(!t&&(!e.has(u)||!P(e.get(u),S,!1,n))&&!zo(o,e,u,S,!1,n))return!1}return o.size===0}return!0}function Tu(e,r,t,n,o,i){var a=0;if(i===Jo){if(!qu(e,r,t,o))return!1}else if(i===Yo){if(!Iu(e,r,t,o))return!1}else if(i===lt)for(;a<e.length;a++)if(je(e,a)){if(!je(r,a)||!P(e[a],r[a],t,o))return!1}else{if(je(r,a))return!1;for(var f=Object.keys(e);a<f.length;a++){var u=f[a];if(!je(r,u)||!P(e[u],r[u],t,o))return!1}return f.length===Object.keys(r).length}for(a=0;a<n.length;a++){var c=n[a];if(!P(e[c],r[c],t,o))return!1}return!0}function Ru(e,r){return P(e,r,vu)}function Nu(e,r){return P(e,r,mu)}Zo.exports={isDeepEqual:Ru,isDeepStrictEqual:Nu}});var er=y((qc,gi)=>{\"use strict\";function M(e){return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?M=function(t){return typeof t}:M=function(t){return t&&typeof Symbol==\"function\"&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},M(e)}function Fu(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")}var xu=Jr(),qe=xu.codes,Ko=qe.ERR_AMBIGUOUS_ARGUMENT,Pe=qe.ERR_INVALID_ARG_TYPE,Du=qe.ERR_INVALID_ARG_VALUE,Bu=qe.ERR_INVALID_RETURN_VALUE,$=qe.ERR_MISSING_ARGS,H=Cn(),Uu=(te(),ue(w)),Mu=Uu.inspect,ni=(te(),ue(w)).types,_u=ni.isPromise,pt=ni.isRegExp,$u=Object.assign?Object.assign:Yn().assign,oi=Object.is?Object.is:it(),_,lr;function Ie(){var e=Qo();_=e.isDeepEqual,lr=e.isDeepStrictEqual}var ei=!1,b=gi.exports=yt,pr={};function N(e){throw e.message instanceof Error?e.message:new H(e)}function ii(e,r,t,n,o){var i=arguments.length,a;if(i===0)a=\"Failed\";else if(i===1)t=e,e=void 0;else{if(ei===!1){ei=!0;var f=process.emitWarning?process.emitWarning:console.warn.bind(console);f(\"assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.\",\"DeprecationWarning\",\"DEP0094\")}i===2&&(n=\"!=\")}if(t instanceof Error)throw t;var u={actual:e,expected:r,operator:n===void 0?\"fail\":n,stackStartFn:o||ii};t!==void 0&&(u.message=t);var c=new H(u);throw a&&(c.message=a,c.generatedMessage=!0),c}b.fail=ii;b.AssertionError=H;function ai(e,r,t,n){if(!t){var o=!1;if(r===0)o=!0,n=\"No value argument passed to `assert.ok()`\";else if(n instanceof Error)throw n;var i=new H({actual:t,expected:!0,message:n,operator:\"==\",stackStartFn:e});throw i.generatedMessage=o,i}}function yt(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];ai.apply(void 0,[yt,r.length].concat(r))}b.ok=yt;b.equal=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");r!=t&&N({actual:r,expected:t,message:n,operator:\"==\",stackStartFn:e})};b.notEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");r==t&&N({actual:r,expected:t,message:n,operator:\"!=\",stackStartFn:e})};b.deepEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");_===void 0&&Ie(),_(r,t)||N({actual:r,expected:t,message:n,operator:\"deepEqual\",stackStartFn:e})};b.notDeepEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");_===void 0&&Ie(),_(r,t)&&N({actual:r,expected:t,message:n,operator:\"notDeepEqual\",stackStartFn:e})};b.deepStrictEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");_===void 0&&Ie(),lr(r,t)||N({actual:r,expected:t,message:n,operator:\"deepStrictEqual\",stackStartFn:e})};b.notDeepStrictEqual=fi;function fi(e,r,t){if(arguments.length<2)throw new $(\"actual\",\"expected\");_===void 0&&Ie(),lr(e,r)&&N({actual:e,expected:r,message:t,operator:\"notDeepStrictEqual\",stackStartFn:fi})}b.strictEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");oi(r,t)||N({actual:r,expected:t,message:n,operator:\"strictEqual\",stackStartFn:e})};b.notStrictEqual=function e(r,t,n){if(arguments.length<2)throw new $(\"actual\",\"expected\");oi(r,t)&&N({actual:r,expected:t,message:n,operator:\"notStrictEqual\",stackStartFn:e})};var ri=function e(r,t,n){var o=this;Fu(this,e),t.forEach(function(i){i in r&&(n!==void 0&&typeof n[i]==\"string\"&&pt(r[i])&&r[i].test(n[i])?o[i]=n[i]:o[i]=r[i])})};function ku(e,r,t,n,o,i){if(!(t in e)||!lr(e[t],r[t])){if(!n){var a=new ri(e,o),f=new ri(r,o,e),u=new H({actual:a,expected:f,operator:\"deepStrictEqual\",stackStartFn:i});throw u.actual=e,u.expected=r,u.operator=i.name,u}N({actual:e,expected:r,message:n,operator:i.name,stackStartFn:i})}}function ui(e,r,t,n){if(typeof r!=\"function\"){if(pt(r))return r.test(e);if(arguments.length===2)throw new Pe(\"expected\",[\"Function\",\"RegExp\"],r);if(M(e)!==\"object\"||e===null){var o=new H({actual:e,expected:r,message:t,operator:\"deepStrictEqual\",stackStartFn:n});throw o.operator=n.name,o}var i=Object.keys(r);if(r instanceof Error)i.push(\"name\",\"message\");else if(i.length===0)throw new Du(\"error\",r,\"may not be an empty object\");return _===void 0&&Ie(),i.forEach(function(a){typeof e[a]==\"string\"&&pt(r[a])&&r[a].test(e[a])||ku(e,r,a,t,i,n)}),!0}return r.prototype!==void 0&&e instanceof r?!0:Error.isPrototypeOf(r)?!1:r.call({},e)===!0}function ci(e){if(typeof e!=\"function\")throw new Pe(\"fn\",\"Function\",e);try{e()}catch(r){return r}return pr}function ti(e){return _u(e)||e!==null&&M(e)===\"object\"&&typeof e.then==\"function\"&&typeof e.catch==\"function\"}function si(e){return Promise.resolve().then(function(){var r;if(typeof e==\"function\"){if(r=e(),!ti(r))throw new Bu(\"instance of Promise\",\"promiseFn\",r)}else if(ti(e))r=e;else throw new Pe(\"promiseFn\",[\"Function\",\"Promise\"],e);return Promise.resolve().then(function(){return r}).then(function(){return pr}).catch(function(t){return t})})}function li(e,r,t,n){if(typeof t==\"string\"){if(arguments.length===4)throw new Pe(\"error\",[\"Object\",\"Error\",\"Function\",\"RegExp\"],t);if(M(r)===\"object\"&&r!==null){if(r.message===t)throw new Ko(\"error/message\",'The error message \"'.concat(r.message,'\" is identical to the message.'))}else if(r===t)throw new Ko(\"error/message\",'The error \"'.concat(r,'\" is identical to the message.'));n=t,t=void 0}else if(t!=null&&M(t)!==\"object\"&&typeof t!=\"function\")throw new Pe(\"error\",[\"Object\",\"Error\",\"Function\",\"RegExp\"],t);if(r===pr){var o=\"\";t&&t.name&&(o+=\" (\".concat(t.name,\")\")),o+=n?\": \".concat(n):\".\";var i=e.name===\"rejects\"?\"rejection\":\"exception\";N({actual:void 0,expected:t,operator:e.name,message:\"Missing expected \".concat(i).concat(o),stackStartFn:e})}if(t&&!ui(r,t,n,e))throw r}function pi(e,r,t,n){if(r!==pr){if(typeof t==\"string\"&&(n=t,t=void 0),!t||ui(r,t)){var o=n?\": \".concat(n):\".\",i=e.name===\"doesNotReject\"?\"rejection\":\"exception\";N({actual:r,expected:t,operator:e.name,message:\"Got unwanted \".concat(i).concat(o,`\n`)+'Actual message: \"'.concat(r&&r.message,'\"'),stackStartFn:e})}throw r}}b.throws=function e(r){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];li.apply(void 0,[e,ci(r)].concat(n))};b.rejects=function e(r){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];return si(r).then(function(i){return li.apply(void 0,[e,i].concat(n))})};b.doesNotThrow=function e(r){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];pi.apply(void 0,[e,ci(r)].concat(n))};b.doesNotReject=function e(r){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];return si(r).then(function(i){return pi.apply(void 0,[e,i].concat(n))})};b.ifError=function e(r){if(r!=null){var t=\"ifError got unwanted exception: \";M(r)===\"object\"&&typeof r.message==\"string\"?r.message.length===0&&r.constructor?t+=r.constructor.name:t+=r.message:t+=Mu(r);var n=new H({actual:r,expected:null,operator:\"ifError\",message:t,stackStartFn:e}),o=r.stack;if(typeof o==\"string\"){var i=o.split(`\n`);i.shift();for(var a=n.stack.split(`\n`),f=0;f<i.length;f++){var u=a.indexOf(i[f]);if(u!==-1){a=a.slice(0,u);break}}n.stack=\"\".concat(a.join(`\n`),`\n`).concat(i.join(`\n`))}throw n}};function yi(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];ai.apply(void 0,[yi,r.length].concat(r))}b.strict=$u(yi,b,{equal:b.strictEqual,deepEqual:b.deepStrictEqual,notEqual:b.notStrictEqual,notDeepEqual:b.notDeepStrictEqual});b.strict.strict=b.strict});var yr={};D(yr,bt(er()));\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n",
    "// FIXME: Kind of a weird way to throw exceptions, consider removing\nvar assert = require('assert')\nvar BigInteger = require('./bigi')\n\n/**\n * Turns a byte array into a big integer.\n *\n * This function will interpret a byte array as a big integer in big\n * endian notation.\n */\nBigInteger.fromByteArrayUnsigned = function(byteArray) {\n  // BigInteger expects a DER integer conformant byte array\n  if (byteArray[0] & 0x80) {\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(byteArray)\n}\n\n/**\n * Returns a byte array representation of the big integer.\n *\n * This returns the absolute of the contained value in big endian\n * form. A value of zero results in an empty array.\n */\nBigInteger.prototype.toByteArrayUnsigned = function() {\n  var byteArray = this.toByteArray()\n  return byteArray[0] === 0 ? byteArray.slice(1) : byteArray\n}\n\nBigInteger.fromDERInteger = function(byteArray) {\n  return new BigInteger(byteArray)\n}\n\n/*\n * Converts BigInteger to a DER integer representation.\n *\n * The format for this value uses the most significant bit as a sign\n * bit.  If the most significant bit is already set and the integer is\n * positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nBigInteger.prototype.toDERInteger = BigInteger.prototype.toByteArray\n\nBigInteger.fromBuffer = function(buffer) {\n  // BigInteger expects a DER integer conformant byte array\n  if (buffer[0] & 0x80) {\n    var byteArray = Array.prototype.slice.call(buffer)\n\n    return new BigInteger([0].concat(byteArray))\n  }\n\n  return new BigInteger(buffer)\n}\n\nBigInteger.fromHex = function(hex) {\n  if (hex === '') return BigInteger.ZERO\n\n  assert.equal(hex, hex.match(/^[A-Fa-f0-9]+/), 'Invalid hex string')\n  assert.equal(hex.length % 2, 0, 'Incomplete hex')\n  return new BigInteger(hex, 16)\n}\n\nBigInteger.prototype.toBuffer = function(size) {\n  var byteArray = this.toByteArrayUnsigned()\n  var zeros = []\n\n  var padding = size - byteArray.length\n  while (zeros.length < padding) zeros.push(0)\n\n  return new Buffer(zeros.concat(byteArray))\n}\n\nBigInteger.prototype.toHex = function(size) {\n  return this.toBuffer(size).toString('hex')\n}\n",
    "var BigInteger = require('./bigi')\n\n//addons\nrequire('./convert')\n\nmodule.exports = BigInteger",
    "var bip66 = require('bip66')\nvar typeforce = require('typeforce')\nvar types = require('./types')\n\nvar BigInteger = require('bigi')\n\nfunction ECSignature (r, s) {\n  typeforce(types.tuple(types.BigInt, types.BigInt), arguments)\n\n  this.r = r\n  this.s = s\n}\n\nECSignature.ECDSA = 0x00\nECSignature.SCHNORR = 0x01\n\nECSignature.parseCompact = function (buffer) {\n  typeforce(types.BufferN(65), buffer)\n\n  var flagByte = buffer.readUInt8(0) - 27\n  if (flagByte !== (flagByte & 7)) throw new Error('Invalid signature parameter')\n\n  var compressed = !!(flagByte & 4)\n  var recoveryParam = flagByte & 3\n  var signature = ECSignature.fromRSBuffer(buffer.slice(1))\n\n  return {\n    compressed: compressed,\n    i: recoveryParam,\n    signature: signature\n  }\n}\n\nECSignature.fromRSBuffer = function (buffer) {\n  typeforce(types.BufferN(64), buffer)\n\n  var r = BigInteger.fromBuffer(buffer.slice(0, 32))\n  var s = BigInteger.fromBuffer(buffer.slice(32, 64))\n  return new ECSignature(r, s)\n}\n\nECSignature.fromDER = function (buffer) {\n  var decode = bip66.decode(buffer)\n  var r = BigInteger.fromDERInteger(decode.r)\n  var s = BigInteger.fromDERInteger(decode.s)\n\n  return new ECSignature(r, s)\n}\n\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1)\n  var hashTypeMod = hashType & ~0xc0\n\n  if (hashTypeMod <= 0x00 || hashTypeMod >= 0x04) throw new Error('Invalid hashType ' + hashType)\n\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  }\n}\n\nECSignature.prototype.toCompact = function (i, compressed) {\n  if (compressed) {\n    i += 4\n  }\n\n  i += 27\n\n  var buffer = Buffer.alloc(65)\n  buffer.writeUInt8(i, 0)\n  this.toRSBuffer(buffer, 1)\n  return buffer\n}\n\nECSignature.prototype.toDER = function () {\n  var r = Buffer.from(this.r.toDERInteger())\n  var s = Buffer.from(this.s.toDERInteger())\n\n  return bip66.encode(r, s)\n}\n\nECSignature.prototype.toRSBuffer = function (buffer, offset) {\n  if(!offset) offset = 0\n  buffer = buffer || Buffer.alloc(64)\n  this.r.toBuffer(32).copy(buffer, offset)\n  this.s.toBuffer(32).copy(buffer, offset + 32)\n  return buffer\n}\n\nECSignature.prototype.toScriptSignature = function (hashType, signatureAlgorithm) {\n  if(!signatureAlgorithm) signatureAlgorithm = ECSignature.ECDSA\n\n  var hashTypeMod = hashType & ~0xc0\n  if (hashTypeMod <= 0 || hashTypeMod >= 4) throw new Error('Invalid hashType ' + hashType)\n\n  var hashTypeBuffer = Buffer.alloc(1)\n  hashTypeBuffer.writeUInt8(hashType, 0)\n\n  if(signatureAlgorithm === ECSignature.ECDSA){\n    return Buffer.concat([this.toDER(), hashTypeBuffer])\n  } else if(signatureAlgorithm === ECSignature.SCHNORR) {\n    return Buffer.concat([this.toRSBuffer(), hashTypeBuffer])\n  } else {\n    throw new Error('Invalid signature Algorithm')\n  }\n}\n\nmodule.exports = ECSignature\n",
    "var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar BigInteger = require('bigi')\n\nvar THREE = BigInteger.valueOf(3)\n\nfunction Point (curve, x, y, z) {\n  assert.notStrictEqual(z, undefined, 'Missing Z coordinate')\n\n  this.curve = curve\n  this.x = x\n  this.y = y\n  this.z = z\n  this._zInv = null\n\n  this.compressed = true\n}\n\nObject.defineProperty(Point.prototype, 'zInv', {\n  get: function () {\n    if (this._zInv === null) {\n      this._zInv = this.z.modInverse(this.curve.p)\n    }\n\n    return this._zInv\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineX', {\n  get: function () {\n    return this.x.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineY', {\n  get: function () {\n    return this.y.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nPoint.fromAffine = function (curve, x, y) {\n  return new Point(curve, x, y, BigInteger.ONE)\n}\n\nPoint.prototype.equals = function (other) {\n  if (other === this) return true\n  if (this.curve.isInfinity(this)) return this.curve.isInfinity(other)\n  if (this.curve.isInfinity(other)) return this.curve.isInfinity(this)\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = other.y.multiply(this.z).subtract(this.y.multiply(other.z)).mod(this.curve.p)\n\n  if (u.signum() !== 0) return false\n\n  // v = X2 * Z1 - X1 * Z2\n  var v = other.x.multiply(this.z).subtract(this.x.multiply(other.z)).mod(this.curve.p)\n\n  return v.signum() === 0\n}\n\nPoint.prototype.negate = function () {\n  var y = this.curve.p.subtract(this.y)\n\n  return new Point(this.curve, this.x, y, this.z)\n}\n\nPoint.prototype.add = function (b) {\n  if (this.curve.isInfinity(this)) return b\n  if (this.curve.isInfinity(b)) return this\n\n  var x1 = this.x\n  var y1 = this.y\n  var x2 = b.x\n  var y2 = b.y\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = y2.multiply(this.z).subtract(y1.multiply(b.z)).mod(this.curve.p)\n  // v = X2 * Z1 - X1 * Z2\n  var v = x2.multiply(this.z).subtract(x1.multiply(b.z)).mod(this.curve.p)\n\n  if (v.signum() === 0) {\n    if (u.signum() === 0) {\n      return this.twice() // this == b, so double\n    }\n\n    return this.curve.infinity // this = -b, so infinity\n  }\n\n  var v2 = v.square()\n  var v3 = v2.multiply(v)\n  var x1v2 = x1.multiply(v2)\n  var zu2 = u.square().multiply(this.z)\n\n  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p)\n  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p)\n  // z3 = v^3 * z1 * z2\n  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\nPoint.prototype.twice = function () {\n  if (this.curve.isInfinity(this)) return this\n  if (this.y.signum() === 0) return this.curve.infinity\n\n  var x1 = this.x\n  var y1 = this.y\n\n  var y1z1 = y1.multiply(this.z).mod(this.curve.p)\n  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p)\n  var a = this.curve.a\n\n  // w = 3 * x1^2 + a * z1^2\n  var w = x1.square().multiply(THREE)\n\n  if (a.signum() !== 0) {\n    w = w.add(this.z.square().multiply(a))\n  }\n\n  w = w.mod(this.curve.p)\n  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n  var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p)\n  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(3)).mod(this.curve.p)\n  // z3 = 8 * (y1 * z1)^3\n  var z3 = y1z1.pow(3).shiftLeft(3).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nPoint.prototype.multiply = function (k) {\n  if (this.curve.isInfinity(this)) return this\n  if (k.signum() === 0) return this.curve.infinity\n\n  var e = k\n  var h = e.multiply(THREE)\n\n  var neg = this.negate()\n  var R = this\n\n  for (var i = h.bitLength() - 2; i > 0; --i) {\n    var hBit = h.testBit(i)\n    var eBit = e.testBit(i)\n\n    R = R.twice()\n\n    if (hBit !== eBit) {\n      R = R.add(hBit ? this : neg)\n    }\n  }\n\n  return R\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nPoint.prototype.multiplyTwo = function (j, x, k) {\n  var i = Math.max(j.bitLength(), k.bitLength()) - 1\n  var R = this.curve.infinity\n  var both = this.add(x)\n\n  while (i >= 0) {\n    var jBit = j.testBit(i)\n    var kBit = k.testBit(i)\n\n    R = R.twice()\n\n    if (jBit) {\n      if (kBit) {\n        R = R.add(both)\n      } else {\n        R = R.add(this)\n      }\n    } else if (kBit) {\n      R = R.add(x)\n    }\n    --i\n  }\n\n  return R\n}\n\nPoint.prototype.getEncoded = function (compressed) {\n  if (compressed == null) compressed = this.compressed\n  if (this.curve.isInfinity(this)) return Buffer.alloc(1, 0) // Infinity point encoded is simply '00'\n\n  var x = this.affineX\n  var y = this.affineY\n  var byteLength = this.curve.pLength\n  var buffer\n\n  // 0x02/0x03 | X\n  if (compressed) {\n    buffer = Buffer.allocUnsafe(1 + byteLength)\n    buffer.writeUInt8(y.isEven() ? 0x02 : 0x03, 0)\n\n  // 0x04 | X | Y\n  } else {\n    buffer = Buffer.allocUnsafe(1 + byteLength + byteLength)\n    buffer.writeUInt8(0x04, 0)\n\n    y.toBuffer(byteLength).copy(buffer, 1 + byteLength)\n  }\n\n  x.toBuffer(byteLength).copy(buffer, 1)\n\n  return buffer\n}\n\nPoint.decodeFrom = function (curve, buffer) {\n  var type = buffer.readUInt8(0)\n  var compressed = (type !== 4)\n\n  var byteLength = Math.floor((curve.p.bitLength() + 7) / 8)\n  var x = BigInteger.fromBuffer(buffer.slice(1, 1 + byteLength))\n\n  var Q\n  if (compressed) {\n    assert.equal(buffer.length, byteLength + 1, 'Invalid sequence length')\n    assert(type === 0x02 || type === 0x03, 'Invalid sequence tag')\n\n    var isOdd = (type === 0x03)\n    Q = curve.pointFromX(isOdd, x)\n  } else {\n    assert.equal(buffer.length, 1 + byteLength + byteLength, 'Invalid sequence length')\n\n    var y = BigInteger.fromBuffer(buffer.slice(1 + byteLength))\n    Q = Point.fromAffine(curve, x, y)\n  }\n\n  Q.compressed = compressed\n  return Q\n}\n\nPoint.prototype.toString = function () {\n  if (this.curve.isInfinity(this)) return '(INFINITY)'\n\n  return '(' + this.affineX.toString() + ',' + this.affineY.toString() + ')'\n}\n\nmodule.exports = Point\n",
    "var assert = require('assert')\nvar BigInteger = require('bigi')\n\nvar Point = require('./point')\n\nfunction Curve (p, a, b, Gx, Gy, n, h) {\n  this.p = p\n  this.a = a\n  this.b = b\n  this.G = Point.fromAffine(this, Gx, Gy)\n  this.n = n\n  this.h = h\n\n  this.infinity = new Point(this, null, null, BigInteger.ZERO)\n\n  // result caching\n  this.pOverFour = p.add(BigInteger.ONE).shiftRight(2)\n\n  // determine size of p in bytes\n  this.pLength = Math.floor((this.p.bitLength() + 7) / 8)\n}\n\nCurve.prototype.pointFromX = function (isOdd, x) {\n  var alpha = x.pow(3).add(this.a.multiply(x)).add(this.b).mod(this.p)\n  var beta = alpha.modPow(this.pOverFour, this.p) // XXX: not compatible with all curves\n\n  var y = beta\n  if (beta.isEven() ^ !isOdd) {\n    y = this.p.subtract(y) // -y % p\n  }\n\n  return Point.fromAffine(this, x, y)\n}\n\nCurve.prototype.isInfinity = function (Q) {\n  if (Q === this.infinity) return true\n\n  return Q.z.signum() === 0 && Q.y.signum() !== 0\n}\n\nCurve.prototype.isOnCurve = function (Q) {\n  if (this.isInfinity(Q)) return true\n\n  var x = Q.affineX\n  var y = Q.affineY\n  var a = this.a\n  var b = this.b\n  var p = this.p\n\n  // Check that xQ and yQ are integers in the interval [0, p - 1]\n  if (x.signum() < 0 || x.compareTo(p) >= 0) return false\n  if (y.signum() < 0 || y.compareTo(p) >= 0) return false\n\n  // and check that y^2 = x^3 + ax + b (mod p)\n  var lhs = y.square().mod(p)\n  var rhs = x.pow(3).add(a.multiply(x)).add(b).mod(p)\n  return lhs.equals(rhs)\n}\n\n/**\n * Validate an elliptic curve point.\n *\n * See SEC 1, section 3.2.2.1: Elliptic Curve Public Key Validation Primitive\n */\nCurve.prototype.validate = function (Q) {\n  // Check Q != O\n  assert(!this.isInfinity(Q), 'Point is at infinity')\n  assert(this.isOnCurve(Q), 'Point is not on the curve')\n\n  // Check nQ = O (where Q is a scalar multiple of G)\n  var nQ = Q.multiply(this.n)\n  assert(this.isInfinity(nQ), 'Point is not a scalar multiple of G')\n\n  return true\n}\n\nmodule.exports = Curve\n",
    "var BigInteger = require('bigi')\n\nvar curves = require('./curves.json')\nvar Curve = require('./curve')\n\nfunction getCurveByName (name) {\n  var curve = curves[name]\n  if (!curve) return null\n\n  var p = new BigInteger(curve.p, 16)\n  var a = new BigInteger(curve.a, 16)\n  var b = new BigInteger(curve.b, 16)\n  var n = new BigInteger(curve.n, 16)\n  var h = new BigInteger(curve.h, 16)\n  var Gx = new BigInteger(curve.Gx, 16)\n  var Gy = new BigInteger(curve.Gy, 16)\n\n  return new Curve(p, a, b, Gx, Gy, n, h)\n}\n\nmodule.exports = getCurveByName\n",
    "var Point = require('./point')\nvar Curve = require('./curve')\n\nvar getCurveByName = require('./names')\n\nmodule.exports = {\n  Curve: Curve,\n  Point: Point,\n  getCurveByName: getCurveByName\n}\n",
    "var Buffer = require('safe-buffer').Buffer\nvar createHmac = require('create-hmac')\nvar BigInteger = require('bigi')\n\nvar typeforce = require('typeforce')\nvar types = require('./types')\n\nvar ecurve = require('ecurve')\nvar secp256k1 = ecurve.getCurveByName('secp256k1')\n\nvar ZERO = Buffer.alloc(1, 0)\nvar ONE = Buffer.alloc(1, 1)\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nfunction deterministicGenerateK(hash, x, checkSig, algo16) {\n  typeforce(types.tuple(\n    types.Hash256bit,\n    types.Buffer256bit,\n    types.Function\n  ), arguments)\n\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  var k = Buffer.alloc(32, 0)\n  var v = Buffer.alloc(32, 1)\n\n  // Step D\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ZERO)\n    .update(x)\n    .update(hash)\n\n  if(algo16){\n    typeforce(typeforce.BufferN(16), algo16)\n\n    k.update(algo16)\n  }\n\n  k = k.digest()\n\n  // Step E\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step F\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ONE)\n    .update(x)\n    .update(hash)\n    .digest()\n\n  // Step G\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n  v = createHmac('sha256', k).update(v).digest()\n\n  var T = BigInteger.fromBuffer(v)\n\n  // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n  while (T.signum() <= 0 || T.compareTo(secp256k1.n) >= 0 || !checkSig(T)) {\n    k = createHmac('sha256', k)\n      .update(v)\n      .update(ZERO)\n      .digest()\n\n    v = createHmac('sha256', k).update(v).digest()\n\n    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n    v = createHmac('sha256', k).update(v).digest()\n    T = BigInteger.fromBuffer(v)\n  }\n\n  return T\n}\n\nmodule.exports = {\n  deterministicGenerateK: deterministicGenerateK,\n}\n",
    "var typeforce = require('typeforce')\nvar types = require('./types')\n\nvar BigInteger = require('bigi')\nvar ECSignature = require('./ecsignature')\n\nvar ecurve = require('ecurve')\nvar secp256k1 = ecurve.getCurveByName('secp256k1')\n\nvar deterministicGenerateK = require('./rfc6979').deterministicGenerateK\n\nvar N_OVER_TWO = secp256k1.n.shiftRight(1)\n\nfunction sign (hash, d) {\n  typeforce(types.tuple(types.Hash256bit, types.BigInt), arguments)\n\n  var x = d.toBuffer(32)\n  var e = BigInteger.fromBuffer(hash)\n  var n = secp256k1.n\n  var G = secp256k1.G\n\n  var r, s\n  deterministicGenerateK(hash, x, function (k) {\n    var Q = G.multiply(k)\n\n    if (secp256k1.isInfinity(Q)) return false\n\n    r = Q.affineX.mod(n)\n    if (r.signum() === 0) return false\n\n    s = k.modInverse(n).multiply(e.add(d.multiply(r))).mod(n)\n    if (s.signum() === 0) return false\n\n    return true\n  })\n\n  // enforce low S values, see bip62: 'low s values in signatures'\n  if (s.compareTo(N_OVER_TWO) > 0) {\n    s = n.subtract(s)\n  }\n\n  return new ECSignature(r, s)\n}\n\nfunction verify (hash, signature, Q) {\n  typeforce(types.tuple(\n    types.Hash256bit,\n    types.ECSignature,\n    types.ECPoint\n  ), arguments)\n\n  var n = secp256k1.n\n  var G = secp256k1.G\n\n  var r = signature.r\n  var s = signature.s\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1]\n  if (r.signum() <= 0 || r.compareTo(n) >= 0) return false\n  if (s.signum() <= 0 || s.compareTo(n) >= 0) return false\n\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  var e = BigInteger.fromBuffer(hash)\n\n  // Compute s^-1\n  var sInv = s.modInverse(n)\n\n  // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n  var u1 = e.multiply(sInv).mod(n)\n  var u2 = r.multiply(sInv).mod(n)\n\n  // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n  var R = G.multiplyTwo(u1, Q, u2)\n\n  // 1.4.5 (cont.) Enforce R is not at infinity\n  if (secp256k1.isInfinity(R)) return false\n\n  // 1.4.6 Convert the field element R.x to an integer\n  var xR = R.affineX\n\n  // 1.4.7 Set v = xR mod n\n  var v = xR.mod(n)\n\n  // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n  return v.equals(r)\n}\n\nmodule.exports = {\n  deterministicGenerateK: deterministicGenerateK,\n  sign: sign,\n  verify: verify,\n\n  // TODO: remove\n  __curve: secp256k1\n}\n",
    "var typeforce = require('typeforce')\nvar types = require('./types')\n\nvar BigInteger = require('bigi')\nvar ECSignature = require('./ecsignature')\nvar crypto = require('./crypto')\n\nvar ecurve = require('ecurve')\nvar secp256k1 = ecurve.getCurveByName('secp256k1')\n\nvar deterministicGenerateK = require('./rfc6979').deterministicGenerateK\n\nvar USE_RFC6979 = true\nfunction sign(h, x) {\n  typeforce(types.tuple(\n    types.BufferN(32),\n    types.BigInt\n  ), arguments)\n\n  var n = secp256k1.n\n  var G = secp256k1.G\n\n  if(x.compareTo(BigInteger.ZERO) <= 0 || x.compareTo(n) >= 0){\n    throw new Error('Private key x not in range')\n  }\n\n  var P = G.multiply(x);\n\n  var r, s\n  function signWithK(k){\n    var R = G.multiply(k)\n\n    // sign chosen so that the Y coordinate of R has Jacobi symbol 1\n    if(jacobi(R.affineY, secp256k1.p) != 1){\n      k = n.subtract(k)\n      R = G.multiply(k)\n    }\n\n    r = R.affineX.mod(n)\n\n    var BP = toCompressedPoint(P)\n    var Br = r.toBuffer(32)\n\n    var eh = crypto.sha256(Buffer.concat([Br, BP, h]))\n    var e = BigInteger.fromBuffer(eh).mod(n)\n\n    s = k.add(e.multiply(x)).mod(n)\n\n    return true\n  }\n\n  if(USE_RFC6979){\n    deterministicGenerateK(h, x.toBuffer(32), signWithK, Buffer.from('Schnorr+SHA256  ', 'ascii'))\n  } else {\n    var kh = crypto.sha256(Buffer.concat([x.toBuffer(32), h]))\n    var k = BigInteger.fromBuffer(kh).mod(n)\n    signWithK(k)\n  }\n\n  return new ECSignature(r, s)\n}\n\n// https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/2019-05-15-schnorr.md#signature-verification-algorithm\nfunction verify (h, signature, P) {\n  typeforce(types.tuple(\n    types.BufferN(32),\n    types.ECSignature,\n    types.ECPoint\n  ), arguments)\n\n  var n = secp256k1.n\n  var G = secp256k1.G\n\n  var r = signature.r\n  var s = signature.s\n\n  // 1. Fail if point P is not actually on the curve, or if it is the point at infinity.\n  if(!secp256k1.isOnCurve(P)) return false\n  if(secp256k1.isInfinity(P)) return false\n\n  // 2. Fail if r >= p, where p is the field size used in secp256k1.\n  if(r.compareTo(secp256k1.p) >= 0) return false\n\n  // 3. Fail if s >= n, where n is the order of the secp256k1 curve.\n  if(s.compareTo(n) >= 0) return false\n\n  // 4. Let BP be the 33-byte encoding of P as a compressed point.\n  var BP = toCompressedPoint(P)\n\n  // 5. Let Br be the 32-byte encoding of r as an unsigned big-endian 256-bit integer.\n  var Br = r.toBuffer(32)\n\n  // 6. Compute integer e = H(Br | BP | h) mod n.\n  var h = crypto.sha256(Buffer.concat([Br, BP, h]))\n  var e = BigInteger.fromBuffer(h).mod(n)\n\n  // 7. Compute elliptic curve point R' = sG + (-e)P, where G is the secp256k1 generator point.\n  var R = G.multiply(s).add(P.multiply(n.subtract(e)))\n\n  // 8. Fail if R' is the point at infinity.\n  if(secp256k1.isInfinity(R)) return false\n\n  // 9. Fail if the X coordinate of R' is not equal to r.\n  if(R.affineX.compareTo(r) != 0) return false\n\n  // 10. Fail if the Jacobi symbol of the Y coordinate of R' is not 1.\n  if(jacobi(R.affineY, secp256k1.p) != 1) return false\n\n  // 11. Otherwise, the signature is valid\n  return true\n}\n\nfunction jacobi(a, p){\n  return a.modPow(p.subtract(BigInteger.ONE).divide(BigInteger.valueOf(2)), p).intValue();\n}\n\nfunction toCompressedPoint(P){\n  typeforce(types.tuple(\n    types.ECPoint\n  ), arguments)\n\n  return Buffer.concat([Buffer.from([P.affineY.isEven() ? 0x02 : 0x03]), P.affineX.toBuffer(32)]);\n}\n\nfunction fromCompressedPoint(buffer){\n  typeforce(types.tuple(\n    types.BufferN(33)\n  ), arguments)\n\n  if(buffer.length !== 33) throw new Error('Invalid length of buffer')\n  if(buffer[0] !== 0x2 && buffer[0] !== 0x3) throw new Error('Invalid signum byte')\n\n  var isOdd = buffer[0] === 0x3\n  var x = BigInteger.fromBuffer(buffer.slice(1, 33))\n\n  return secp256k1.pointFromX(isOdd, x)\n}\n\nmodule.exports = {\n  deterministicGenerateK: deterministicGenerateK,\n  sign: sign,\n  verify: verify,\n\n  jacobi: jacobi,\n  toCompressedPoint: toCompressedPoint,\n  fromCompressedPoint: fromCompressedPoint,\n\n  // TODO: remove\n  __curve: secp256k1,\n  __useRFC6979: function(use){\n    USE_RFC6979 = use\n  }\n}\n",
    "var baddress = require('./address')\nvar bcrypto = require('./crypto')\nvar ecdsa = require('./ecdsa')\nvar schnorr = require('./schnorr')\nvar randomBytes = require('randombytes')\nvar typeforce = require('typeforce')\nvar types = require('./types')\nvar wif = require('wif')\nvar ECSignature = require('./ecsignature')\n\nvar NETWORKS = require('./networks')\nvar BigInteger = require('bigi')\n\nvar ecurve = require('ecurve')\nvar secp256k1 = ecdsa.__curve\n\nfunction ECPair (d, Q, options) {\n  if (options) {\n    typeforce({\n      compressed: types.maybe(types.Boolean),\n      network: types.maybe(types.Network)\n    }, options)\n  }\n\n  options = options || {}\n\n  if (d) {\n    if (d.signum() <= 0) throw new Error('Private key must be greater than 0')\n    if (d.compareTo(secp256k1.n) >= 0) throw new Error('Private key must be less than the curve order')\n    if (Q) throw new TypeError('Unexpected publicKey parameter')\n\n    this.d = d\n  } else {\n    typeforce(types.ECPoint, Q)\n\n    this.__Q = Q\n  }\n\n  this.compressed = options.compressed === undefined ? true : options.compressed\n  this.network = options.network || NETWORKS.bitcoin\n}\n\nObject.defineProperty(ECPair.prototype, 'Q', {\n  get: function () {\n    if (!this.__Q && this.d) {\n      this.__Q = secp256k1.G.multiply(this.d)\n    }\n\n    return this.__Q\n  }\n})\n\nECPair.fromPublicKeyBuffer = function (buffer, network) {\n  var Q = ecurve.Point.decodeFrom(secp256k1, buffer)\n\n  return new ECPair(null, Q, {\n    compressed: Q.compressed,\n    network: network\n  })\n}\n\nECPair.fromWIF = function (string, network) {\n  var decoded = wif.decode(string)\n  var version = decoded.version\n\n  // list of networks?\n  if (types.Array(network)) {\n    network = network.filter(function (x) {\n      return version === x.wif\n    }).pop()\n\n    if (!network) throw new Error('Unknown network version')\n\n  // otherwise, assume a network object (or default to bitcoin)\n  } else {\n    network = network || NETWORKS.bitcoin\n\n    if (version !== network.wif) throw new Error('Invalid network version')\n  }\n\n  var d = BigInteger.fromBuffer(decoded.privateKey)\n\n  return new ECPair(d, null, {\n    compressed: decoded.compressed,\n    network: network\n  })\n}\n\nECPair.makeRandom = function (options) {\n  options = options || {}\n\n  var rng = options.rng || randomBytes\n\n  var d\n  do {\n    var buffer = rng(32)\n    typeforce(types.Buffer256bit, buffer)\n\n    d = BigInteger.fromBuffer(buffer)\n  } while (d.signum() <= 0 || d.compareTo(secp256k1.n) >= 0)\n\n  return new ECPair(d, null, options)\n}\n\nECPair.prototype.getAddress = function () {\n  return baddress.toBase58Check(bcrypto.hash160(this.getPublicKeyBuffer()), this.getNetwork().pubKeyHash)\n}\n\nECPair.prototype.getNetwork = function () {\n  return this.network\n}\n\nECPair.prototype.getPublicKeyBuffer = function () {\n  return this.Q.getEncoded(this.compressed)\n}\n\nECPair.prototype.sign = function (hash, signatureAlgorithm) {\n  if (!this.d) throw new Error('Missing private key')\n  if (!signatureAlgorithm) signatureAlgorithm = ECSignature.ECDSA\n\n  if(signatureAlgorithm === ECSignature.ECDSA){\n    return ecdsa.sign(hash, this.d)\n  } else if(signatureAlgorithm === ECSignature.SCHNORR){\n    return schnorr.sign(hash, this.d)\n  }\n}\n\nECPair.prototype.toWIF = function () {\n  if (!this.d) throw new Error('Missing private key')\n\n  return wif.encode(this.network.wif, this.d.toBuffer(32), this.compressed)\n}\n\nECPair.prototype.verify = function (hash, signature) {\n  return ecdsa.verify(hash, signature, this.Q)\n}\n\nmodule.exports = ECPair\n",
    "var Buffer = require('safe-buffer').Buffer\nvar base58check = require('bs58check')\nvar bcrypto = require('./crypto')\nvar createHmac = require('create-hmac')\nvar typeforce = require('typeforce')\nvar types = require('./types')\nvar NETWORKS = require('./networks')\n\nvar BigInteger = require('bigi')\nvar ECPair = require('./ecpair')\n\nvar ecurve = require('ecurve')\nvar curve = ecurve.getCurveByName('secp256k1')\n\nfunction HDNode (keyPair, chainCode) {\n  // CT 6/18/2020 Commented this out. It causes problems with Gatsby and other\n  // web apps that use webpack. Somehow the keyPair comes through in a way that\n  // is perfectly valid, but failes the type check.\n  // typeforce(types.tuple('ECPair', types.Buffer256bit), arguments)\n\n  if (!keyPair.compressed) throw new TypeError('BIP32 only allows compressed keyPairs')\n\n  this.keyPair = keyPair\n  this.chainCode = chainCode\n  this.depth = 0\n  this.index = 0\n  this.parentFingerprint = 0x00000000\n}\n\nHDNode.HIGHEST_BIT = 0x80000000\nHDNode.LENGTH = 78\nHDNode.MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\n\nHDNode.fromSeedBuffer = function (seed, network) {\n  typeforce(types.tuple(types.Buffer, types.maybe(types.Network)), arguments)\n\n  if (seed.length < 16) throw new TypeError('Seed should be at least 128 bits')\n  if (seed.length > 64) throw new TypeError('Seed should be at most 512 bits')\n\n  var I = createHmac('sha512', HDNode.MASTER_SECRET).update(seed).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  // In case IL is 0 or >= n, the master key is invalid\n  // This is handled by the ECPair constructor\n  var pIL = BigInteger.fromBuffer(IL)\n  var keyPair = new ECPair(pIL, null, {\n    network: network\n  })\n\n  return new HDNode(keyPair, IR)\n}\n\nHDNode.fromSeedHex = function (hex, network) {\n  return HDNode.fromSeedBuffer(Buffer.from(hex, 'hex'), network)\n}\n\nHDNode.fromBase58 = function (string, networks) {\n  var buffer = base58check.decode(string)\n  if (buffer.length !== 78) throw new Error('Invalid buffer length')\n\n  // 4 bytes: version bytes\n  var version = buffer.readUInt32BE(0)\n  var network\n\n  // list of networks?\n  if (Array.isArray(networks)) {\n    network = networks.filter(function (x) {\n      return version === x.bip32.private ||\n             version === x.bip32.public\n    }).pop()\n\n    if (!network) throw new Error('Unknown network version')\n\n  // otherwise, assume a network object (or default to bitcoin)\n  } else {\n    network = networks || NETWORKS.bitcoin\n  }\n\n  if (version !== network.bip32.private &&\n    version !== network.bip32.public) throw new Error('Invalid network version')\n\n  // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n  var depth = buffer[4]\n\n  // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n  var parentFingerprint = buffer.readUInt32BE(5)\n  if (depth === 0) {\n    if (parentFingerprint !== 0x00000000) throw new Error('Invalid parent fingerprint')\n  }\n\n  // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in MSB order. (0x00000000 if master key)\n  var index = buffer.readUInt32BE(9)\n  if (depth === 0 && index !== 0) throw new Error('Invalid index')\n\n  // 32 bytes: the chain code\n  var chainCode = buffer.slice(13, 45)\n  var keyPair\n\n  // 33 bytes: private key data (0x00 + k)\n  if (version === network.bip32.private) {\n    if (buffer.readUInt8(45) !== 0x00) throw new Error('Invalid private key')\n\n    var d = BigInteger.fromBuffer(buffer.slice(46, 78))\n    keyPair = new ECPair(d, null, { network: network })\n\n  // 33 bytes: public key data (0x02 + X or 0x03 + X)\n  } else {\n    var Q = ecurve.Point.decodeFrom(curve, buffer.slice(45, 78))\n    // Q.compressed is assumed, if somehow this assumption is broken, `new HDNode` will throw\n\n    // Verify that the X coordinate in the public point corresponds to a point on the curve.\n    // If not, the extended public key is invalid.\n    curve.validate(Q)\n\n    keyPair = new ECPair(null, Q, { network: network })\n  }\n\n  var hd = new HDNode(keyPair, chainCode)\n  hd.depth = depth\n  hd.index = index\n  hd.parentFingerprint = parentFingerprint\n\n  return hd\n}\n\nHDNode.prototype.getAddress = function () {\n  return this.keyPair.getAddress()\n}\n\nHDNode.prototype.getIdentifier = function () {\n  return bcrypto.hash160(this.keyPair.getPublicKeyBuffer())\n}\n\nHDNode.prototype.getFingerprint = function () {\n  return this.getIdentifier().slice(0, 4)\n}\n\nHDNode.prototype.getNetwork = function () {\n  return this.keyPair.getNetwork()\n}\n\nHDNode.prototype.getPublicKeyBuffer = function () {\n  return this.keyPair.getPublicKeyBuffer()\n}\n\nHDNode.prototype.neutered = function () {\n  var neuteredKeyPair = new ECPair(null, this.keyPair.Q, {\n    network: this.keyPair.network\n  })\n\n  var neutered = new HDNode(neuteredKeyPair, this.chainCode)\n  neutered.depth = this.depth\n  neutered.index = this.index\n  neutered.parentFingerprint = this.parentFingerprint\n\n  return neutered\n}\n\nHDNode.prototype.sign = function (hash) {\n  return this.keyPair.sign(hash)\n}\n\nHDNode.prototype.verify = function (hash, signature) {\n  return this.keyPair.verify(hash, signature)\n}\n\nHDNode.prototype.toBase58 = function (__isPrivate) {\n  if (__isPrivate !== undefined) throw new TypeError('Unsupported argument in 2.0.0')\n\n  // Version\n  var network = this.keyPair.network\n  var version = (!this.isNeutered()) ? network.bip32.private : network.bip32.public\n  var buffer = Buffer.allocUnsafe(78)\n\n  // 4 bytes: version bytes\n  buffer.writeUInt32BE(version, 0)\n\n  // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n  buffer.writeUInt8(this.depth, 4)\n\n  // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n  buffer.writeUInt32BE(this.parentFingerprint, 5)\n\n  // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in big endian. (0x00000000 if master key)\n  buffer.writeUInt32BE(this.index, 9)\n\n  // 32 bytes: the chain code\n  this.chainCode.copy(buffer, 13)\n\n  // 33 bytes: the public key or private key data\n  if (!this.isNeutered()) {\n    // 0x00 + k for private keys\n    buffer.writeUInt8(0, 45)\n    this.keyPair.d.toBuffer(32).copy(buffer, 46)\n\n  // 33 bytes: the public key\n  } else {\n    // X9.62 encoding for public keys\n    this.keyPair.getPublicKeyBuffer().copy(buffer, 45)\n  }\n\n  return base58check.encode(buffer)\n}\n\n// https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\nHDNode.prototype.derive = function (index) {\n  typeforce(types.UInt32, index)\n\n  var isHardened = index >= HDNode.HIGHEST_BIT\n  var data = Buffer.allocUnsafe(37)\n\n  // Hardened child\n  if (isHardened) {\n    if (this.isNeutered()) throw new TypeError('Could not derive hardened child key')\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data[0] = 0x00\n    this.keyPair.d.toBuffer(32).copy(data, 1)\n    data.writeUInt32BE(index, 33)\n\n  // Normal child\n  } else {\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    this.keyPair.getPublicKeyBuffer().copy(data, 0)\n    data.writeUInt32BE(index, 33)\n  }\n\n  var I = createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var pIL = BigInteger.fromBuffer(IL)\n\n  // In case parse256(IL) >= n, proceed with the next value for i\n  if (pIL.compareTo(curve.n) >= 0) {\n    return this.derive(index + 1)\n  }\n\n  // Private parent key -> private child key\n  var derivedKeyPair\n  if (!this.isNeutered()) {\n    // ki = parse256(IL) + kpar (mod n)\n    var ki = pIL.add(this.keyPair.d).mod(curve.n)\n\n    // In case ki == 0, proceed with the next value for i\n    if (ki.signum() === 0) {\n      return this.derive(index + 1)\n    }\n\n    derivedKeyPair = new ECPair(ki, null, {\n      network: this.keyPair.network\n    })\n\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    var Ki = curve.G.multiply(pIL).add(this.keyPair.Q)\n\n    // In case Ki is the point at infinity, proceed with the next value for i\n    if (curve.isInfinity(Ki)) {\n      return this.derive(index + 1)\n    }\n\n    derivedKeyPair = new ECPair(null, Ki, {\n      network: this.keyPair.network\n    })\n  }\n\n  var hd = new HDNode(derivedKeyPair, IR)\n  hd.depth = this.depth + 1\n  hd.index = index\n  hd.parentFingerprint = this.getFingerprint().readUInt32BE(0)\n\n  return hd\n}\n\nHDNode.prototype.deriveHardened = function (index) {\n  typeforce(types.UInt31, index)\n\n  // Only derives hardened private keys by default\n  return this.derive(index + HDNode.HIGHEST_BIT)\n}\n\n// Private === not neutered\n// Public === neutered\nHDNode.prototype.isNeutered = function () {\n  return !(this.keyPair.d)\n}\n\nHDNode.prototype.derivePath = function (path) {\n  typeforce(types.BIP32Path, path)\n\n  var splitPath = path.split('/')\n  if (splitPath[0] === 'm') {\n    if (this.parentFingerprint) {\n      throw new Error('Not a master node')\n    }\n\n    splitPath = splitPath.slice(1)\n  }\n\n  return splitPath.reduce(function (prevHd, indexStr) {\n    var index\n    if (indexStr.slice(-1) === \"'\") {\n      index = parseInt(indexStr.slice(0, -1), 10)\n      return prevHd.deriveHardened(index)\n    } else {\n      index = parseInt(indexStr, 10)\n      return prevHd.derive(index)\n    }\n  }, this)\n}\n\nmodule.exports = HDNode\n",
    "var Buffer = require('safe-buffer').Buffer\nvar baddress = require('./address')\nvar bcrypto = require('./crypto')\nvar bscript = require('./script')\nvar btemplates = require('./templates')\nvar networks = require('./networks')\nvar ops = require('@psf/bitcoincash-ops')\nvar typeforce = require('typeforce')\nvar types = require('./types')\nvar scriptTypes = btemplates.types\nvar SIGNABLE = [btemplates.types.P2PKH, btemplates.types.P2PK, btemplates.types.MULTISIG]\nvar P2SH = SIGNABLE.concat([btemplates.types.P2WPKH, btemplates.types.P2WSH])\n\nvar ECPair = require('./ecpair')\nvar ECSignature = require('./ecsignature')\nvar Transaction = require('./transaction')\n\nfunction supportedType (type) {\n  return SIGNABLE.indexOf(type) !== -1\n}\n\nfunction supportedP2SHType (type) {\n  return P2SH.indexOf(type) !== -1\n}\n\nfunction extractChunks (type, chunks, script) {\n  var pubKeys = []\n  var signatures = []\n  switch (type) {\n    case scriptTypes.P2PKH:\n      // if (redeemScript) throw new Error('Nonstandard... P2SH(P2PKH)')\n      pubKeys = chunks.slice(1)\n      signatures = chunks.slice(0, 1)\n      break\n\n    case scriptTypes.P2PK:\n      pubKeys[0] = script ? btemplates.pubKey.output.decode(script) : undefined\n      signatures = chunks.slice(0, 1)\n      break\n\n    case scriptTypes.MULTISIG:\n      if (script) {\n        var multisig = btemplates.multisig.output.decode(script)\n        pubKeys = multisig.pubKeys\n      }\n\n      signatures = chunks.slice(1).map(function (chunk) {\n        return chunk.length === 0 ? undefined : chunk\n      })\n      break\n  }\n\n  return {\n    pubKeys: pubKeys,\n    signatures: signatures\n  }\n}\nfunction expandInput (scriptSig, witnessStack) {\n  if (scriptSig.length === 0 && witnessStack.length === 0) return {}\n\n  var prevOutScript\n  var prevOutType\n  var scriptType\n  var script\n  var redeemScript\n  var witnessScript\n  var witnessScriptType\n  var redeemScriptType\n  var witness = false\n  var p2wsh = false\n  var p2sh = false\n  var witnessProgram\n  var chunks\n\n  var scriptSigChunks = bscript.decompile(scriptSig)\n  var sigType = btemplates.classifyInput(scriptSigChunks, true)\n  if (sigType === scriptTypes.P2SH) {\n    p2sh = true\n    redeemScript = scriptSigChunks[scriptSigChunks.length - 1]\n    redeemScriptType = btemplates.classifyOutput(redeemScript)\n    prevOutScript = btemplates.scriptHash.output.encode(bcrypto.hash160(redeemScript))\n    prevOutType = scriptTypes.P2SH\n    script = redeemScript\n  }\n\n  var classifyWitness = btemplates.classifyWitness(witnessStack, true)\n  if (classifyWitness === scriptTypes.P2WSH) {\n    witnessScript = witnessStack[witnessStack.length - 1]\n    witnessScriptType = btemplates.classifyOutput(witnessScript)\n    p2wsh = true\n    witness = true\n    if (scriptSig.length === 0) {\n      prevOutScript = btemplates.witnessScriptHash.output.encode(bcrypto.sha256(witnessScript))\n      prevOutType = scriptTypes.P2WSH\n      if (redeemScript !== undefined) {\n        throw new Error('Redeem script given when unnecessary')\n      }\n      // bare witness\n    } else {\n      if (!redeemScript) {\n        throw new Error('No redeemScript provided for P2WSH, but scriptSig non-empty')\n      }\n      witnessProgram = btemplates.witnessScriptHash.output.encode(bcrypto.sha256(witnessScript))\n      if (!redeemScript.equals(witnessProgram)) {\n        throw new Error('Redeem script didn\\'t match witnessScript')\n      }\n    }\n\n    if (!supportedType(btemplates.classifyOutput(witnessScript))) {\n      throw new Error('unsupported witness script')\n    }\n\n    script = witnessScript\n    scriptType = witnessScriptType\n    chunks = witnessStack.slice(0, -1)\n  } else if (classifyWitness === scriptTypes.P2WPKH) {\n    witness = true\n    var key = witnessStack[witnessStack.length - 1]\n    var keyHash = bcrypto.hash160(key)\n    if (scriptSig.length === 0) {\n      prevOutScript = btemplates.witnessPubKeyHash.output.encode(keyHash)\n      prevOutType = scriptTypes.P2WPKH\n      if (typeof redeemScript !== 'undefined') {\n        throw new Error('Redeem script given when unnecessary')\n      }\n    } else {\n      if (!redeemScript) {\n        throw new Error('No redeemScript provided for P2WPKH, but scriptSig wasn\\'t empty')\n      }\n      witnessProgram = btemplates.witnessPubKeyHash.output.encode(keyHash)\n      if (!redeemScript.equals(witnessProgram)) {\n        throw new Error('Redeem script did not have the right witness program')\n      }\n    }\n\n    scriptType = scriptTypes.P2PKH\n    chunks = witnessStack\n  } else if (redeemScript) {\n    if (!supportedP2SHType(redeemScriptType)) {\n      throw new Error('Bad redeemscript!')\n    }\n\n    script = redeemScript\n    scriptType = redeemScriptType\n    chunks = scriptSigChunks.slice(0, -1)\n  } else {\n    prevOutType = scriptType = btemplates.classifyInput(scriptSig)\n    chunks = scriptSigChunks\n  }\n\n  var expanded = extractChunks(scriptType, chunks, script)\n\n  var result = {\n    pubKeys: expanded.pubKeys,\n    signatures: expanded.signatures,\n    prevOutScript: prevOutScript,\n    prevOutType: prevOutType,\n    signType: scriptType,\n    signScript: script,\n    witness: Boolean(witness)\n  }\n\n  if (p2sh) {\n    result.redeemScript = redeemScript\n    result.redeemScriptType = redeemScriptType\n  }\n\n  if (p2wsh) {\n    result.witnessScript = witnessScript\n    result.witnessScriptType = witnessScriptType\n  }\n\n  return result\n}\n\n// could be done in expandInput, but requires the original Transaction for hashForSignature\nfunction fixMultisigOrder (input, transaction, vin, value, bitcoinCash) {\n  if (input.redeemScriptType !== scriptTypes.MULTISIG || !input.redeemScript) return\n  if (input.pubKeys.length === input.signatures.length) return\n\n  var unmatched = input.signatures.concat()\n\n  input.signatures = input.pubKeys.map(function (pubKey) {\n    var keyPair = ECPair.fromPublicKeyBuffer(pubKey)\n    var match\n\n    // check for a signature\n    unmatched.some(function (signature, i) {\n      // skip if undefined || OP_0\n      if (!signature) return false\n\n      // TODO: avoid O(n) hashForSignature\n      var parsed = ECSignature.parseScriptSignature(signature)\n      var hash\n      if (bitcoinCash) {\n        hash = transaction.hashForCashSignature(vin, input.signScript, value, parsed.hashType)\n      } else {\n        if (input.witness) {\n          hash = transaction.hashForWitnessV0(vin, input.signScript, value, parsed.hashType)\n        } else {\n          hash = transaction.hashForSignature(vin, input.signScript, parsed.hashType)\n        }\n      }\n\n      // skip if signature does not match pubKey\n      if (!keyPair.verify(hash, parsed.signature)) return false\n\n      // remove matched signature from unmatched\n      unmatched[i] = undefined\n      match = signature\n\n      return true\n    })\n\n    return match\n  })\n}\n\nfunction expandOutput (script, scriptType, ourPubKey) {\n  typeforce(types.Buffer, script)\n\n  var scriptChunks = bscript.decompile(script)\n  if (!scriptType) {\n    scriptType = btemplates.classifyOutput(script)\n  }\n\n  var pubKeys = []\n\n  switch (scriptType) {\n    // does our hash160(pubKey) match the output scripts?\n    case scriptTypes.P2PKH:\n      if (!ourPubKey) break\n\n      var pkh1 = scriptChunks[2]\n      var pkh2 = bcrypto.hash160(ourPubKey)\n      if (pkh1.equals(pkh2)) pubKeys = [ourPubKey]\n      break\n\n    // does our hash160(pubKey) match the output scripts?\n    case scriptTypes.P2WPKH:\n      if (!ourPubKey) break\n\n      var wpkh1 = scriptChunks[1]\n      var wpkh2 = bcrypto.hash160(ourPubKey)\n      if (wpkh1.equals(wpkh2)) pubKeys = [ourPubKey]\n      break\n\n    case scriptTypes.P2PK:\n      pubKeys = scriptChunks.slice(0, 1)\n      break\n\n    case scriptTypes.MULTISIG:\n      pubKeys = scriptChunks.slice(1, -2)\n      break\n\n    default: return { scriptType: scriptType }\n  }\n\n  return {\n    pubKeys: pubKeys,\n    scriptType: scriptType,\n    signatures: pubKeys.map(function () { return undefined })\n  }\n}\n\nfunction checkP2SHInput (input, redeemScriptHash) {\n  if (input.prevOutType) {\n    if (input.prevOutType !== scriptTypes.P2SH) throw new Error('PrevOutScript must be P2SH')\n\n    var prevOutScriptScriptHash = bscript.decompile(input.prevOutScript)[1]\n    if (!prevOutScriptScriptHash.equals(redeemScriptHash)) throw new Error('Inconsistent hash160(RedeemScript)')\n  }\n}\n\nfunction checkP2WSHInput (input, witnessScriptHash) {\n  if (input.prevOutType) {\n    if (input.prevOutType !== scriptTypes.P2WSH) throw new Error('PrevOutScript must be P2WSH')\n\n    var scriptHash = bscript.decompile(input.prevOutScript)[1]\n    if (!scriptHash.equals(witnessScriptHash)) throw new Error('Inconsistent sha25(WitnessScript)')\n  }\n}\n\nfunction prepareInput (input, kpPubKey, redeemScript, witnessValue, witnessScript) {\n  var expanded\n  var prevOutType\n  var prevOutScript\n\n  var p2sh = false\n  var p2shType\n  var redeemScriptHash\n\n  var witness = false\n  var p2wsh = false\n  var witnessType\n  var witnessScriptHash\n\n  var signType\n  var signScript\n\n  if (redeemScript && witnessScript) {\n    redeemScriptHash = bcrypto.hash160(redeemScript)\n    witnessScriptHash = bcrypto.sha256(witnessScript)\n    checkP2SHInput(input, redeemScriptHash)\n\n    if (!redeemScript.equals(btemplates.witnessScriptHash.output.encode(witnessScriptHash))) throw new Error('Witness script inconsistent with redeem script')\n\n    expanded = expandOutput(witnessScript, undefined, kpPubKey)\n    if (!expanded.pubKeys) throw new Error('WitnessScript not supported \"' + bscript.toASM(redeemScript) + '\"')\n\n    prevOutType = btemplates.types.P2SH\n    prevOutScript = btemplates.scriptHash.output.encode(redeemScriptHash)\n    p2sh = witness = p2wsh = true\n    p2shType = btemplates.types.P2WSH\n    signType = witnessType = expanded.scriptType\n    signScript = witnessScript\n  } else if (redeemScript) {\n    redeemScriptHash = bcrypto.hash160(redeemScript)\n    checkP2SHInput(input, redeemScriptHash)\n\n    expanded = expandOutput(redeemScript, undefined, kpPubKey)\n    if (!expanded.pubKeys) throw new Error('RedeemScript not supported \"' + bscript.toASM(redeemScript) + '\"')\n\n    prevOutType = btemplates.types.P2SH\n    prevOutScript = btemplates.scriptHash.output.encode(redeemScriptHash)\n    p2sh = true\n    signType = p2shType = expanded.scriptType\n    signScript = redeemScript\n    witness = signType === btemplates.types.P2WPKH\n  } else if (witnessScript) {\n    witnessScriptHash = bcrypto.sha256(witnessScript)\n    checkP2WSHInput(input, witnessScriptHash)\n\n    expanded = expandOutput(witnessScript, undefined, kpPubKey)\n    if (!expanded.pubKeys) throw new Error('WitnessScript not supported \"' + bscript.toASM(redeemScript) + '\"')\n\n    prevOutType = btemplates.types.P2WSH\n    prevOutScript = btemplates.witnessScriptHash.output.encode(witnessScriptHash)\n    witness = p2wsh = true\n    signType = witnessType = expanded.scriptType\n    signScript = witnessScript\n  } else if (input.prevOutType) {\n    // embedded scripts are not possible without a redeemScript\n    if (input.prevOutType === scriptTypes.P2SH ||\n      input.prevOutType === scriptTypes.P2WSH) {\n      throw new Error('PrevOutScript is ' + input.prevOutType + ', requires redeemScript')\n    }\n\n    prevOutType = input.prevOutType\n    prevOutScript = input.prevOutScript\n    expanded = expandOutput(input.prevOutScript, input.prevOutType, kpPubKey)\n    if (!expanded.pubKeys) return\n\n    witness = (input.prevOutType === scriptTypes.P2WPKH)\n    signType = prevOutType\n    signScript = prevOutScript\n  } else {\n    prevOutScript = btemplates.pubKeyHash.output.encode(bcrypto.hash160(kpPubKey))\n    expanded = expandOutput(prevOutScript, scriptTypes.P2PKH, kpPubKey)\n\n    prevOutType = scriptTypes.P2PKH\n    witness = false\n    signType = prevOutType\n    signScript = prevOutScript\n  }\n\n  if (signType === scriptTypes.P2WPKH) {\n    signScript = btemplates.pubKeyHash.output.encode(btemplates.witnessPubKeyHash.output.decode(signScript))\n  }\n\n  if (p2sh) {\n    input.redeemScript = redeemScript\n    input.redeemScriptType = p2shType\n  }\n\n  if (p2wsh) {\n    input.witnessScript = witnessScript\n    input.witnessScriptType = witnessType\n  }\n\n  input.pubKeys = expanded.pubKeys\n  input.signatures = expanded.signatures\n  input.signScript = signScript\n  input.signType = signType\n  input.prevOutScript = prevOutScript\n  input.prevOutType = prevOutType\n  input.witness = witness\n}\n\nfunction buildStack (type, signatures, pubKeys, allowIncomplete) {\n  if (type === scriptTypes.P2PKH) {\n    if (signatures.length === 1 && Buffer.isBuffer(signatures[0]) && pubKeys.length === 1) return btemplates.pubKeyHash.input.encodeStack(signatures[0], pubKeys[0])\n  } else if (type === scriptTypes.P2PK) {\n    if (signatures.length === 1 && Buffer.isBuffer(signatures[0])) return btemplates.pubKey.input.encodeStack(signatures[0])\n  } else if (type === scriptTypes.MULTISIG) {\n    if (signatures.length > 0) {\n      signatures = signatures.map(function (signature) {\n        return signature || ops.OP_0\n      })\n      if (!allowIncomplete) {\n        // remove blank signatures\n        signatures = signatures.filter(function (x) { return x !== ops.OP_0 })\n      }\n\n      return btemplates.multisig.input.encodeStack(signatures)\n    }\n  } else {\n    throw new Error('Not yet supported')\n  }\n\n  if (!allowIncomplete) throw new Error('Not enough signatures provided')\n  return []\n}\n\nfunction buildInput (input, allowIncomplete) {\n  var scriptType = input.prevOutType\n  var sig = []\n  var witness = []\n\n  if (supportedType(scriptType)) {\n    sig = buildStack(scriptType, input.signatures, input.pubKeys, allowIncomplete)\n  }\n\n  var p2sh = false\n  if (scriptType === btemplates.types.P2SH) {\n    // We can remove this error later when we have a guarantee prepareInput\n    // rejects unsignable scripts - it MUST be signable at this point.\n    if (!allowIncomplete && !supportedP2SHType(input.redeemScriptType)) {\n      throw new Error('Impossible to sign this type')\n    }\n\n    if (supportedType(input.redeemScriptType)) {\n      sig = buildStack(input.redeemScriptType, input.signatures, input.pubKeys, allowIncomplete)\n    }\n\n    // If it wasn't SIGNABLE, it's witness, defer to that\n    if (input.redeemScriptType) {\n      p2sh = true\n      scriptType = input.redeemScriptType\n    }\n  }\n\n  switch (scriptType) {\n    // P2WPKH is a special case of P2PKH\n    case btemplates.types.P2WPKH:\n      witness = buildStack(btemplates.types.P2PKH, input.signatures, input.pubKeys, allowIncomplete)\n      break\n\n    case btemplates.types.P2WSH:\n      // We can remove this check later\n      if (!allowIncomplete && !supportedType(input.witnessScriptType)) {\n        throw new Error('Impossible to sign this type')\n      }\n\n      if (supportedType(input.witnessScriptType)) {\n        witness = buildStack(input.witnessScriptType, input.signatures, input.pubKeys, allowIncomplete)\n        witness.push(input.witnessScript)\n        scriptType = input.witnessScriptType\n      }\n\n      break\n  }\n\n  // append redeemScript if necessary\n  if (p2sh) {\n    sig.push(input.redeemScript)\n  }\n\n  return {\n    type: scriptType,\n    script: bscript.compile(sig),\n    witness: witness\n  }\n}\n\nfunction TransactionBuilder (network, maximumFeeRate) {\n  this.prevTxMap = {}\n  this.network = network || networks.bitcoin\n\n  // WARNING: This is __NOT__ to be relied on, its just another potential safety mechanism (safety in-depth)\n  this.maximumFeeRate = maximumFeeRate || 2500\n\n  this.inputs = []\n  this.bitcoinCash = true\n  this.tx = new Transaction()\n}\n\nTransactionBuilder.prototype.setLockTime = function (locktime) {\n  typeforce(types.UInt32, locktime)\n\n  // if any signatures exist, throw\n  if (this.inputs.some(function (input) {\n    if (!input.signatures) return false\n\n    return input.signatures.some(function (s) { return s })\n  })) {\n    throw new Error('No, this would invalidate signatures')\n  }\n\n  this.tx.locktime = locktime\n}\n\nTransactionBuilder.fromTransaction = function (transaction, network, bitcoinCashTx) {\n  var txb = new TransactionBuilder(network)\n\n  // Copy transaction fields\n  txb.setLockTime(transaction.locktime)\n\n  // Copy outputs (done first to avoid signature invalidation)\n  transaction.outs.forEach(function (txOut) {\n    txb.addOutput(txOut.script, txOut.value)\n  })\n\n  // Copy inputs\n  transaction.ins.forEach(function (txIn) {\n    txb.__addInputUnsafe(txIn.hash, txIn.index, {\n      sequence: txIn.sequence,\n      script: txIn.script,\n      witness: txIn.witness,\n      value: txIn.value\n    })\n  })\n\n  // fix some things not possible through the public API\n  txb.inputs.forEach(function (input, i) {\n    fixMultisigOrder(input, transaction, i, input.value, bitcoinCashTx)\n  })\n\n  return txb\n}\n\nTransactionBuilder.prototype.addInput = function (txHash, vout, sequence, prevOutScript) {\n  if (!this.__canModifyInputs()) {\n    throw new Error('No, this would invalidate signatures')\n  }\n\n  var value\n\n  // is it a hex string?\n  if (typeof txHash === 'string') {\n    // transaction hashs's are displayed in reverse order, un-reverse it\n    txHash = Buffer.from(txHash, 'hex').reverse()\n\n  // is it a Transaction object?\n  } else if (txHash instanceof Transaction) {\n    var txOut = txHash.outs[vout]\n    prevOutScript = txOut.script\n    value = txOut.value\n\n    txHash = txHash.getHash()\n  }\n\n  return this.__addInputUnsafe(txHash, vout, {\n    sequence: sequence,\n    prevOutScript: prevOutScript,\n    value: value\n  })\n}\n\nTransactionBuilder.prototype.__addInputUnsafe = function (txHash, vout, options) {\n  if (Transaction.isCoinbaseHash(txHash)) {\n    throw new Error('coinbase inputs not supported')\n  }\n\n  var prevTxOut = txHash.toString('hex') + ':' + vout\n  if (this.prevTxMap[prevTxOut] !== undefined) throw new Error('Duplicate TxOut: ' + prevTxOut)\n\n  var input = {}\n\n  // derive what we can from the scriptSig\n  if (options.script !== undefined) {\n    input = expandInput(options.script, options.witness || [])\n  }\n\n  // if an input value was given, retain it\n  if (options.value !== undefined) {\n    input.value = options.value\n  }\n\n  // derive what we can from the previous transactions output script\n  if (!input.prevOutScript && options.prevOutScript) {\n    var prevOutType\n\n    if (!input.pubKeys && !input.signatures) {\n      var expanded = expandOutput(options.prevOutScript)\n\n      if (expanded.pubKeys) {\n        input.pubKeys = expanded.pubKeys\n        input.signatures = expanded.signatures\n      }\n\n      prevOutType = expanded.scriptType\n    }\n\n    input.prevOutScript = options.prevOutScript\n    input.prevOutType = prevOutType || btemplates.classifyOutput(options.prevOutScript)\n  }\n\n  var vin = this.tx.addInput(txHash, vout, options.sequence, options.scriptSig)\n  this.inputs[vin] = input\n  this.prevTxMap[prevTxOut] = vin\n  return vin\n}\n\nTransactionBuilder.prototype.addOutput = function (scriptPubKey, value) {\n  if (!this.__canModifyOutputs()) {\n    throw new Error('No, this would invalidate signatures')\n  }\n\n  // Attempt to get a script if it's a base58 address string\n  if (typeof scriptPubKey === 'string') {\n    scriptPubKey = baddress.toOutputScript(scriptPubKey, this.network)\n  }\n\n  return this.tx.addOutput(scriptPubKey, value)\n}\n\nTransactionBuilder.prototype.build = function () {\n  return this.__build(false)\n}\nTransactionBuilder.prototype.buildIncomplete = function () {\n  return this.__build(true)\n}\n\nTransactionBuilder.prototype.__build = function (allowIncomplete) {\n  if (!allowIncomplete) {\n    if (!this.tx.ins.length) throw new Error('Transaction has no inputs')\n    if (!this.tx.outs.length) throw new Error('Transaction has no outputs')\n  }\n\n  var tx = this.tx.clone()\n  // Create script signatures from inputs\n  this.inputs.forEach(function (input, i) {\n    var scriptType = input.witnessScriptType || input.redeemScriptType || input.prevOutType\n    if (!scriptType && !allowIncomplete) throw new Error('Transaction is not complete')\n    var result = buildInput(input, allowIncomplete)\n\n    // skip if no result\n    if (!allowIncomplete) {\n      if (!supportedType(result.type) && result.type !== btemplates.types.P2WPKH) {\n        throw new Error(result.type + ' not supported')\n      }\n    }\n\n    tx.setInputScript(i, result.script)\n    tx.setWitness(i, result.witness)\n  })\n\n  if (!allowIncomplete) {\n    // do not rely on this, its merely a last resort\n    if (this.__overMaximumFees(tx.virtualSize())) {\n      throw new Error('Transaction has absurd fees')\n    }\n  }\n\n  return tx\n}\n\nfunction canSign (input) {\n  return input.prevOutScript !== undefined &&\n    input.signScript !== undefined &&\n    input.pubKeys !== undefined &&\n    input.signatures !== undefined &&\n    input.signatures.length === input.pubKeys.length &&\n    input.pubKeys.length > 0 &&\n    (\n      input.witness === false ||\n      (input.witness === true && input.value !== undefined)\n    )\n}\n\nTransactionBuilder.prototype.sign = function (vin, keyPair, redeemScript, hashType, witnessValue, witnessScript, signatureAlgorithm) {\n  hashType = hashType | Transaction.SIGHASH_BITCOINCASHBIP143;\n\n  if (!this.inputs[vin]) throw new Error('No input at index: ' + vin)\n  hashType = hashType || Transaction.SIGHASH_ALL\n\n  var input = this.inputs[vin]\n\n  // if redeemScript was previously provided, enforce consistency\n  if (input.redeemScript !== undefined &&\n      redeemScript &&\n      !input.redeemScript.equals(redeemScript)) {\n    throw new Error('Inconsistent redeemScript')\n  }\n\n  var kpPubKey = keyPair.publicKey || keyPair.getPublicKeyBuffer()\n  if (!canSign(input)) {\n    if (witnessValue !== undefined) {\n      if (input.value !== undefined && input.value !== witnessValue) throw new Error('Input didn\\'t match witnessValue')\n      typeforce(types.Satoshi, witnessValue)\n      input.value = witnessValue\n    }\n\n    if (!canSign(input)) prepareInput(input, kpPubKey, redeemScript, witnessValue, witnessScript)\n    if (!canSign(input)) throw Error(input.prevOutType + ' not supported')\n  }\n\n  // ready to sign\n  // var signatureHash = this.tx.hashForCashSignature(vin, input.signScript, witnessValue, hashType)\n  var signatureHash = this.tx.hashForCashSignature(vin, input.signScript, witnessValue, hashType);\n  // if (this.bitcoinCash) {\n  //   signatureHash = this.tx.hashForCashSignature(vin, input.signScript, witnessValue, hashType)\n  // } else {\n  //   if (input.witness) {\n  //     signatureHash = this.tx.hashForWitnessV0(vin, input.signScript, witnessValue, hashType)\n  //   } else {\n  //     signatureHash = this.tx.hashForSignature(vin, input.signScript, hashType)\n  //   }\n  // }\n\n  // enforce in order signing of public keys\n  var signed = input.pubKeys.some(function (pubKey, i) {\n    if (!kpPubKey.equals(pubKey)) return false\n    if (input.signatures[i]) throw new Error('Signature already exists')\n    if (kpPubKey.length !== 33 &&\n      input.signType === scriptTypes.P2WPKH) throw new Error('BIP143 rejects uncompressed public keys in P2WPKH or P2WSH')\n\n    var signature = keyPair.sign(signatureHash, signatureAlgorithm)\n    if (Buffer.isBuffer(signature)) signature = ECSignature.fromRSBuffer(signature)\n\n    input.signatures[i] = signature.toScriptSignature(hashType, signatureAlgorithm)\n    return true\n  })\n\n  if (!signed) throw new Error('Key pair cannot sign for this input')\n}\n\nfunction signatureHashType (buffer) {\n  return buffer.readUInt8(buffer.length - 1)\n}\n\nTransactionBuilder.prototype.__canModifyInputs = function () {\n  return this.inputs.every(function (input) {\n    // any signatures?\n    if (input.signatures === undefined) return true\n\n    return input.signatures.every(function (signature) {\n      if (!signature) return true\n      var hashType = signatureHashType(signature)\n\n      // if SIGHASH_ANYONECANPAY is set, signatures would not\n      // be invalidated by more inputs\n      return hashType & Transaction.SIGHASH_ANYONECANPAY\n    })\n  })\n}\n\nTransactionBuilder.prototype.__canModifyOutputs = function () {\n  var nInputs = this.tx.ins.length\n  var nOutputs = this.tx.outs.length\n\n  return this.inputs.every(function (input) {\n    if (input.signatures === undefined) return true\n\n    return input.signatures.every(function (signature) {\n      if (!signature) return true\n      var hashType = signatureHashType(signature)\n\n      var hashTypeMod = hashType & 0x1f\n      if (hashTypeMod === Transaction.SIGHASH_NONE) return true\n      if (hashTypeMod === Transaction.SIGHASH_SINGLE) {\n        // if SIGHASH_SINGLE is set, and nInputs > nOutputs\n        // some signatures would be invalidated by the addition\n        // of more outputs\n        return nInputs <= nOutputs\n      }\n    })\n  })\n}\n\nTransactionBuilder.prototype.__overMaximumFees = function (bytes) {\n  // not all inputs will have .value defined\n  var incoming = this.inputs.reduce(function (a, x) { return a + (x.value >>> 0) }, 0)\n\n  // but all outputs do, and if we have any input value\n  // we can immediately determine if the outputs are too small\n  var outgoing = this.tx.outs.reduce(function (a, x) { return a + x.value }, 0)\n  var fee = incoming - outgoing\n  var feeRate = fee / bytes\n\n  return feeRate > this.maximumFeeRate\n}\n\nmodule.exports = TransactionBuilder\n",
    "var script = require('./script')\n\nvar templates = require('./templates')\nfor (var key in templates) {\n  script[key] = templates[key]\n}\n\nmodule.exports = {\n  bufferutils: require('./bufferutils'), // TODO: remove in 4.0.0\n\n  Block: require('./block'),\n  ECPair: require('./ecpair'),\n  ECSignature: require('./ecsignature'),\n  HDNode: require('./hdnode'),\n  Transaction: require('./transaction'),\n  TransactionBuilder: require('./transaction_builder'),\n\n  address: require('./address'),\n  crypto: require('./crypto'),\n  networks: require('./networks'),\n  opcodes: require('@psf/bitcoincash-ops'),\n  script: script\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.testnet = exports.bitcoin = void 0;\nexports.bitcoin = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bc',\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4,\n  },\n  pubKeyHash: 0x00,\n  scriptHash: 0x05,\n  wif: 0x80,\n};\nexports.testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.maybe =\n  exports.Boolean =\n  exports.Array =\n  exports.Buffer256bit =\n  exports.Network =\n  exports.typeforce =\n    void 0;\nexports.typeforce = require('typeforce');\n// exposed, external API\nexports.Network = exports.typeforce.compile({\n  messagePrefix: exports.typeforce.oneOf(\n    exports.typeforce.Buffer,\n    exports.typeforce.String,\n  ),\n  bip32: {\n    public: exports.typeforce.UInt32,\n    private: exports.typeforce.UInt32,\n  },\n  pubKeyHash: exports.typeforce.UInt8,\n  scriptHash: exports.typeforce.UInt8,\n  wif: exports.typeforce.UInt8,\n});\nexports.Buffer256bit = exports.typeforce.BufferN(32);\nexports.Array = exports.typeforce.Array;\nexports.Boolean = exports.typeforce.Boolean; // tslint:disable-line variable-name\nexports.maybe = exports.typeforce.maybe;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.testEcc = void 0;\nconst h = (hex) => Buffer.from(hex, 'hex');\nfunction testEcc(ecc) {\n  assert(\n    ecc.isPoint(\n      h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    !ecc.isPoint(\n      h('030000000000000000000000000000000000000000000000000000000000000005'),\n    ),\n  );\n  assert(\n    ecc.isPrivate(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  // order - 1\n  assert(\n    ecc.isPrivate(\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140'),\n    ),\n  );\n  // 0\n  assert(\n    !ecc.isPrivate(\n      h('0000000000000000000000000000000000000000000000000000000000000000'),\n    ),\n  );\n  // order\n  assert(\n    !ecc.isPrivate(\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    ),\n  );\n  // order + 1\n  assert(\n    !ecc.isPrivate(\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364142'),\n    ),\n  );\n  // 1 + 0 == 1\n  assert(\n    Buffer.from(\n      ecc.privateAdd(\n        h('0000000000000000000000000000000000000000000000000000000000000001'),\n        h('0000000000000000000000000000000000000000000000000000000000000000'),\n      ),\n    ).equals(\n      h('0000000000000000000000000000000000000000000000000000000000000001'),\n    ),\n  );\n  // -3 + 3 == 0\n  assert(\n    ecc.privateAdd(\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e'),\n      h('0000000000000000000000000000000000000000000000000000000000000003'),\n    ) === null,\n  );\n  assert(\n    Buffer.from(\n      ecc.privateAdd(\n        h('e211078564db65c3ce7704f08262b1f38f1ef412ad15b5ac2d76657a63b2c500'),\n        h('b51fbb69051255d1becbd683de5848242a89c229348dd72896a87ada94ae8665'),\n      ),\n    ).equals(\n      h('9730c2ee69edbb958d42db7460bafa18fef9d955325aec99044c81c8282b0a24'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.privateNegate(\n        h('0000000000000000000000000000000000000000000000000000000000000001'),\n      ),\n    ).equals(\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.privateNegate(\n        h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e'),\n      ),\n    ).equals(\n      h('0000000000000000000000000000000000000000000000000000000000000003'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.privateNegate(\n        h('b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af'),\n      ),\n    ).equals(\n      h('4eede1bf775995d70a494f0a7bb6bc11e0b8cccd41cce8009ab1132c8b0a3792'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.pointCompress(\n        h(\n          '0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n        ),\n        true,\n      ),\n    ).equals(\n      h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.pointCompress(\n        h(\n          '0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n        ),\n        false,\n      ),\n    ).equals(\n      h(\n        '0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n      ),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.pointCompress(\n        h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n        true,\n      ),\n    ).equals(\n      h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.pointCompress(\n        h('0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n        false,\n      ),\n    ).equals(\n      h(\n        '0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n      ),\n    ),\n  );\n  assert(\n    Buffer.from(\n      ecc.pointFromScalar(\n        h('b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af'),\n      ),\n    ).equals(\n      h('02b07ba9dca9523b7ef4bd97703d43d20399eb698e194704791a25ce77a400df99'),\n    ),\n  );\n  assert(\n    ecc.xOnlyPointAddTweak(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n      h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140'),\n    ) === null,\n  );\n  let xOnlyRes = ecc.xOnlyPointAddTweak(\n    h('1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b'),\n    h('a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac'),\n  );\n  assert(\n    Buffer.from(xOnlyRes.xOnlyPubkey).equals(\n      h('e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf'),\n    ) && xOnlyRes.parity === 1,\n  );\n  xOnlyRes = ecc.xOnlyPointAddTweak(\n    h('2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991'),\n    h('823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47'),\n  );\n  assert(\n    Buffer.from(xOnlyRes.xOnlyPubkey).equals(\n      h('9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c'),\n    ) && xOnlyRes.parity === 0,\n  );\n  assert(\n    Buffer.from(\n      ecc.sign(\n        h('5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed'),\n        h('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140'),\n      ),\n    ).equals(\n      h(\n        '54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5',\n      ),\n    ),\n  );\n  assert(\n    ecc.verify(\n      h('5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed'),\n      h('0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n      h(\n        '54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5',\n      ),\n    ),\n  );\n  if (ecc.signSchnorr) {\n    assert(\n      Buffer.from(\n        ecc.signSchnorr(\n          h('7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c'),\n          h('c90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b14e5c9'),\n          h('c87aa53824b4d7ae2eb035a2b5bbbccc080e76cdc6d1692c4b0b62d798e6d906'),\n        ),\n      ).equals(\n        h(\n          '5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7',\n        ),\n      ),\n    );\n  }\n  if (ecc.verifySchnorr) {\n    assert(\n      ecc.verifySchnorr(\n        h('7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c'),\n        h('dd308afec5777e13121fa72b9cc1b7cc0139715309b086c960e18fd969774eb8'),\n        h(\n          '5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7',\n        ),\n      ),\n    );\n  }\n}\nexports.testEcc = testEcc;\nfunction assert(bool) {\n  if (!bool) throw new Error('ecc library invalid');\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.ECPairFactory = exports.networks = void 0;\nconst networks = require('./networks');\nexports.networks = networks;\nconst types = require('./types');\nconst randomBytes = require('randombytes');\nconst wif = require('wif');\nconst testecc_1 = require('./testecc');\nconst isOptions = types.typeforce.maybe(\n  types.typeforce.compile({\n    compressed: types.maybe(types.Boolean),\n    network: types.maybe(types.Network),\n  }),\n);\nconst toXOnly = (pubKey) =>\n  pubKey.length === 32 ? pubKey : pubKey.slice(1, 33);\nfunction ECPairFactory(ecc) {\n  (0, testecc_1.testEcc)(ecc);\n  function isPoint(maybePoint) {\n    return ecc.isPoint(maybePoint);\n  }\n  function fromPrivateKey(buffer, options) {\n    types.typeforce(types.Buffer256bit, buffer);\n    if (!ecc.isPrivate(buffer))\n      throw new TypeError('Private key not in range [1, n)');\n    types.typeforce(isOptions, options);\n    return new ECPair(buffer, undefined, options);\n  }\n  function fromPublicKey(buffer, options) {\n    types.typeforce(ecc.isPoint, buffer);\n    types.typeforce(isOptions, options);\n    return new ECPair(undefined, buffer, options);\n  }\n  function fromWIF(wifString, network) {\n    const decoded = wif.decode(wifString);\n    const version = decoded.version;\n    // list of networks?\n    if (types.Array(network)) {\n      network = network\n        .filter((x) => {\n          return version === x.wif;\n        })\n        .pop();\n      if (!network) throw new Error('Unknown network version');\n      // otherwise, assume a network object (or default to bitcoin)\n    } else {\n      network = network || networks.bitcoin;\n      if (version !== network.wif) throw new Error('Invalid network version');\n    }\n    return fromPrivateKey(decoded.privateKey, {\n      compressed: decoded.compressed,\n      network: network,\n    });\n  }\n  function makeRandom(options) {\n    types.typeforce(isOptions, options);\n    if (options === undefined) options = {};\n    const rng = options.rng || randomBytes;\n    let d;\n    do {\n      d = rng(32);\n      types.typeforce(types.Buffer256bit, d);\n    } while (!ecc.isPrivate(d));\n    return fromPrivateKey(d, options);\n  }\n  class ECPair {\n    __D;\n    __Q;\n    compressed;\n    network;\n    lowR;\n    constructor(__D, __Q, options) {\n      this.__D = __D;\n      this.__Q = __Q;\n      this.lowR = false;\n      if (options === undefined) options = {};\n      this.compressed =\n        options.compressed === undefined ? true : options.compressed;\n      this.network = options.network || networks.bitcoin;\n      if (__Q !== undefined)\n        this.__Q = Buffer.from(ecc.pointCompress(__Q, this.compressed));\n    }\n    get privateKey() {\n      return this.__D;\n    }\n    get publicKey() {\n      if (!this.__Q) {\n        // It is not possible for both `__Q` and `__D` to be `undefined` at the same time.\n        // The factory methods guard for this.\n        const p = ecc.pointFromScalar(this.__D, this.compressed);\n        // It is not possible for `p` to be null.\n        // `fromPrivateKey()` checks that `__D` is a valid scalar.\n        this.__Q = Buffer.from(p);\n      }\n      return this.__Q;\n    }\n    toWIF() {\n      if (!this.__D) throw new Error('Missing private key');\n      return wif.encode(this.network.wif, this.__D, this.compressed);\n    }\n    tweak(t) {\n      if (this.privateKey) return this.tweakFromPrivateKey(t);\n      return this.tweakFromPublicKey(t);\n    }\n    sign(hash, lowR) {\n      if (!this.__D) throw new Error('Missing private key');\n      if (lowR === undefined) lowR = this.lowR;\n      if (lowR === false) {\n        return Buffer.from(ecc.sign(hash, this.__D));\n      } else {\n        let sig = ecc.sign(hash, this.__D);\n        const extraData = Buffer.alloc(32, 0);\n        let counter = 0;\n        // if first try is lowR, skip the loop\n        // for second try and on, add extra entropy counting up\n        while (sig[0] > 0x7f) {\n          counter++;\n          extraData.writeUIntLE(counter, 0, 6);\n          sig = ecc.sign(hash, this.__D, extraData);\n        }\n        return Buffer.from(sig);\n      }\n    }\n    signSchnorr(hash) {\n      if (!this.privateKey) throw new Error('Missing private key');\n      if (!ecc.signSchnorr)\n        throw new Error('signSchnorr not supported by ecc library');\n      return Buffer.from(ecc.signSchnorr(hash, this.privateKey));\n    }\n    verify(hash, signature) {\n      return ecc.verify(hash, this.publicKey, signature);\n    }\n    verifySchnorr(hash, signature) {\n      if (!ecc.verifySchnorr)\n        throw new Error('verifySchnorr not supported by ecc library');\n      return ecc.verifySchnorr(hash, this.publicKey.subarray(1, 33), signature);\n    }\n    tweakFromPublicKey(t) {\n      const xOnlyPubKey = toXOnly(this.publicKey);\n      const tweakedPublicKey = ecc.xOnlyPointAddTweak(xOnlyPubKey, t);\n      if (!tweakedPublicKey || tweakedPublicKey.xOnlyPubkey === null)\n        throw new Error('Cannot tweak public key!');\n      const parityByte = Buffer.from([\n        tweakedPublicKey.parity === 0 ? 0x02 : 0x03,\n      ]);\n      return fromPublicKey(\n        Buffer.concat([parityByte, tweakedPublicKey.xOnlyPubkey]),\n        { network: this.network, compressed: this.compressed },\n      );\n    }\n    tweakFromPrivateKey(t) {\n      const hasOddY =\n        this.publicKey[0] === 3 ||\n        (this.publicKey[0] === 4 && (this.publicKey[64] & 1) === 1);\n      const privateKey = hasOddY\n        ? ecc.privateNegate(this.privateKey)\n        : this.privateKey;\n      const tweakedPrivateKey = ecc.privateAdd(privateKey, t);\n      if (!tweakedPrivateKey) throw new Error('Invalid tweaked private key!');\n      return fromPrivateKey(Buffer.from(tweakedPrivateKey), {\n        network: this.network,\n        compressed: this.compressed,\n      });\n    }\n  }\n  return {\n    isPoint,\n    fromPrivateKey,\n    fromPublicKey,\n    fromWIF,\n    makeRandom,\n  };\n}\nexports.ECPairFactory = ECPairFactory;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.networks = exports.ECPairFactory = exports.default = void 0;\nvar ecpair_1 = require('./ecpair');\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function () {\n    return ecpair_1.ECPairFactory;\n  },\n});\nObject.defineProperty(exports, 'ECPairFactory', {\n  enumerable: true,\n  get: function () {\n    return ecpair_1.ECPairFactory;\n  },\n});\nObject.defineProperty(exports, 'networks', {\n  enumerable: true,\n  get: function () {\n    return ecpair_1.networks;\n  },\n});\n",
    "/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n\nmodule.exports = {\n  ValidationError: ValidationError,\n  validate: validate,\n};\n",
    "/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Base32 encoding and decoding.\n *\n * @module base32\n */\n\n/**\n * Charset containing the 32 symbols used in the base32 encoding.\n * @private\n */\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\n/**\n * Inverted index mapping each symbol into its index within the charset.\n * @private\n */\nvar CHARSET_INVERSE_INDEX = {\n  'q': 0, 'p': 1, 'z': 2, 'r': 3, 'y': 4, '9': 5, 'x': 6, '8': 7,\n  'g': 8, 'f': 9, '2': 10, 't': 11, 'v': 12, 'd': 13, 'w': 14, '0': 15,\n  's': 16, '3': 17, 'j': 18, 'n': 19, '5': 20, '4': 21, 'k': 22, 'h': 23,\n  'c': 24, 'e': 25, '6': 26, 'm': 27, 'u': 28, 'a': 29, '7': 30, 'l': 31,\n};\n\n/**\n * Encodes the given array of 5-bit integers as a base32-encoded string.\n *\n * @static\n * @param {Uint8Array} data Array of integers between 0 and 31 inclusive.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(data) {\n  validate(data instanceof Uint8Array, 'Invalid data: ' + data + '.');\n  var base32 = '';\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && value < 32, 'Invalid value: ' + value + '.');\n    base32 += CHARSET[value];\n  }\n  return base32;\n}\n\n/**\n * Decodes the given base32-encoded string into an array of 5-bit integers.\n *\n * @static\n * @param {string} string\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction decode(string) {\n  validate(typeof string === 'string', 'Invalid base32-encoded string: ' + string + '.');\n  var data = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; ++i) {\n    var value = string[i];\n    validate(value in CHARSET_INVERSE_INDEX, 'Invalid value: ' + value + '.');\n    data[i] = CHARSET_INVERSE_INDEX[value];\n  }\n  return data;\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n};\n",
    "var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n",
    "// Copyright (c) 2017-2018 Emilio Almansi\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar validate = require('./validation').validate;\n\n/**\n * Converts an array of integers made up of 'from' bits into an\n * array of integers made up of 'to' bits. The output array is\n * zero-padded if necessary, unless strict mode is true.\n * Throws a {@link ValidationError} if input is invalid.\n * Original by Pieter Wuille: https://github.com/sipa/bech32.\n *\n * @param {Uint8Array} data Array of integers made up of 'from' bits.\n * @param {number} from Length in bits of elements in the input array.\n * @param {number} to Length in bits of elements in the output array.\n * @param {bool} strictMode Require the conversion to be completed without padding.\n * @returns {Uint8Array}\n */\nmodule.exports = function(data, from, to, strictMode) {\n  var length = strictMode\n    ? Math.floor(data.length * from / to)\n    : Math.ceil(data.length * from / to);\n  var mask = (1 << to) - 1;\n  var result = new Uint8Array(length);\n  var index = 0;\n  var accumulator = 0;\n  var bits = 0;\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    validate(0 <= value && (value >> from) === 0, 'Invalid value: ' + value + '.');\n    accumulator = (accumulator << from) | value;\n    bits += from;\n    while (bits >= to) {\n      bits -= to;\n      result[index] = (accumulator >> bits) & mask;\n      ++index;\n    }\n  }\n  if (!strictMode) {\n    if (bits > 0) {\n      result[index] = (accumulator << (to - bits)) & mask;\n      ++index;\n    }\n  } else {\n    validate(\n      bits < from && ((accumulator << (to - bits)) & mask) === 0,\n      'Input cannot be converted to ' + to + ' bits without padding, but strict mode was used.'\n    );\n  }\n  return result;\n};\n",
    "/**\n * @license\n * https://github.com/ealmansi/cashaddrjs\n * Copyright (c) 2017-2020 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\nvar base32 = require('./base32');\nvar bigInt = require('big-integer');\nvar convertBits = require('./convertBits');\nvar validation = require('./validation');\nvar validate = validation.validate;\n\n/**\n * Encoding and decoding of the new Cash Address format for Bitcoin Cash. <br />\n * Compliant with the original cashaddr specification:\n * {@link https://github.com/bitcoincashorg/bitcoincash.org/blob/master/spec/cashaddr.md}\n * @module cashaddr\n */\n\n/**\n * Encodes a hash from a given type into a Bitcoin Cash address with the given prefix.\n * \n * @static\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {string} type Type of address to generate. Either 'P2PKH' or 'P2SH'.\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction encode(prefix, type, hash) {\n  validate(typeof prefix === 'string' && isValidPrefix(prefix), 'Invalid prefix: ' + prefix + '.');\n  validate(typeof type === 'string', 'Invalid type: ' + type + '.');\n  validate(hash instanceof Uint8Array, 'Invalid hash: ' + hash + '.');\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var versionByte = getTypeBits(type) + getHashSizeBits(hash);\n  var payloadData = toUint5Array(concat(new Uint8Array([versionByte]), hash));\n  var checksumData = concat(concat(prefixData, payloadData), new Uint8Array(8));\n  var payload = concat(payloadData, checksumToUint5Array(polymod(checksumData)));\n  return prefix + ':' + base32.encode(payload);\n}\n\n/**\n * Decodes the given address into its constituting prefix, type and hash. See [#encode()]{@link encode}.\n * \n * @static\n * @param {string} address Address to decode. E.g.: 'bitcoincash:qpm2qsznhks23z7629mms6s4cwef74vcwvy22gdx6a'.\n * @returns {object}\n * @throws {ValidationError}\n */\nfunction decode(address) {\n  validate(typeof address === 'string' && hasSingleCase(address), 'Invalid address: ' + address + '.');\n  var pieces = address.toLowerCase().split(':');\n  validate(pieces.length === 2, 'Missing prefix: ' + address + '.');\n  var prefix = pieces[0];\n  var payload = base32.decode(pieces[1]);\n  validate(validChecksum(prefix, payload), 'Invalid checksum: ' + address + '.');\n  var payloadData = fromUint5Array(payload.subarray(0, -8));\n  var versionByte = payloadData[0];\n  var hash = payloadData.subarray(1);\n  validate(getHashSize(versionByte) === hash.length * 8, 'Invalid hash size: ' + address + '.');\n  var type = getType(versionByte);\n  return {\n    prefix: prefix,\n    type: type,\n    hash: hash,\n  };\n}\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nvar ValidationError = validation.ValidationError;\n\n/**\n * Valid address prefixes.\n *\n * @private\n */\nvar VALID_PREFIXES = ['bitcoincash', 'bchtest', 'bchreg'];\n\n/**\n * Checks whether a string is a valid prefix; ie., it has a single letter case\n * and is one of 'bitcoincash', 'bchtest', or 'bchreg'.\n *\n * @private\n * @param {string} prefix \n * @returns {boolean}\n */\nfunction isValidPrefix(prefix) {\n  return hasSingleCase(prefix) && VALID_PREFIXES.indexOf(prefix.toLowerCase()) !== -1;\n}\n\n/**\n * Derives an array from the given prefix to be used in the computation\n * of the address' checksum.\n *\n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'. \n * @returns {Uint8Array}\n */\nfunction prefixToUint5Array(prefix) {\n  var result = new Uint8Array(prefix.length);\n  for (var i = 0; i < prefix.length; ++i) {\n    result[i] = prefix[i].charCodeAt(0) & 31;\n  }\n  return result;\n}\n\n/**\n * Returns an array representation of the given checksum to be encoded\n * within the address' payload.\n *\n * @private\n * @param {BigInteger} checksum Computed checksum.\n * @returns {Uint8Array}\n */\nfunction checksumToUint5Array(checksum) {\n  var result = new Uint8Array(8);\n  for (var i = 0; i < 8; ++i) {\n    result[7 - i] = checksum.and(31).toJSNumber();\n    checksum = checksum.shiftRight(5);\n  }\n  return result;\n}\n\n/**\n * Returns the bit representation of the given type within the version\n * byte.\n *\n * @private\n * @param {string} type Address type. Either 'P2PKH' or 'P2SH'.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getTypeBits(type) {\n  switch (type) {\n  case 'P2PKH':\n    return 0;\n  case 'P2SH':\n    return 8;\n  default:\n    throw new ValidationError('Invalid type: ' + type + '.');\n  }\n}\n\n/**\n * Retrieves the address type from its bit representation within the\n * version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {string}\n * @throws {ValidationError}\n */\nfunction getType(versionByte) {\n  switch (versionByte & 120) {\n  case 0:\n    return 'P2PKH';\n  case 8:\n    return 'P2SH';\n  default:\n    throw new ValidationError('Invalid address type in version byte: ' + versionByte + '.');\n  }\n}\n\n/**\n * Returns the bit representation of the length in bits of the given\n * hash within the version byte.\n *\n * @private\n * @param {Uint8Array} hash Hash to encode represented as an array of 8-bit integers.\n * @returns {number}\n * @throws {ValidationError}\n */\nfunction getHashSizeBits(hash) {\n  switch (hash.length * 8) {\n  case 160:\n    return 0;\n  case 192:\n    return 1;\n  case 224:\n    return 2;\n  case 256:\n    return 3;\n  case 320:\n    return 4;\n  case 384:\n    return 5;\n  case 448:\n    return 6;\n  case 512:\n    return 7;\n  default:\n    throw new ValidationError('Invalid hash size: ' + hash.length + '.');\n  }\n}\n\n/**\n * Retrieves the the length in bits of the encoded hash from its bit\n * representation within the version byte.\n *\n * @private\n * @param {number} versionByte\n * @returns {number}\n */\nfunction getHashSize(versionByte) {\n  switch (versionByte & 7) {\n  case 0:\n    return 160;\n  case 1:\n    return 192;\n  case 2:\n    return 224;\n  case 3:\n    return 256;\n  case 4:\n    return 320;\n  case 5:\n    return 384;\n  case 6:\n    return 448;\n  case 7:\n    return 512;\n  }\n}\n\n/**\n * Converts an array of 8-bit integers into an array of 5-bit integers,\n * right-padding with zeroes if necessary.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nfunction toUint5Array(data) {\n  return convertBits(data, 8, 5);\n}\n\n/**\n * Converts an array of 5-bit integers back into an array of 8-bit integers,\n * removing extra zeroes left from padding if necessary.\n * Throws a {@link ValidationError} if input is not a zero-padded array of 8-bit integers.\n *\n * @private\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction fromUint5Array(data) {\n  return convertBits(data, 5, 8, true);\n}\n\n/**\n * Returns the concatenation a and b.\n *\n * @private\n * @param {Uint8Array} a \n * @param {Uint8Array} b \n * @returns {Uint8Array}\n * @throws {ValidationError}\n */\nfunction concat(a, b) {\n  var ab = new Uint8Array(a.length + b.length);\n  ab.set(a);\n  ab.set(b, a.length);\n  return ab;\n}\n\n/**\n * Computes a checksum from the given input data as specified for the CashAddr\n * format: https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md.\n *\n * @private\n * @param {Uint8Array} data Array of 5-bit integers over which the checksum is to be computed.\n * @returns {BigInteger}\n */\nfunction polymod(data) {\n  var GENERATOR = [0x98f2bc8e61, 0x79b76d99e2, 0xf33e5fb3c4, 0xae2eabe2a8, 0x1e4f43e470];\n  var checksum = bigInt(1);\n  for (var i = 0; i < data.length; ++i) {\n    var value = data[i];\n    var topBits = checksum.shiftRight(35);\n    checksum = checksum.and(0x07ffffffff).shiftLeft(5).xor(value);\n    for (var j = 0; j < GENERATOR.length; ++j) {\n      if (topBits.shiftRight(j).and(1).equals(1)) {\n        checksum = checksum.xor(GENERATOR[j]);\n      }\n    }\n  }\n  return checksum.xor(1);\n}\n\n/**\n * Verify that the payload has not been corrupted by checking that the\n * checksum is valid.\n * \n * @private\n * @param {string} prefix Network prefix. E.g.: 'bitcoincash'.\n * @param {Uint8Array} payload Array of 5-bit integers containing the address' payload.\n * @returns {boolean}\n */\nfunction validChecksum(prefix, payload) {\n  var prefixData = concat(prefixToUint5Array(prefix), new Uint8Array(1));\n  var checksumData = concat(prefixData, payload);\n  return polymod(checksumData).equals(0);\n}\n\n/**\n * Returns true if, and only if, the given string contains either uppercase\n * or lowercase letters, but not both.\n *\n * @private\n * @param {string} string Input string.\n * @returns {boolean}\n */\nfunction hasSingleCase(string) {\n  return string === string.toLowerCase() || string === string.toUpperCase();\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  ValidationError: ValidationError,\n};\n",
    "import{networks as YB,Psbt as IB,Transaction as FB}from\"bitcoinjs-lib\";import{Chain as W,RequestClient as i}from\"@swapkit/helpers\";var A=(_)=>`https://api.blockchair.com/${l_(_)}`,k_=(_)=>{switch(_){case W.Bitcoin:return 5;case W.Dogecoin:return 1e4;case W.Litecoin:return 1;default:return 2}},l_=(_)=>{switch(_){case W.BitcoinCash:return\"bitcoin-cash\";case W.Litecoin:return\"litecoin\";case W.Dash:return\"dash\";case W.Dogecoin:return\"dogecoin\";case W.Polkadot:return\"polkadot\";default:return\"bitcoin\"}},m_=async(_)=>{try{let{feePerKb:g}=await i.get(`https://app.bitgo.com/api/v2/${_.toLowerCase()}/tx/fee`),B=g/1000;return Math.max(B,k_(_))}catch(g){return k_(_)}},V=async(_,g)=>{try{let B=await i.get(_);if(!B||B.context.code!==200)throw new Error(`failed to query ${_}`);return B.data}catch(B){if(!g)throw B;let b=await i.get(`${_}${g?`&key=${g}`:\"\"}`);if(!b||b.context.code!==200)throw new Error(`failed to query ${_}`);return b.data}},O_={utxo:[],address:{balance:0,transaction_count:0}},D_=async({address:_,chain:g,apiKey:B})=>{if(!_)throw new Error(\"address is required\");try{return(await V(`${A(g)}/dashboards/address/${_}?transaction_details=true`,B))[_]}catch(b){return O_}},x_=async({address:_,chain:g,apiKey:B})=>{return(await D_({address:_,chain:g,apiKey:B}))?.address.balance},A_=async({chain:_,address:g,apiKey:B})=>{if(!g)throw new Error(\"address is required\");try{return(await V(`${A(_)}/addresses/balances?addresses=${g}`,B))[g]||0}catch(b){return 0}},G_=async({chain:_,apiKey:g,txHash:B})=>{if(!B)throw new Error(\"txHash is required\");try{return(await V(`${A(_)}/raw/transaction/${B}`,g))?.[B]?.raw_transaction}catch(b){return console.error(b),\"\"}},V_=async({chain:_,address:g,apiKey:B,offset:b=0,limit:n=100})=>{return(await V(`${A(_)}/outputs?q=is_spent(false),recipient(${g})&limit=${n}&offset=${b}`,B)).filter(({is_spent:D})=>!D).map(({script_hex:D,block_id:Q,transaction_hash:v,index:$,value:Z,spending_signature_hex:G})=>({hash:v,index:$,value:Z,txHex:G,script_hex:D,is_confirmed:Q!==-1}))},v_=async({chain:_,address:g,apiKey:B,offset:b=0,limit:n=100})=>{if(!g)throw new Error(\"address is required\");try{let X=await V_({chain:_,address:g,apiKey:B,offset:b,limit:n});if(X.length<=n)return X;let k=await v_({chain:_,address:g,apiKey:B,offset:b+n,limit:n});return[...X,...k]}catch(X){return console.error(X),[]}},N_=async({address:_,chain:g,apiKey:B,fetchTxHex:b=!0})=>{let n=await v_({chain:g,address:_,apiKey:B}),X=[];for(let{hash:k,index:D,script_hex:Q,value:v}of n){let $;if(b)$=await G_({txHash:k,chain:g,apiKey:B});X.push({address:_,hash:k,index:D,txHex:$,value:v,witnessUtxo:{value:v,script:Buffer.from(Q,\"hex\")}})}return X},N=({apiKey:_,chain:g})=>({getConfirmedBalance:(B)=>A_({chain:g,address:B,apiKey:_}),getRawTx:(B)=>G_({txHash:B,chain:g,apiKey:_}),getSuggestedTxFee:()=>m_(g),getBalance:(B)=>x_({address:B,chain:g,apiKey:_}),getAddressData:(B)=>D_({address:B,chain:g,apiKey:_}),scanUTXOs:(B)=>N_({...B,chain:g,apiKey:_})});import{Chain as j,ChainToRPC as Mg}from\"@swapkit/helpers\";import{RequestClient as o_}from\"@swapkit/helpers\";import{Chain as I,FeeOption as t}from\"@swapkit/helpers\";import{networks as C_}from\"bitcoinjs-lib\";import F from\"coininfo\";var P_=typeof process!==\"undefined\"&&process.pid?process.pid.toString(36):\"\",U=(_)=>{switch(_){case I.Bitcoin:return C_.bitcoin;case I.BitcoinCash:return F.bitcoincash.main.toBitcoinJS();case I.Dash:return F.dash.main.toBitcoinJS();case I.Litecoin:return F.litecoin.main.toBitcoinJS();case I.Dogecoin:{let g={private:70615956,public:70617039},B=F.dogecoin.test;return B.versions.bip32=g,F.dogecoin.main.toBitcoinJS()}default:throw new Error(\"Invalid chain\")}},$_=(_)=>({[t.Average]:_,[t.Fast]:_*1.5,[t.Fastest]:_*2}),d=0,f_=()=>{let _=Date.now(),g=d||_;return d=g,_>d?_:g+1},J_=()=>P_+f_().toString(36);var C=async({txHash:_,rpcUrl:g})=>{let B=JSON.stringify({jsonrpc:\"2.0\",method:\"sendrawtransaction\",params:[_],id:J_()}),b=await o_.post(g,{headers:{\"Content-Type\":\"application/json\"},body:B});if(b.error)throw new Error(`failed to broadcast a transaction: ${b.error?.message}`);if(b.result.includes('\"code\":-26'))throw new Error(\"Invalid transaction: the transaction amount was too low\");return b.result};import*as Xg from\"@bitcoinerlab/secp256k1\";import{HDNode as kg,Transaction as Dg,TransactionBuilder as Gg,address as vg}from\"@psf/bitcoincashjs-lib\";import{mnemonicToSeedSync as $g}from\"@scure/bip39\";import{Chain as Y_,DerivationPath as Jg,FeeOption as rg,getRPCUrl as Qg}from\"@swapkit/helpers\";import{Psbt as Zg}from\"bitcoinjs-lib\";import{ECPairFactory as qg}from\"ecpair\";import Q_ from\"bs58check\";import Z_ from\"cashaddrjs\";var q_;((B)=>{B.Mainnet=\"mainnet\";B.Testnet=\"testnet\"})(q_||={});var r={[\"legacy\"]:{[\"mainnet\"]:{[\"p2pkh\"]:0,[\"p2sh\"]:5},[\"testnet\"]:{[\"p2pkh\"]:111,[\"p2sh\"]:196}},[\"bitpay\"]:{[\"mainnet\"]:{[\"p2pkh\"]:28,[\"p2sh\"]:40},[\"testnet\"]:{[\"p2pkh\"]:111,[\"p2sh\"]:196}}};function L_(_){try{return f(_),!0}catch(g){return!1}}function U_(_){return f(_)?.network}function l(_){let g=f(_);if(g?.format===\"legacy\")return _;return E_(g)}function P(_){let g=f(_);return R_(g)}function f(_){try{return K_(_)}catch(g){}try{return S_(_)}catch(g){}throw Error(\"Received an invalid Bitcoin Cash address as input.\")}function K_(_){try{let g=Q_.decode(_);if(g.length!==21)throw Error(\"Received an invalid Bitcoin Cash address as input.\");let B=g[0],b=Array.prototype.slice.call(g,1);switch(B){case r.legacy.mainnet.p2pkh:return{hash:b,format:\"legacy\",network:\"mainnet\",type:\"p2pkh\"};case r.legacy.mainnet.p2sh:return{hash:b,format:\"legacy\",network:\"mainnet\",type:\"p2sh\"};case r.legacy.testnet.p2pkh:return{hash:b,format:\"legacy\",network:\"testnet\",type:\"p2pkh\"};case r.legacy.testnet.p2sh:return{hash:b,format:\"legacy\",network:\"testnet\",type:\"p2sh\"};case r.bitpay.mainnet.p2pkh:return{hash:b,format:\"bitpay\",network:\"mainnet\",type:\"p2pkh\"};case r.bitpay.mainnet.p2sh:return{hash:b,format:\"bitpay\",network:\"mainnet\",type:\"p2sh\"};default:throw Error(\"Received an invalid Bitcoin Cash address as input.\")}}catch(g){throw Error(\"Received an invalid Bitcoin Cash address as input.\")}}function S_(_){if(_.indexOf(\":\")!==-1)try{return r_(_)}catch(g){}else{let g=[\"bitcoincash\",\"bchtest\",\"bchreg\"];for(let B of g)try{return r_(`${B}:${_}`)}catch(b){}}throw Error(\"Received an invalid Bitcoin Cash address as input.\")}function r_(_){try{let{hash:g,prefix:B,type:b}=Z_.decode(_);return{format:\"cashaddr\",hash:Array.prototype.slice.call(g,0),network:B===\"bitcoincash\"?\"mainnet\":\"testnet\",type:b===\"P2PKH\"?\"p2pkh\":\"p2sh\"}}catch(g){throw Error(\"Received an invalid Bitcoin Cash address as input.\")}}function E_(_){let g=r.legacy[_.network][_.type],B=Buffer.alloc(1+_.hash.length);return B[0]=g,B.set(_.hash,1),Q_.encode(B)}function R_(_){let g=_.network===\"mainnet\"?\"bitcoincash\":\"bchtest\",B=_.type===\"p2pkh\"?\"P2PKH\":\"P2SH\",b=new Uint8Array(_.hash);return Z_.encode(g,B,b)}import{Chain as w}from\"@swapkit/helpers\";var s=(_)=>{switch(_){case w.Bitcoin:case w.BitcoinCash:return 550;case w.Dash:case w.Litecoin:return 5500;case w.Dogecoin:return 1e5;default:throw new Error(\"Invalid Chain\")}},z=({inputs:_,outputs:g,feeRate:B=1,chain:b=w.Bitcoin})=>{let n=Math.ceil(B),X=_[0]&&\"address\"in _[0]&&_[0].address?K(_[0].address):\"P2PKH\",k=_.filter((G)=>T(G)*n<=G.value),D=a+g.reduce((G,J)=>G+o(J,X),0),Q=g.reduce((G,J)=>G+J.value,0),v=D*n,$=0,Z=[];for(let G of k){let J=T(G),q=n*J;v+=q,$+=G.value,Z.push(G);let L=v+Q;if($<L)continue;let H=$-L,b_=n*o({address:\"\",value:0},X);if(H>b_){let n_=b_+v,X_=$-(Q+n_);if(X_>Math.max(T({})*n,s(b)))return{inputs:Z,outputs:g.concat({value:X_,address:\"\"}),fee:n_}}return{inputs:Z,outputs:g,fee:v}}return{fee:n*m({inputs:_,outputs:g,feeRate:n})}};import{opcodes as c_,script as u_}from\"bitcoinjs-lib\";var Eg=1000,a=10,h_=10,p_=41,i_=107,y=(_)=>{let g=Buffer.from(_,\"utf8\");return u_.compile([c_.OP_RETURN,g])},e;((B)=>{B.P2PKH=\"P2PKH\";B.P2WPKH=\"P2WPKH\"})(e||={});var __={[\"P2PKH\"]:148,[\"P2WPKH\"]:68},S={[\"P2PKH\"]:34,[\"P2WPKH\"]:31},K=(_)=>{if(_.startsWith(\"bc1\")||_.startsWith(\"ltc1\"))return\"P2WPKH\";if(_.startsWith(\"1\")||_.startsWith(\"3\")||_.startsWith(\"L\")||_.startsWith(\"M\")||_.startsWith(\"X\")||_.startsWith(\"D\")||_.startsWith(\"bitcoincash:q\")||_.startsWith(\"q\"))return\"P2PKH\";throw new Error(\"Invalid address\")},m=({inputs:_,outputs:g,feeRate:B})=>{let b=_[0]&&\"address\"in _[0]&&_[0].address?K(_[0].address):\"P2PKH\",n=_.filter((k)=>k.value>=__[\"type\"in k?k.type:\"P2PKH\"]*Math.ceil(B)).reduce((k,D)=>k+T(D),0),X=g?.reduce((k,D)=>k+o(D),0)||S[b];return a+n+X},T=(_)=>{if(\"type\"in _)return __[_.type];if(\"address\"in _&&_.address)return __[K(_.address)];return p_+i_},o=(_,g)=>{if(_?.script)return h_+_.script.length+(_.script.length>=74?2:1);if(g)return S[g];return S.P2PKH};import*as g_ from\"@bitcoinerlab/secp256k1\";import{HDKey as t_}from\"@scure/bip32\";import{mnemonicToSeedSync as d_}from\"@scure/bip39\";import{AssetValue as E,BaseDecimal as s_,Chain as R,FeeOption as B_,SwapKitNumber as T_}from\"@swapkit/helpers\";import{Psbt as a_,address as e_,initEccLib as z_,payments as j_}from\"bitcoinjs-lib\";import{ECPairFactory as _g}from\"ecpair\";var c=[R.Dash,R.Dogecoin],W_=({phrase:_,wif:g,derivationPath:B,chain:b})=>{if(!(g||_))throw new Error(\"Either phrase or wif must be provided\");let n=_g(g_),X=U(b);if(g)return n.fromWIF(g,X);let k=d_(_),D=t_.fromMasterSeed(k,X).derive(B);if(!D.privateKey)throw new Error(\"Could not get private key from phrase\");return n.fromPrivateKey(Buffer.from(D.privateKey),{network:X})},y_=({address:_,chain:g})=>{try{return z_(g_),e_.toOutputScript(_,U(g)),!0}catch(B){return!1}},gg=({keys:_,chain:g})=>{if(!_)throw new Error(\"Keys must be provided\");let B=c.includes(g)?j_.p2pkh:j_.p2wpkh,{address:b}=B({pubkey:_.publicKey,network:U(g)});if(!b)throw new Error(\"Address not defined\");return b},Bg=async({signTransaction:_,from:g,memo:B,recipient:b,chain:n,apiClient:X,feeOptionKey:k,broadcastTx:D,feeRate:Q,assetValue:v})=>{if(!g)throw new Error(\"From address must be provided\");if(!b)throw new Error(\"Recipient address must be provided\");let $=Q||(await u(X))[k||B_.Fast],{psbt:Z}=await w_({recipient:b,feeRate:$,sender:g,fetchTxHex:c.includes(n),chain:n,apiClient:X,assetValue:v,memo:B}),G=await _(Z);return G.finalizeAllInputs(),D(G.extractTransaction().toHex())},bg=async({address:_,chain:g,apiClient:B})=>{let b=await B.getBalance(_)||0,n=T_.fromBigInt(BigInt(b),s_[g]).getValue(\"string\");return[await E.from({asset:`${g}.${g}`,value:n})]},u=async(_)=>$_(await _.getSuggestedTxFee()),H_=async({assetValue:_,recipient:g,memo:B,sender:b,fetchTxHex:n=!1,apiClient:X})=>{return{inputs:await X.scanUTXOs({address:b,fetchTxHex:n}),outputs:[{address:g,value:Number(_.bigIntValue)},...B?[{address:\"\",script:y(B),value:0}]:[]]}},w_=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,fetchTxHex:X=!1,apiClient:k,chain:D})=>{let Q=B?y(B):null,v=await H_({assetValue:_,recipient:g,memo:B,sender:n,fetchTxHex:X,apiClient:k}),{inputs:$,outputs:Z}=z({...v,feeRate:b,chain:D});if(!($&&Z))throw new Error(\"Insufficient Balance for transaction\");let G=new a_({network:U(D)});if(D===R.Dogecoin)G.setMaximumFeeRate(650000000);for(let J of $)G.addInput({hash:J.hash,index:J.index,...!!J.witnessUtxo&&!c.includes(D)&&{witnessUtxo:J.witnessUtxo},...c.includes(D)&&{nonWitnessUtxo:J.txHex?Buffer.from(J.txHex,\"hex\"):void 0}});for(let J of Z){let q=\"address\"in J&&J.address?J.address:n,L=J.script?Q?{script:Q,value:0}:void 0:{address:q,value:J.value};if(L)z_(g_),G.addOutput(L)}return{psbt:G,utxos:v.inputs,inputs:$}},M_=async({assetValue:_,apiClient:g,chain:B,feeOptionKey:b=B_.Fast,feeRate:n,fetchTxHex:X=!1,memo:k,recipient:D,from:Q})=>{let v=await H_({assetValue:_,recipient:D,memo:k,sender:Q,fetchTxHex:X,apiClient:g}),$=n?Math.floor(n):(await u(g))[b];return z({...v,feeRate:$,chain:B})},ng=async({from:_,memo:g,feeRate:B,feeOptionKey:b=B_.Fast,recipients:n=1,chain:X,apiClient:k})=>{let D=await k.getAddressData(_),Q=B?Math.ceil(B):(await u(k))[b],v=D?.utxo.map((q)=>({...q,type:\"P2PKH\",hash:\"\"})).filter((q)=>q.value>Math.max(s(X),T(q)*Q));if(!v?.length)return E.from({chain:X});let $=E.from({chain:X,value:v.reduce((q,L)=>q+L.value,0)}),Z=typeof n===\"number\"?Array.from({length:n},()=>({address:_,value:0})):n;if(g){let q=y(g);Z.push({address:_,script:q,value:0})}let J=m({inputs:v,outputs:Z,feeRate:Q})*Q;return $.sub(J)},h=(_)=>({accumulative:z,apiClient:_.apiClient,broadcastTx:_.broadcastTx,calculateTxSize:m,buildTx:(g)=>w_({...g,..._}),getAddressFromKeys:(g)=>gg({keys:g,..._}),validateAddress:(g)=>y_({address:g,..._}),createKeysForPath:(g)=>W_({...g,..._}),getPrivateKeyFromMnemonic:async(g)=>W_({..._,...g}).toWIF(),getBalance:async(g,B)=>bg({address:g,..._}),getFeeRates:()=>u(_.apiClient),transfer:(g)=>Bg({...g,..._}),getInputsOutputsFee:(g)=>M_({...g,..._}),estimateTransactionFee:async(g)=>{return E.from({chain:_.chain,value:T_.fromBigInt(BigInt((await M_({...g,..._})).fee),8).getValue(\"string\")})},estimateMaxSendableAmount:async(g)=>ng({...g,..._})}),gB=({chain:_,address:g})=>_===R.BitcoinCash?Y(g):y_({address:g,chain:_});var M=Y_.BitcoinCash,x=(_)=>O(P(_)),I_=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,apiClient:X})=>{if(!Y(g))throw new Error(\"Invalid address\");let k=await X.scanUTXOs({address:x(n),fetchTxHex:!0}),D=B?y(B):null,Q=[];Q.push({address:g,value:_.getBaseValue(\"number\")});let{inputs:v,outputs:$}=z({inputs:k,outputs:Q,feeRate:b,chain:M});if(!(v&&$))throw new Error(\"Balance insufficient for transaction\");let Z=new Gg(U(M));await Promise.all(v.map(async(G)=>{let J=await X.getRawTx(G.hash);Z.addInput(Dg.fromBuffer(Buffer.from(J,\"hex\")),G.index)}));for(let G of $){let J=\"address\"in G&&G.address?G.address:l(n),q=vg.toOutputScript(l(J),U(M));Z.addOutput(q,G.value)}if(D)Z.addOutput(D,0);return{builder:Z,utxos:v}},Lg=async({signTransaction:_,from:g,recipient:B,assetValue:b,apiClient:n,broadcastTx:X,getFeeRates:k,...D})=>{if(!g)throw new Error(\"From address must be provided\");if(!B)throw new Error(\"Recipient address must be provided\");if(!_)throw new Error(\"signTransaction must be provided\");let Q=D.feeRate||(await k())[rg.Fast],{builder:v,utxos:$}=await I_({...D,assetValue:b,feeRate:Q,recipient:B,sender:g,apiClient:n}),G=_({builder:v,utxos:$}).toHex();return X(G)},Ug=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,apiClient:X})=>{let k=P(g);if(!Y(k))throw new Error(\"Invalid address\");let D=await X.scanUTXOs({address:x(n),fetchTxHex:!0}),Q=Number(b.toFixed(0)),v=B?y(B):null,$=[];if($.push({address:l(g),value:_.getBaseValue(\"number\")}),v)$.push({script:v,value:0});let{inputs:Z,outputs:G}=z({inputs:D,outputs:$,feeRate:Q,chain:M});if(!(Z&&G))throw new Error(\"Balance insufficient for transaction\");let J=new Zg({network:U(M)});for(let{hash:q,index:L,witnessUtxo:H}of Z)J.addInput({hash:q,index:L,witnessUtxo:H});for(let q of G){let L=\"address\"in q&&q.address?q.address:l(n),H=q.script?v?{script:v,value:0}:void 0:{address:L,value:q.value};if(H)J.addOutput(H)}return{psbt:J,utxos:D,inputs:Z}},O=(_)=>_.replace(/(bchtest:|bitcoincash:)/,\"\"),Y=(_)=>{let g=O(_);return L_(g)&&U_(g)===\"mainnet\"},jg=({phrase:_,derivationPath:g=`${Jg.BCH}/0`,wif:B})=>{let b=U(M);if(B)return qg(Xg).fromWIF(B,b);if(!_)throw new Error(\"No phrase provided\");return kg.fromSeedBuffer(Buffer.from($g(_)),b).derivePath(g).keyPair},Wg=(_)=>{let g=_.getAddress(0);return x(g)},F_=({apiKey:_,rpcUrl:g=Qg(Y_.BitcoinCash),apiClient:B})=>{let b=B||N({apiKey:_,chain:M}),{getBalance:n,...X}=h({chain:M,apiClient:b,broadcastTx:(k)=>C({txHash:k,rpcUrl:g})});return{...X,stripPrefix:O,stripToCashAddress:x,validateAddress:Y,createKeysForPath:jg,getAddressFromKeys:Wg,buildBCHTx:(k)=>I_({...k,apiClient:b}),getBalance:(k,D)=>n(O(P(k))),buildTx:(k)=>Ug({...k,apiClient:b}),transfer:(k)=>Lg({...k,getFeeRates:X.getFeeRates,broadcastTx:X.broadcastTx,apiClient:b})}};var p=(_)=>({apiKey:g,rpcUrl:B=Mg[_],apiClient:b})=>{return h({chain:_,broadcastTx:(n)=>C({txHash:n,rpcUrl:B}),apiClient:b||N({apiKey:g,chain:_})})},Tg=F_,zg=p(j.Bitcoin),yg=p(j.Dash),Hg=p(j.Dogecoin),wg=p(j.Litecoin),WB=(_)=>{switch(_){case j.BitcoinCash:return Tg;case j.Bitcoin:return zg;case j.Dogecoin:return Hg;case j.Litecoin:return wg;case j.Dash:return yg;default:throw new Error(`Chain ${_} is not supported`)}};export{Y as validateAddress,gB as utxoValidateAddress,J_ as uniqid,l as toLegacyAddress,P as toCashAddress,x as stripToCashAddress,O as stripPrefix,$_ as standardFeeRates,c as nonSegwitChains,YB as networks,L_ as isValidAddress,WB as getToolboxByChain,K as getScriptTypeForAddress,o as getOutputSize,U as getNetwork,T as getInputSize,s as getDustThreshold,ng as estimateMaxSendableAmount,U_ as detectAddressNetwork,y as compileMemo,m as calculateTxSize,N as blockchairApi,z as accumulative,e as UTXOScriptType,FB as Transaction,a as TX_OVERHEAD,IB as Psbt,S as OutputSizes,h_ as OP_RETURN_OVERHEAD,q_ as Network,Eg as MIN_TX_FEE,wg as LTCToolbox,__ as InputSizes,Hg as DOGEToolbox,yg as DASHToolbox,h as BaseUTXOToolbox,zg as BTCToolbox,Tg as BCHToolbox};\n\n//# debugId=E92BDF9904B3483864756E2164756E21\n",
    "'use strict';\n\nvar necc = require('@noble/secp256k1');\nvar hmac = require('@noble/hashes/hmac');\nvar sha256 = require('@noble/hashes/sha256');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar necc__namespace = /*#__PURE__*/_interopNamespaceDefault(necc);\n\n/*\n * Copyright (c) 2023 Jose-Luis Landabaso\n * Distributed under the MIT software license.\n *\n * This file includes code from the following sources:\n *  * Paul Miller's @noble/secp256k1 (specifically, the privateAdd,\n *    privateNegate, pointAddScalar, and pointMultiply functions).\n *  * Some pieces from tiny-secp256k1\n *    (https://github.com/bitcoinjs/tiny-secp256k1)\n *  * It also uses code from BitGo's BitGoJS library\n *    (https://github.com/BitGo/BitGoJS)\n *\n * This package's tests are based on modified versions of tests from\n * tiny-secp256k1 (https://github.com/bitcoinjs/tiny-secp256k1/tests).\n */\n\nconst THROW_BAD_PRIVATE = 'Expected Private';\nconst THROW_BAD_POINT = 'Expected Point';\nconst THROW_BAD_TWEAK = 'Expected Tweak';\nconst THROW_BAD_HASH = 'Expected Hash';\nconst THROW_BAD_SIGNATURE = 'Expected Signature';\nconst THROW_BAD_EXTRA_DATA = 'Expected Extra Data (32 bytes)';\nconst THROW_BAD_SCALAR = 'Expected Scalar';\nconst THROW_BAD_RECOVERY_ID = 'Bad Recovery Id';\n\nnecc__namespace.utils.hmacSha256Sync = (key, ...msgs) =>\n  hmac.hmac(sha256.sha256, key, necc__namespace.utils.concatBytes(...msgs));\nnecc__namespace.utils.sha256Sync = (...msgs) => sha256.sha256(necc__namespace.utils.concatBytes(...msgs));\n\nconst normalizePrivateKey = necc__namespace.utils._normalizePrivateKey;\n\nconst HASH_SIZE = 32;\nconst TWEAK_SIZE = 32;\nconst BN32_N = new Uint8Array([\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  254, 186, 174, 220, 230, 175, 72, 160, 59, 191, 210, 94, 140, 208, 54, 65, 65\n]);\nconst EXTRA_DATA_SIZE = 32;\n\nconst BN32_ZERO = new Uint8Array(32);\nconst BN32_P_MINUS_N = new Uint8Array([\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 69, 81, 35, 25, 80, 183, 95,\n  196, 64, 45, 161, 114, 47, 201, 186, 238,\n]);\n\nfunction isUint8Array(value) {\n  return value instanceof Uint8Array;\n}\n\nfunction cmpBN32(data1, data2) {\n  for (let i = 0; i < 32; ++i) {\n    if (data1[i] !== data2[i]) {\n      return data1[i] < data2[i] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n\nfunction isZero(x) {\n  return cmpBN32(x, BN32_ZERO) === 0;\n}\n\n\nfunction isTweak(tweak) {\n  // Check that the tweak is a Uint8Array of the correct length\n  if (\n    !(tweak instanceof Uint8Array) ||\n    tweak.length !== TWEAK_SIZE ||\n    cmpBN32(tweak, BN32_N) >= 0\n  ) {\n    return false;\n  }\n  return true;\n}\n\nfunction isSignature(signature) {\n  return (\n    signature instanceof Uint8Array &&\n    signature.length === 64 &&\n    cmpBN32(signature.subarray(0, 32), BN32_N) < 0 &&\n    cmpBN32(signature.subarray(32, 64), BN32_N) < 0\n  );\n}\n\nfunction isSigrLessThanPMinusN(signature) {\n  return (\n    isUint8Array(signature) &&\n    signature.length === 64 &&\n    cmpBN32(signature.subarray(0, 32), BN32_P_MINUS_N) < 0\n  );\n}\n\nfunction isSignatureNonzeroRS(signature) {\n  return !(isZero(signature.subarray(0, 32)) || isZero(signature.subarray(32, 64)))\n}\n\nfunction isHash(h) {\n  return h instanceof Uint8Array && h.length === HASH_SIZE;\n}\n\nfunction isExtraData(e) {\n  return (\n    e === undefined || (e instanceof Uint8Array && e.length === EXTRA_DATA_SIZE)\n  );\n}\n\nfunction hexToNumber(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n  }\n  return BigInt(`0x${hex}`);\n}\n\nfunction bytesToNumber(bytes) {\n  return hexToNumber(necc__namespace.utils.bytesToHex(bytes));\n}\n\nfunction normalizeScalar(scalar) {\n  let num;\n  if (typeof scalar === 'bigint') {\n    num = scalar;\n  } else if (\n    typeof scalar === 'number' &&\n    Number.isSafeInteger(scalar) &&\n    scalar >= 0\n  ) {\n    num = BigInt(scalar);\n  } else if (typeof scalar === 'string') {\n    if (scalar.length !== 64)\n      throw new Error('Expected 32 bytes of private scalar');\n    num = hexToNumber(scalar);\n  } else if (scalar instanceof Uint8Array) {\n    if (scalar.length !== 32)\n      throw new Error('Expected 32 bytes of private scalar');\n    num = bytesToNumber(scalar);\n  } else {\n    throw new TypeError('Expected valid private scalar');\n  }\n  if (num < 0) throw new Error('Expected private scalar >= 0');\n  return num;\n}\n\nconst _privateAdd = (privateKey, tweak) => {\n  const p = normalizePrivateKey(privateKey);\n  const t = normalizeScalar(tweak);\n  const add = necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(p + t, necc__namespace.CURVE.n));\n  if (necc__namespace.utils.isValidPrivateKey(add)) return add;\n  else return null;\n};\n\nconst _privateSub = (privateKey, tweak) => {\n  const p = normalizePrivateKey(privateKey);\n  const t = normalizeScalar(tweak);\n  const sub = necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(p - t, necc__namespace.CURVE.n));\n  if (necc__namespace.utils.isValidPrivateKey(sub)) return sub;\n  else return null;\n};\n\nconst _privateNegate = privateKey => {\n  const p = normalizePrivateKey(privateKey);\n  const not = necc__namespace.utils._bigintTo32Bytes(necc__namespace.CURVE.n - p);\n  if (necc__namespace.utils.isValidPrivateKey(not)) return not;\n  else return null;\n};\n\nconst _pointAddScalar = (p, tweak, isCompressed) => {\n  const P = necc__namespace.Point.fromHex(p);\n  const t = normalizeScalar(tweak);\n  const Q = necc__namespace.Point.BASE.multiplyAndAddUnsafe(P, t, BigInt(1));\n  if (!Q) throw new Error('Tweaked point at infinity');\n  return Q.toRawBytes(isCompressed);\n};\n\nconst _pointMultiply = (p, tweak, isCompressed) => {\n  const P = necc__namespace.Point.fromHex(p);\n  const h = typeof tweak === 'string' ? tweak : necc__namespace.utils.bytesToHex(tweak);\n  const t = BigInt(`0x${h}`);\n  return P.multiply(t).toRawBytes(isCompressed);\n};\n\nfunction assumeCompression(compressed, p) {\n  if (compressed === undefined) {\n    return p !== undefined ? isPointCompressed(p) : true;\n  }\n  return compressed ? true : false;\n}\n\nfunction throwToNull(fn) {\n  try {\n    return fn();\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction _isPoint(p, xOnly) {\n  if ((p.length === 32) !== xOnly) return false;\n  try {\n    return !!necc__namespace.Point.fromHex(p);\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isPoint(p) {\n  return _isPoint(p, false);\n}\n\nfunction isPointCompressed(p) {\n  const PUBLIC_KEY_COMPRESSED_SIZE = 33;\n  return _isPoint(p, false) && p.length === PUBLIC_KEY_COMPRESSED_SIZE;\n}\n\nfunction isPrivate(d) {\n  return necc__namespace.utils.isValidPrivateKey(d);\n}\n\nfunction isXOnlyPoint(p) {\n  return _isPoint(p, true);\n}\n\nfunction xOnlyPointAddTweak(p, tweak) {\n  if (!isXOnlyPoint(p)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  if (!isTweak(tweak)) {\n    throw new Error(THROW_BAD_TWEAK);\n  }\n  return throwToNull(() => {\n    const P = _pointAddScalar(p, tweak, true);\n    const parity = P[0] % 2 === 1 ? 1 : 0;\n    return { parity, xOnlyPubkey: P.slice(1) };\n  });\n}\n\nfunction xOnlyPointFromPoint(p) {\n  if (!isPoint(p)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  return p.slice(1, 33);\n}\n\nfunction pointFromScalar(sk, compressed) {\n  if (!isPrivate(sk)) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  return throwToNull(() =>\n    necc__namespace.getPublicKey(sk, assumeCompression(compressed))\n  );\n}\n\nfunction xOnlyPointFromScalar(d) {\n  if (!isPrivate(d)) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  return xOnlyPointFromPoint(pointFromScalar(d));\n}\n\nfunction pointCompress(p, compressed) {\n  if (!isPoint(p)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  return necc__namespace.Point.fromHex(p).toRawBytes(assumeCompression(compressed, p));\n}\n\nfunction pointMultiply(a, tweak, compressed) {\n  if (!isPoint(a)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  if (!isTweak(tweak)) {\n    throw new Error(THROW_BAD_TWEAK);\n  }\n  return throwToNull(() =>\n    _pointMultiply(a, tweak, assumeCompression(compressed, a))\n  );\n}\n\nfunction pointAdd(a, b, compressed) {\n  if (!isPoint(a) || !isPoint(b)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  return throwToNull(() => {\n    const A = necc__namespace.Point.fromHex(a);\n    const B = necc__namespace.Point.fromHex(b);\n    if (A.equals(B.negate())) {\n      //https://github.com/paulmillr/noble-secp256k1/issues/91\n      return null;\n    } else {\n      return A.add(B).toRawBytes(assumeCompression(compressed, a));\n    }\n  });\n}\nfunction pointAddScalar(p, tweak, compressed) {\n  if (!isPoint(p)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  if (!isTweak(tweak)) {\n    throw new Error(THROW_BAD_TWEAK);\n  }\n  return throwToNull(() =>\n    _pointAddScalar(p, tweak, assumeCompression(compressed, p))\n  );\n}\n\nfunction privateAdd(d, tweak) {\n  if (isPrivate(d) === false) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  if (isTweak(tweak) === false) {\n    throw new Error(THROW_BAD_TWEAK);\n  }\n  return throwToNull(() => _privateAdd(d, tweak));\n}\n\nfunction privateSub(d, tweak) {\n  if (isPrivate(d) === false) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  if (isTweak(tweak) === false) {\n    throw new Error(THROW_BAD_TWEAK);\n  }\n  return throwToNull(() => _privateSub(d, tweak));\n}\n\nfunction privateNegate(d) {\n  if (isPrivate(d) === false) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  return _privateNegate(d);\n}\n\nfunction sign(h, d, e) {\n  if (!isPrivate(d)) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  if (!isHash(h)) {\n    throw new Error(THROW_BAD_SCALAR);\n  }\n  if (!isExtraData(e)) {\n    throw new Error(THROW_BAD_EXTRA_DATA);\n  }\n  return necc__namespace.signSync(h, d, { der: false, extraEntropy: e });\n}\n\nfunction signRecoverable(h, d, e) {\n  if (!isPrivate(d)) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  if (!isHash(h)) {\n    throw new Error(THROW_BAD_SCALAR);\n  }\n  if (!isExtraData(e)) {\n    throw new Error(THROW_BAD_EXTRA_DATA);\n  }\n  const [signature, recoveryId] = necc__namespace.signSync(h, d, { der: false, extraEntropy: e, recovered: true });\n  return { signature, recoveryId }\n}\n\nfunction signSchnorr(h, d, e = Buffer.alloc(32, 0x00)) {\n  if (!isPrivate(d)) {\n    throw new Error(THROW_BAD_PRIVATE);\n  }\n  if (!isHash(h)) {\n    throw new Error(THROW_BAD_SCALAR);\n  }\n  if (!isExtraData(e)) {\n    throw new Error(THROW_BAD_EXTRA_DATA);\n  }\n  return necc__namespace.schnorr.signSync(h, d, e);\n}\n\nfunction recover(h, signature, recoveryId, compressed){\n  if (!isHash(h)){\n    throw new Error(THROW_BAD_HASH);\n  }\n\n  if(!isSignature(signature) || !isSignatureNonzeroRS(signature)){\n    throw new Error(THROW_BAD_SIGNATURE)\n  }\n\n  if (recoveryId & 2) {\n    if (!isSigrLessThanPMinusN(signature)) throw new Error(THROW_BAD_RECOVERY_ID)\n  }\n  \n  if (!isXOnlyPoint(signature.subarray(0, 32))){\n    throw new Error(THROW_BAD_SIGNATURE)\n  }\n\n  return necc__namespace.recoverPublicKey(h, signature, recoveryId, assumeCompression(compressed));\n}\n\nfunction verify(h, Q, signature, strict) {\n  if (!isPoint(Q)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  if (!isSignature(signature)) {\n    throw new Error(THROW_BAD_SIGNATURE);\n  }\n  if (!isHash(h)) {\n    throw new Error(THROW_BAD_SCALAR);\n  }\n  return necc__namespace.verify(signature, h, Q, { strict });\n}\n\nfunction verifySchnorr(h, Q, signature) {\n  if (!isXOnlyPoint(Q)) {\n    throw new Error(THROW_BAD_POINT);\n  }\n  if (!isSignature(signature)) {\n    throw new Error(THROW_BAD_SIGNATURE);\n  }\n  if (!isHash(h)) {\n    throw new Error(THROW_BAD_SCALAR);\n  }\n  return necc__namespace.schnorr.verifySync(signature, h, Q);\n}\n\nexports.isPoint = isPoint;\nexports.isPointCompressed = isPointCompressed;\nexports.isPrivate = isPrivate;\nexports.isXOnlyPoint = isXOnlyPoint;\nexports.pointAdd = pointAdd;\nexports.pointAddScalar = pointAddScalar;\nexports.pointCompress = pointCompress;\nexports.pointFromScalar = pointFromScalar;\nexports.pointMultiply = pointMultiply;\nexports.privateAdd = privateAdd;\nexports.privateNegate = privateNegate;\nexports.privateSub = privateSub;\nexports.recover = recover;\nexports.sign = sign;\nexports.signRecoverable = signRecoverable;\nexports.signSchnorr = signSchnorr;\nexports.verify = verify;\nexports.verifySchnorr = verifySchnorr;\nexports.xOnlyPointAddTweak = xOnlyPointAddTweak;\nexports.xOnlyPointFromPoint = xOnlyPointFromPoint;\nexports.xOnlyPointFromScalar = xOnlyPointFromScalar;\n",
    "// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\nexport default base\n",
    "import basex from 'base-x';\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default basex(ALPHABET);\n",
    "'use strict';\nimport base58 from 'bs58';\nexport default function (checksumFn) {\n    // Encode a buffer as a base58-check encoded string\n    function encode(payload) {\n        var payloadU8 = Uint8Array.from(payload);\n        var checksum = checksumFn(payloadU8);\n        var length = payloadU8.length + 4;\n        var both = new Uint8Array(length);\n        both.set(payloadU8, 0);\n        both.set(checksum.subarray(0, 4), payloadU8.length);\n        return base58.encode(both);\n    }\n    function decodeRaw(buffer) {\n        var payload = buffer.slice(0, -4);\n        var checksum = buffer.slice(-4);\n        var newChecksum = checksumFn(payload);\n        // eslint-disable-next-line\n        if (checksum[0] ^ newChecksum[0] |\n            checksum[1] ^ newChecksum[1] |\n            checksum[2] ^ newChecksum[2] |\n            checksum[3] ^ newChecksum[3])\n            return;\n        return payload;\n    }\n    // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n    function decodeUnsafe(str) {\n        var buffer = base58.decodeUnsafe(str);\n        if (buffer == null)\n            return;\n        return decodeRaw(buffer);\n    }\n    function decode(str) {\n        var buffer = base58.decode(str);\n        var payload = decodeRaw(buffer);\n        if (payload == null)\n            throw new Error('Invalid checksum');\n        return payload;\n    }\n    return {\n        encode: encode,\n        decode: decode,\n        decodeUnsafe: decodeUnsafe\n    };\n}\n",
    "'use strict';\nimport { sha256 } from '@noble/hashes/sha256';\nimport bs58checkBase from './base.js';\n// SHA256(SHA256(buffer))\nfunction sha256x2(buffer) {\n    return sha256(sha256(buffer));\n}\nexport default bs58checkBase(sha256x2);\n",
    "function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map",
    "export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map",
    "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map",
    "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map",
    "import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map",
    "import { HashMD } from './_md.js';\nimport { rotl, wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = /* @__PURE__ */ [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n    0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n    0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            R_BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        R_BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map",
    "import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map",
    "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map",
    "import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map",
    "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map",
    "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            const rounded = Math.floor(digitBase / to);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = /* @__NO_SIDE_EFFECTS__ */ (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = /*@__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\n/**\n * Implemented with numbers, because BigInt is 5x slower\n * @__NO_SIDE_EFFECTS__\n */\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of numbers');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\nexport const base16 = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32nopad = /* @__PURE__ */ chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexport const base32hex = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32hexnopad = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexport const base32crockford = /* @__PURE__ */ chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64nopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexport const base64url = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = /* @__PURE__ */ chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = /* @__PURE__ */ genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = /* @__PURE__ */ genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = /* @__PURE__ */ genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// xmr ver is done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n// Block encoding significantly reduces quadratic complexity of base58.\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n// legacy export, bad name\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = /* @__PURE__ */ chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (words instanceof Uint8Array)\n            words = Array.from(words);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        if (prefix.length === 0)\n            throw new TypeError(`Invalid prefix length ${prefix.length}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\nexport const bech32 = /* @__PURE__ */ genBech32('bech32');\nexport const bech32m = /* @__PURE__ */ genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = /* @__PURE__ */ chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map",
    "/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { mod } from '@noble/curves/abstract/modular';\nimport { createBase58check } from '@scure/base';\nconst Point = secp.ProjectivePoint;\nconst base58check = createBase58check(sha256);\nfunction bytesToNumber(bytes) {\n    return BigInt(`0x${bytesToHex(bytes)}`);\n}\nfunction numberToBytes(num) {\n    return hexToBytes(num.toString(16).padStart(64, '0'));\n}\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET = 0x80000000;\nconst hash160 = (data) => ripemd160(sha256(data));\nconst fromU32 = (data) => createView(data).getUint32(0, false);\nconst toU32 = (n) => {\n    if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n        throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n    }\n    const buf = new Uint8Array(4);\n    createView(buf).setUint32(0, n, false);\n    return buf;\n};\nexport class HDKey {\n    get fingerprint() {\n        if (!this.pubHash) {\n            throw new Error('No publicKey set!');\n        }\n        return fromU32(this.pubHash);\n    }\n    get identifier() {\n        return this.pubHash;\n    }\n    get pubKeyHash() {\n        return this.pubHash;\n    }\n    get privateKey() {\n        return this.privKeyBytes || null;\n    }\n    get publicKey() {\n        return this.pubKey || null;\n    }\n    get privateExtendedKey() {\n        const priv = this.privateKey;\n        if (!priv) {\n            throw new Error('No private key');\n        }\n        return base58check.encode(this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv)));\n    }\n    get publicExtendedKey() {\n        if (!this.pubKey) {\n            throw new Error('No public key');\n        }\n        return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n    }\n    static fromMasterSeed(seed, versions = BITCOIN_VERSIONS) {\n        assertBytes(seed);\n        if (8 * seed.length < 128 || 8 * seed.length > 512) {\n            throw new Error(`HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`);\n        }\n        const I = hmac(sha512, MASTER_SECRET, seed);\n        return new HDKey({\n            versions,\n            chainCode: I.slice(32),\n            privateKey: I.slice(0, 32),\n        });\n    }\n    static fromExtendedKey(base58key, versions = BITCOIN_VERSIONS) {\n        // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n        const keyBuffer = base58check.decode(base58key);\n        const keyView = createView(keyBuffer);\n        const version = keyView.getUint32(0, false);\n        const opt = {\n            versions,\n            depth: keyBuffer[4],\n            parentFingerprint: keyView.getUint32(5, false),\n            index: keyView.getUint32(9, false),\n            chainCode: keyBuffer.slice(13, 45),\n        };\n        const key = keyBuffer.slice(45);\n        const isPriv = key[0] === 0;\n        if (version !== versions[isPriv ? 'private' : 'public']) {\n            throw new Error('Version mismatch');\n        }\n        if (isPriv) {\n            return new HDKey({ ...opt, privateKey: key.slice(1) });\n        }\n        else {\n            return new HDKey({ ...opt, publicKey: key });\n        }\n    }\n    static fromJSON(json) {\n        return HDKey.fromExtendedKey(json.xpriv);\n    }\n    constructor(opt) {\n        this.depth = 0;\n        this.index = 0;\n        this.chainCode = null;\n        this.parentFingerprint = 0;\n        if (!opt || typeof opt !== 'object') {\n            throw new Error('HDKey.constructor must not be called directly');\n        }\n        this.versions = opt.versions || BITCOIN_VERSIONS;\n        this.depth = opt.depth || 0;\n        this.chainCode = opt.chainCode || null;\n        this.index = opt.index || 0;\n        this.parentFingerprint = opt.parentFingerprint || 0;\n        if (!this.depth) {\n            if (this.parentFingerprint || this.index) {\n                throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n            }\n        }\n        if (opt.publicKey && opt.privateKey) {\n            throw new Error('HDKey: publicKey and privateKey at same time.');\n        }\n        if (opt.privateKey) {\n            if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n                throw new Error('Invalid private key');\n            }\n            this.privKey =\n                typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n            this.privKeyBytes = numberToBytes(this.privKey);\n            this.pubKey = secp.getPublicKey(opt.privateKey, true);\n        }\n        else if (opt.publicKey) {\n            this.pubKey = Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n        }\n        else {\n            throw new Error('HDKey: no public or private key provided');\n        }\n        this.pubHash = hash160(this.pubKey);\n    }\n    derive(path) {\n        if (!/^[mM]'?/.test(path)) {\n            throw new Error('Path must start with \"m\" or \"M\"');\n        }\n        if (/^[mM]'?$/.test(path)) {\n            return this;\n        }\n        const parts = path.replace(/^[mM]'?\\//, '').split('/');\n        // tslint:disable-next-line\n        let child = this;\n        for (const c of parts) {\n            const m = /^(\\d+)('?)$/.exec(c);\n            const m1 = m && m[1];\n            if (!m || m.length !== 3 || typeof m1 !== 'string') {\n                throw new Error(`Invalid child index: ${c}`);\n            }\n            let idx = +m1;\n            if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n                throw new Error('Invalid index');\n            }\n            // hardened key\n            if (m[2] === \"'\") {\n                idx += HARDENED_OFFSET;\n            }\n            child = child.deriveChild(idx);\n        }\n        return child;\n    }\n    deriveChild(index) {\n        if (!this.pubKey || !this.chainCode) {\n            throw new Error('No publicKey or chainCode set');\n        }\n        let data = toU32(index);\n        if (index >= HARDENED_OFFSET) {\n            // Hardened\n            const priv = this.privateKey;\n            if (!priv) {\n                throw new Error('Could not derive hardened child key');\n            }\n            // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n            data = concatBytes(new Uint8Array([0]), priv, data);\n        }\n        else {\n            // Normal child: serP(point(kpar)) || ser32(index)\n            data = concatBytes(this.pubKey, data);\n        }\n        const I = hmac(sha512, this.chainCode, data);\n        const childTweak = bytesToNumber(I.slice(0, 32));\n        const chainCode = I.slice(32);\n        if (!secp.utils.isValidPrivateKey(childTweak)) {\n            throw new Error('Tweak bigger than curve order');\n        }\n        const opt = {\n            versions: this.versions,\n            chainCode,\n            depth: this.depth + 1,\n            parentFingerprint: this.fingerprint,\n            index,\n        };\n        try {\n            // Private parent key -> private child key\n            if (this.privateKey) {\n                const added = mod(this.privKey + childTweak, secp.CURVE.n);\n                if (!secp.utils.isValidPrivateKey(added)) {\n                    throw new Error('The tweak was out of range or the resulted private key is invalid');\n                }\n                opt.privateKey = added;\n            }\n            else {\n                const added = Point.fromHex(this.pubKey).add(Point.fromPrivateKey(childTweak));\n                // Cryptographically impossible: hmac-sha512 preimage would need to be found\n                if (added.equals(Point.ZERO)) {\n                    throw new Error('The tweak was equal to negative P, which made the result key invalid');\n                }\n                opt.publicKey = added.toRawBytes(true);\n            }\n            return new HDKey(opt);\n        }\n        catch (err) {\n            return this.deriveChild(index + 1);\n        }\n    }\n    sign(hash) {\n        if (!this.privateKey) {\n            throw new Error('No privateKey set!');\n        }\n        assertBytes(hash, 32);\n        return secp.sign(hash, this.privKey).toCompactRawBytes();\n    }\n    verify(hash, signature) {\n        assertBytes(hash, 32);\n        assertBytes(signature, 64);\n        if (!this.publicKey) {\n            throw new Error('No publicKey set!');\n        }\n        let sig;\n        try {\n            sig = secp.Signature.fromCompact(signature);\n        }\n        catch (error) {\n            return false;\n        }\n        return secp.verify(sig, hash, this.publicKey);\n    }\n    wipePrivateData() {\n        this.privKey = undefined;\n        if (this.privKeyBytes) {\n            this.privKeyBytes.fill(0);\n            this.privKeyBytes = undefined;\n        }\n        return this;\n    }\n    toJSON() {\n        return {\n            xpriv: this.privateExtendedKey,\n            xpub: this.publicExtendedKey,\n        };\n    }\n    serialize(version, key) {\n        if (!this.chainCode) {\n            throw new Error('No chainCode set');\n        }\n        assertBytes(key, 33);\n        // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n        return concatBytes(toU32(version), new Uint8Array([this.depth]), toU32(this.parentFingerprint), toU32(this.index), this.chainCode, key);\n    }\n}\n//# sourceMappingURL=index.js.map"
  ],
  "mappings": "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,EAAI,WACF,GAAE,kEAAkE,EACpE,GAAE,kEAAkE,CACtE,IAAM,IACR,EACA,GACE,OAAO,KACL,EAAI,WACF,GAAE,kEAAkE,EACpE,GAAE,kEAAkE,CACtE,CACF,EAAE,OACA,GAAE,kEAAkE,CACtE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GAAE,kEAAkE,CACtE,CACF,EAAE,OACA,GAAE,kEAAkE,CACtE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GAAE,kEAAkE,CACtE,CACF,EAAE,OACA,GAAE,kEAAkE,CACtE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GAAE,kEAAkE,CACtE,CACF,EAAE,OACA,GAAE,kEAAkE,CACtE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GACE,oIACF,EACA,EACF,CACF,EAAE,OACA,GAAE,oEAAoE,CACxE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GACE,oIACF,EACA,EACF,CACF,EAAE,OACA,GACE,oIACF,CACF,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GAAE,oEAAoE,EACtE,EACF,CACF,EAAE,OACA,GAAE,oEAAoE,CACxE,CACF,EACA,GACE,OAAO,KACL,EAAI,cACF,GAAE,oEAAoE,EACtE,EACF,CACF,EAAE,OACA,GACE,oIACF,CACF,CACF,EACA,GACE,OAAO,KACL,EAAI,gBACF,GAAE,kEAAkE,CACtE,CACF,EAAE,OACA,GAAE,oEAAoE,CACxE,CACF,EACA,GACE,EAAI,mBACF,GAAE,kEAAkE,EACpE,GAAE,kEAAkE,CACtE,IAAM,IACR,EACA,IAAI,EAAW,EAAI,mBACjB,GAAE,kEAAkE,EACpE,GAAE,kEAAkE,CACtE,EAoCA,GAnCA,GACE,OAAO,KAAK,EAAS,WAAW,EAAE,OAChC,GAAE,kEAAkE,CACtE,GAAK,EAAS,SAAW,CAC3B,EACA,EAAW,EAAI,mBACb,GAAE,kEAAkE,EACpE,GAAE,kEAAkE,CACtE,EACA,GACE,OAAO,KAAK,EAAS,WAAW,EAAE,OAChC,GAAE,kEAAkE,CACtE,GAAK,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",
  "debugId": "88BC5AFB94DB031C64756E2164756E21",
  "names": []
}