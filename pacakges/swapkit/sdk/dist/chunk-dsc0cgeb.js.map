{
  "version": 3,
  "sources": ["../../../../node_modules/bip32/src/crypto.js", "../../../../node_modules/tiny-secp256k1/node_modules/bn.js/lib/bn.js", "../../../../node_modules/tiny-secp256k1/rfc6979.js", "../../../../node_modules/tiny-secp256k1/js.js", "../../../../node_modules/bip32/src/bip32.js", "../../../../node_modules/bip32/src/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/networks.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/script_number.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/types.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/script_signature.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bn.js/lib/bn.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/tiny-secp256k1/rfc6979.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/tiny-secp256k1/js.js", "../../../../node_modules/pushdata-bitcoin/index.js", "../../../../node_modules/bitcoin-ops/map.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/script.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/lazy.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/embed.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2ms.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2pk.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/crypto.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2pkh.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2sh.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bech32/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/p2wsh.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/payments/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/address.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/ecpair.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/bufferutils.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/transaction.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/block.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/psbt.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/multisig/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/multisig/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/multisig/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/nulldata.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkey/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkey/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkey/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkeyhash/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkeyhash/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/pubkeyhash/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnessscripthash/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/scripthash/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/scripthash/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/scripthash/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnesscommitment/output.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnesscommitment/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnesspubkeyhash/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnessscripthash/input.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/templates/witnessscripthash/index.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/classify.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/transaction_builder.js", "../../../../node_modules/@ledgerhq/hw-app-btc/node_modules/bitcoinjs-lib/src/index.js", "../../../../node_modules/invariant/browser.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/Btc.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/BtcNew.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/bip32.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/buffertools.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/accounttype.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/constants.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/hashPublicKey.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/policy.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/merkle.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/psbtExtractor.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/psbtv2.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/psbtFinalizer.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/varint.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/serializeTransaction.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/BtcOld.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/getWalletPublicKey.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/getTrustedInput.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/startUntrustedHashTransactionInput.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/getTrustedInputBIP143.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/compressPublicKey.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/signTransaction.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/finalizeInput.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/getAppAndVersion.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/shouldUseTrustedInputForSegwit.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/createTransaction.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/signMessage.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/merkleMap.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/merkelizedPsbt.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/clientCommands.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/newops/appClient.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/debug.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/splitTransaction.js", "../../../../node_modules/@ledgerhq/hw-app-btc/lib-es/signP2SHTransaction.js"],
  "sourcesContent": [
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require('create-hash');\nconst createHmac = require('create-hmac');\nfunction hash160(buffer) {\n    const sha256Hash = createHash('sha256')\n        .update(buffer)\n        .digest();\n    try {\n        return createHash('rmd160')\n            .update(sha256Hash)\n            .digest();\n    }\n    catch (err) {\n        return createHash('ripemd160')\n            .update(sha256Hash)\n            .digest();\n    }\n}\nexports.hash160 = hash160;\nfunction hmacSHA512(key, data) {\n    return createHmac('sha512', key)\n        .update(data)\n        .digest();\n}\nexports.hmacSHA512 = hmacSHA512;\n",
    "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",
    "const createHmac = require('create-hmac')\n\nconst ONE1 = Buffer.alloc(1, 1)\nconst ZERO1 = Buffer.alloc(1, 0)\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nfunction deterministicGenerateK (hash, x, checkSig, isPrivate, extraEntropy) {\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  let k = Buffer.alloc(32, 0)\n  let v = Buffer.alloc(32, 1)\n\n  // Step D\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ZERO1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step E\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step F\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ONE1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step G\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n  v = createHmac('sha256', k).update(v).digest()\n\n  let T = v\n\n  // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n  while (!isPrivate(T) || !checkSig(T)) {\n    k = createHmac('sha256', k)\n      .update(v)\n      .update(ZERO1)\n      .digest()\n\n    v = createHmac('sha256', k).update(v).digest()\n\n    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n    v = createHmac('sha256', k).update(v).digest()\n    T = v\n  }\n\n  return T\n}\n\nmodule.exports = deterministicGenerateK\n",
    "const BN = require('bn.js')\nconst EC = require('elliptic').ec\nconst secp256k1 = new EC('secp256k1')\nconst deterministicGenerateK = require('./rfc6979')\n\nconst ZERO32 = Buffer.alloc(32, 0)\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex')\nconst EC_P = Buffer.from('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f', 'hex')\n\nconst n = secp256k1.curve.n\nconst nDiv2 = n.shrn(1)\nconst G = secp256k1.curve.g\n\nconst THROW_BAD_PRIVATE = 'Expected Private'\nconst THROW_BAD_POINT = 'Expected Point'\nconst THROW_BAD_TWEAK = 'Expected Tweak'\nconst THROW_BAD_HASH = 'Expected Hash'\nconst THROW_BAD_SIGNATURE = 'Expected Signature'\nconst THROW_BAD_EXTRA_DATA = 'Expected Extra Data (32 bytes)'\n\nfunction isScalar (x) {\n  return (x instanceof Uint8Array) && x.length === 32\n}\n\nfunction isOrderScalar (x) {\n  if (!isScalar(x)) return false\n  return EC_GROUP_ORDER.compare(x) > 0 // < G\n}\n\nfunction isPoint (p) {\n  if (!(p instanceof Uint8Array)) return false\n  if (p.length < 33) return false\n\n  const t = p[0]\n  const x = p.subarray(1, 33)\n  if (ZERO32.compare(x) === 0) return false\n  if (EC_P.compare(x) <= 0) return false\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    try { decodeFrom(p) } catch (e) { return false } // TODO: temporary\n    return true\n  }\n\n  const y = p.subarray(33)\n  if (ZERO32.compare(y) === 0) return false\n  if (EC_P.compare(y) <= 0) return false\n  if (t === 0x04 && p.length === 65) return true\n  return false\n}\n\nfunction __isPointCompressed (p) {\n  return p[0] !== 0x04\n}\n\nfunction isPointCompressed (p) {\n  if (!isPoint(p)) return false\n  return __isPointCompressed(p)\n}\n\nfunction isPrivate (x) {\n  if (!isScalar(x)) return false\n  return ZERO32.compare(x) < 0 && // > 0\n    EC_GROUP_ORDER.compare(x) > 0 // < G\n}\n\nfunction isSignature (value) {\n  const r = value.subarray(0, 32)\n  const s = value.subarray(32, 64)\n  return (value instanceof Uint8Array) && value.length === 64 &&\n    EC_GROUP_ORDER.compare(r) > 0 &&\n    EC_GROUP_ORDER.compare(s) > 0\n}\n\nfunction assumeCompression (value, pubkey) {\n  if (value === undefined && pubkey !== undefined) return __isPointCompressed(pubkey)\n  if (value === undefined) return true\n  return value\n}\n\nfunction fromBuffer (d) { return new BN(d) }\nfunction toBuffer (d) { return d.toArrayLike(Buffer, 'be', 32) }\nfunction decodeFrom (P) { return secp256k1.curve.decodePoint(P) }\nfunction getEncoded (P, compressed) { return Buffer.from(P._encode(compressed)) }\n\nfunction pointAdd (pA, pB, __compressed) {\n  if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT)\n  if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT)\n\n  const a = decodeFrom(pA)\n  const b = decodeFrom(pB)\n  const pp = a.add(b)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed, pA)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointAddScalar (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  if (ZERO32.compare(tweak) === 0) return getEncoded(pp, compressed)\n\n  const tt = fromBuffer(tweak)\n  const qq = G.mul(tt)\n  const uu = pp.add(qq)\n  if (uu.isInfinity()) return null\n\n  return getEncoded(uu, compressed)\n}\n\nfunction pointCompress (p, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n\n  const pp = decodeFrom(p)\n  if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT)\n\n  const compressed = assumeCompression(__compressed, p)\n\n  return getEncoded(pp, compressed)\n}\n\nfunction pointFromScalar (d, __compressed) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n\n  const dd = fromBuffer(d)\n  const pp = G.mul(dd)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointMultiply (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  const tt = fromBuffer(tweak)\n  const qq = pp.mul(tt)\n  if (qq.isInfinity()) return null\n\n  return getEncoded(qq, compressed)\n}\n\nfunction privateAdd (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.add(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction privateSub (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.sub(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction sign (hash, x) {\n  return __sign(hash, x)\n}\n\nfunction signWithEntropy (hash, x, addData) {\n  return __sign(hash, x, addData)\n}\n\nfunction __sign (hash, x, addData) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (addData !== undefined && !isScalar(addData)) throw new TypeError(THROW_BAD_EXTRA_DATA)\n\n  const d = fromBuffer(x)\n  const e = fromBuffer(hash)\n\n  let r, s\n  const checkSig = function (k) {\n    const kI = fromBuffer(k)\n    const Q = G.mul(kI)\n\n    if (Q.isInfinity()) return false\n\n    r = Q.x.umod(n)\n    if (r.isZero() === 0) return false\n\n    s = kI\n      .invm(n)\n      .mul(e.add(d.mul(r)))\n      .umod(n)\n    if (s.isZero() === 0) return false\n\n    return true\n  }\n\n  deterministicGenerateK(hash, x, checkSig, isPrivate, addData)\n\n  // enforce low S values, see bip62: 'low s values in signatures'\n  if (s.cmp(nDiv2) > 0) {\n    s = n.sub(s)\n  }\n\n  const buffer = Buffer.allocUnsafe(64)\n  toBuffer(r).copy(buffer, 0)\n  toBuffer(s).copy(buffer, 32)\n  return buffer\n}\n\nfunction verify (hash, q, signature, strict) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT)\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')\n  if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE)\n\n  const Q = decodeFrom(q)\n  const r = fromBuffer(signature.subarray(0, 32))\n  const s = fromBuffer(signature.subarray(32, 64))\n\n  if (strict && s.cmp(nDiv2) > 0) {\n    return false\n  }\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')\n  if (r.gtn(0) <= 0 /* || r.compareTo(n) >= 0 */) return false\n  if (s.gtn(0) <= 0 /* || s.compareTo(n) >= 0 */) return false\n\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  const e = fromBuffer(hash)\n\n  // Compute s^-1\n  const sInv = s.invm(n)\n\n  // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n  const u1 = e.mul(sInv).umod(n)\n  const u2 = r.mul(sInv).umod(n)\n\n  // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n  const R = G.mulAdd(u1, Q, u2)\n\n  // 1.4.5 (cont.) Enforce R is not at infinity\n  if (R.isInfinity()) return false\n\n  // 1.4.6 Convert the field element R.x to an integer\n  const xR = R.x\n\n  // 1.4.7 Set v = xR mod n\n  const v = xR.umod(n)\n\n  // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n  return v.eq(r)\n}\n\nmodule.exports = {\n  isPoint,\n  isPointCompressed,\n  isPrivate,\n  pointAdd,\n  pointAddScalar,\n  pointCompress,\n  pointFromScalar,\n  pointMultiply,\n  privateAdd,\n  privateSub,\n  sign,\n  signWithEntropy,\n  verify\n}\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"./crypto\");\nconst bs58check = require('bs58check');\nconst ecc = require('tiny-secp256k1');\nconst typeforce = require('typeforce');\nconst wif = require('wif');\nconst UINT256_TYPE = typeforce.BufferN(32);\nconst NETWORK_TYPE = typeforce.compile({\n    wif: typeforce.UInt8,\n    bip32: {\n        public: typeforce.UInt32,\n        private: typeforce.UInt32,\n    },\n});\nconst BITCOIN = {\n    messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n    bech32: 'bc',\n    bip32: {\n        public: 0x0488b21e,\n        private: 0x0488ade4,\n    },\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    wif: 0x80,\n};\nconst HIGHEST_BIT = 0x80000000;\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction BIP32Path(value) {\n    return (typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/) !== null);\n}\nfunction UInt31(value) {\n    return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nclass BIP32 {\n    constructor(__D, __Q, chainCode, network, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0x00000000) {\n        this.__D = __D;\n        this.__Q = __Q;\n        this.chainCode = chainCode;\n        this.network = network;\n        this.__DEPTH = __DEPTH;\n        this.__INDEX = __INDEX;\n        this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;\n        typeforce(NETWORK_TYPE, network);\n        this.lowR = false;\n    }\n    get depth() {\n        return this.__DEPTH;\n    }\n    get index() {\n        return this.__INDEX;\n    }\n    get parentFingerprint() {\n        return this.__PARENT_FINGERPRINT;\n    }\n    get publicKey() {\n        if (this.__Q === undefined)\n            this.__Q = ecc.pointFromScalar(this.__D, true);\n        return this.__Q;\n    }\n    get privateKey() {\n        return this.__D;\n    }\n    get identifier() {\n        return crypto.hash160(this.publicKey);\n    }\n    get fingerprint() {\n        return this.identifier.slice(0, 4);\n    }\n    // Private === not neutered\n    // Public === neutered\n    isNeutered() {\n        return this.__D === undefined;\n    }\n    neutered() {\n        return fromPublicKeyLocal(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);\n    }\n    toBase58() {\n        const network = this.network;\n        const version = !this.isNeutered()\n            ? network.bip32.private\n            : network.bip32.public;\n        const buffer = Buffer.allocUnsafe(78);\n        // 4 bytes: version bytes\n        buffer.writeUInt32BE(version, 0);\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n        buffer.writeUInt8(this.depth, 4);\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        buffer.writeUInt32BE(this.parentFingerprint, 5);\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in big endian. (0x00000000 if master key)\n        buffer.writeUInt32BE(this.index, 9);\n        // 32 bytes: the chain code\n        this.chainCode.copy(buffer, 13);\n        // 33 bytes: the public key or private key data\n        if (!this.isNeutered()) {\n            // 0x00 + k for private keys\n            buffer.writeUInt8(0, 45);\n            this.privateKey.copy(buffer, 46);\n            // 33 bytes: the public key\n        }\n        else {\n            // X9.62 encoding for public keys\n            this.publicKey.copy(buffer, 45);\n        }\n        return bs58check.encode(buffer);\n    }\n    toWIF() {\n        if (!this.privateKey)\n            throw new TypeError('Missing private key');\n        return wif.encode(this.network.wif, this.privateKey, true);\n    }\n    // https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n    derive(index) {\n        typeforce(typeforce.UInt32, index);\n        const isHardened = index >= HIGHEST_BIT;\n        const data = Buffer.allocUnsafe(37);\n        // Hardened child\n        if (isHardened) {\n            if (this.isNeutered())\n                throw new TypeError('Missing private key for hardened child key');\n            // data = 0x00 || ser256(kpar) || ser32(index)\n            data[0] = 0x00;\n            this.privateKey.copy(data, 1);\n            data.writeUInt32BE(index, 33);\n            // Normal child\n        }\n        else {\n            // data = serP(point(kpar)) || ser32(index)\n            //      = serP(Kpar) || ser32(index)\n            this.publicKey.copy(data, 0);\n            data.writeUInt32BE(index, 33);\n        }\n        const I = crypto.hmacSHA512(this.chainCode, data);\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // if parse256(IL) >= n, proceed with the next value for i\n        if (!ecc.isPrivate(IL))\n            return this.derive(index + 1);\n        // Private parent key -> private child key\n        let hd;\n        if (!this.isNeutered()) {\n            // ki = parse256(IL) + kpar (mod n)\n            const ki = ecc.privateAdd(this.privateKey, IL);\n            // In case ki == 0, proceed with the next value for i\n            if (ki == null)\n                return this.derive(index + 1);\n            hd = fromPrivateKeyLocal(ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n            // Public parent key -> public child key\n        }\n        else {\n            // Ki = point(parse256(IL)) + Kpar\n            //    = G*IL + Kpar\n            const Ki = ecc.pointAddScalar(this.publicKey, IL, true);\n            // In case Ki is the point at infinity, proceed with the next value for i\n            if (Ki === null)\n                return this.derive(index + 1);\n            hd = fromPublicKeyLocal(Ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n        }\n        return hd;\n    }\n    deriveHardened(index) {\n        typeforce(UInt31, index);\n        // Only derives hardened private keys by default\n        return this.derive(index + HIGHEST_BIT);\n    }\n    derivePath(path) {\n        typeforce(BIP32Path, path);\n        let splitPath = path.split('/');\n        if (splitPath[0] === 'm') {\n            if (this.parentFingerprint)\n                throw new TypeError('Expected master, got child');\n            splitPath = splitPath.slice(1);\n        }\n        return splitPath.reduce((prevHd, indexStr) => {\n            let index;\n            if (indexStr.slice(-1) === `'`) {\n                index = parseInt(indexStr.slice(0, -1), 10);\n                return prevHd.deriveHardened(index);\n            }\n            else {\n                index = parseInt(indexStr, 10);\n                return prevHd.derive(index);\n            }\n        }, this);\n    }\n    sign(hash, lowR) {\n        if (!this.privateKey)\n            throw new Error('Missing private key');\n        if (lowR === undefined)\n            lowR = this.lowR;\n        if (lowR === false) {\n            return ecc.sign(hash, this.privateKey);\n        }\n        else {\n            let sig = ecc.sign(hash, this.privateKey);\n            const extraData = Buffer.alloc(32, 0);\n            let counter = 0;\n            // if first try is lowR, skip the loop\n            // for second try and on, add extra entropy counting up\n            while (sig[0] > 0x7f) {\n                counter++;\n                extraData.writeUIntLE(counter, 0, 6);\n                sig = ecc.signWithEntropy(hash, this.privateKey, extraData);\n            }\n            return sig;\n        }\n    }\n    verify(hash, signature) {\n        return ecc.verify(hash, this.publicKey, signature);\n    }\n}\nfunction fromBase58(inString, network) {\n    const buffer = bs58check.decode(inString);\n    if (buffer.length !== 78)\n        throw new TypeError('Invalid buffer length');\n    network = network || BITCOIN;\n    // 4 bytes: version bytes\n    const version = buffer.readUInt32BE(0);\n    if (version !== network.bip32.private && version !== network.bip32.public)\n        throw new TypeError('Invalid network version');\n    // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n    const depth = buffer[4];\n    // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n    const parentFingerprint = buffer.readUInt32BE(5);\n    if (depth === 0) {\n        if (parentFingerprint !== 0x00000000)\n            throw new TypeError('Invalid parent fingerprint');\n    }\n    // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n    // This is encoded in MSB order. (0x00000000 if master key)\n    const index = buffer.readUInt32BE(9);\n    if (depth === 0 && index !== 0)\n        throw new TypeError('Invalid index');\n    // 32 bytes: the chain code\n    const chainCode = buffer.slice(13, 45);\n    let hd;\n    // 33 bytes: private key data (0x00 + k)\n    if (version === network.bip32.private) {\n        if (buffer.readUInt8(45) !== 0x00)\n            throw new TypeError('Invalid private key');\n        const k = buffer.slice(46, 78);\n        hd = fromPrivateKeyLocal(k, chainCode, network, depth, index, parentFingerprint);\n        // 33 bytes: public key data (0x02 + X or 0x03 + X)\n    }\n    else {\n        const X = buffer.slice(45, 78);\n        hd = fromPublicKeyLocal(X, chainCode, network, depth, index, parentFingerprint);\n    }\n    return hd;\n}\nexports.fromBase58 = fromBase58;\nfunction fromPrivateKey(privateKey, chainCode, network) {\n    return fromPrivateKeyLocal(privateKey, chainCode, network);\n}\nexports.fromPrivateKey = fromPrivateKey;\nfunction fromPrivateKeyLocal(privateKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        privateKey: UINT256_TYPE,\n        chainCode: UINT256_TYPE,\n    }, { privateKey, chainCode });\n    network = network || BITCOIN;\n    if (!ecc.isPrivate(privateKey))\n        throw new TypeError('Private key not in range [1, n)');\n    return new BIP32(privateKey, undefined, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromPublicKey(publicKey, chainCode, network) {\n    return fromPublicKeyLocal(publicKey, chainCode, network);\n}\nexports.fromPublicKey = fromPublicKey;\nfunction fromPublicKeyLocal(publicKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        publicKey: typeforce.BufferN(33),\n        chainCode: UINT256_TYPE,\n    }, { publicKey, chainCode });\n    network = network || BITCOIN;\n    // verify the X coordinate is a point on the curve\n    if (!ecc.isPoint(publicKey))\n        throw new TypeError('Point is not on the curve');\n    return new BIP32(undefined, publicKey, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromSeed(seed, network) {\n    typeforce(typeforce.Buffer, seed);\n    if (seed.length < 16)\n        throw new TypeError('Seed should be at least 128 bits');\n    if (seed.length > 64)\n        throw new TypeError('Seed should be at most 512 bits');\n    network = network || BITCOIN;\n    const I = crypto.hmacSHA512(Buffer.from('Bitcoin seed', 'utf8'), seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return fromPrivateKey(IL, IR, network);\n}\nexports.fromSeed = fromSeed;\n",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bip32_1 = require(\"./bip32\");\nexports.fromSeed = bip32_1.fromSeed;\nexports.fromBase58 = bip32_1.fromBase58;\nexports.fromPublicKey = bip32_1.fromPublicKey;\nexports.fromPrivateKey = bip32_1.fromPrivateKey;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.bitcoin = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bc',\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4,\n  },\n  pubKeyHash: 0x00,\n  scriptHash: 0x05,\n  wif: 0x80,\n};\nexports.regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\nexports.testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0);\n    const b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nexports.decode = decode;\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n    ? 4\n    : i > 0x7fff\n    ? 3\n    : i > 0x7f\n    ? 2\n    : i > 0x00\n    ? 1\n    : 0;\n}\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = Buffer.allocUnsafe(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nexports.encode = encode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeforce = require('typeforce');\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction UInt31(value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nexports.UInt31 = UInt31;\nfunction BIP32Path(value) {\n  return typeforce.String(value) && !!value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/);\n}\nexports.BIP32Path = BIP32Path;\nBIP32Path.toJSON = () => {\n  return 'BIP32 derivation path';\n};\nfunction Signer(obj) {\n  return (\n    (typeforce.Buffer(obj.publicKey) ||\n      typeof obj.getPublicKey === 'function') &&\n    typeof obj.sign === 'function'\n  );\n}\nexports.Signer = Signer;\nconst SATOSHI_MAX = 21 * 1e14;\nfunction Satoshi(value) {\n  return typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\nexports.Satoshi = Satoshi;\n// external dependent types\nexports.ECPoint = typeforce.quacksLike('Point');\n// exposed, external API\nexports.Network = typeforce.compile({\n  messagePrefix: typeforce.oneOf(typeforce.Buffer, typeforce.String),\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32,\n  },\n  pubKeyHash: typeforce.UInt8,\n  scriptHash: typeforce.UInt8,\n  wif: typeforce.UInt8,\n});\nexports.Buffer256bit = typeforce.BufferN(32);\nexports.Hash160bit = typeforce.BufferN(20);\nexports.Hash256bit = typeforce.BufferN(32);\nexports.Number = typeforce.Number; // tslint:disable-line variable-name\nexports.Array = typeforce.Array;\nexports.Boolean = typeforce.Boolean; // tslint:disable-line variable-name\nexports.String = typeforce.String; // tslint:disable-line variable-name\nexports.Buffer = typeforce.Buffer;\nexports.Hex = typeforce.Hex;\nexports.maybe = typeforce.maybe;\nexports.tuple = typeforce.tuple;\nexports.UInt8 = typeforce.UInt8;\nexports.UInt32 = typeforce.UInt32;\nexports.Function = typeforce.Function;\nexports.BufferN = typeforce.BufferN;\nexports.Null = typeforce.Null;\nexports.oneOf = typeforce.oneOf;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst types = require('./types');\nconst bip66 = require('bip66');\nconst typeforce = require('typeforce');\nconst ZERO = Buffer.alloc(1, 0);\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n  return x;\n}\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = Buffer.alloc(32, 0);\n  const bstart = Math.max(0, 32 - x.length);\n  x.copy(buffer, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nfunction decode(buffer) {\n  const hashType = buffer.readUInt8(buffer.length - 1);\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const decoded = bip66.decode(buffer.slice(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = Buffer.concat([r, s], 64);\n  return { signature, hashType };\n}\nexports.decode = decode;\nfunction encode(signature, hashType) {\n  typeforce(\n    {\n      signature: types.BufferN(64),\n      hashType: types.UInt8,\n    },\n    { signature, hashType },\n  );\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const hashTypeBuffer = Buffer.allocUnsafe(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return Buffer.concat([bip66.encode(r, s), hashTypeBuffer]);\n}\nexports.encode = encode;\n",
    "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",
    "const createHmac = require('create-hmac')\n\nconst ONE1 = Buffer.alloc(1, 1)\nconst ZERO1 = Buffer.alloc(1, 0)\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nfunction deterministicGenerateK (hash, x, checkSig, isPrivate, extraEntropy) {\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  let k = Buffer.alloc(32, 0)\n  let v = Buffer.alloc(32, 1)\n\n  // Step D\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ZERO1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step E\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step F\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ONE1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step G\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n  v = createHmac('sha256', k).update(v).digest()\n\n  let T = v\n\n  // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n  while (!isPrivate(T) || !checkSig(T)) {\n    k = createHmac('sha256', k)\n      .update(v)\n      .update(ZERO1)\n      .digest()\n\n    v = createHmac('sha256', k).update(v).digest()\n\n    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n    v = createHmac('sha256', k).update(v).digest()\n    T = v\n  }\n\n  return T\n}\n\nmodule.exports = deterministicGenerateK\n",
    "const BN = require('bn.js')\nconst EC = require('elliptic').ec\nconst secp256k1 = new EC('secp256k1')\nconst deterministicGenerateK = require('./rfc6979')\n\nconst ZERO32 = Buffer.alloc(32, 0)\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex')\nconst EC_P = Buffer.from('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f', 'hex')\n\nconst n = secp256k1.curve.n\nconst nDiv2 = n.shrn(1)\nconst G = secp256k1.curve.g\n\nconst THROW_BAD_PRIVATE = 'Expected Private'\nconst THROW_BAD_POINT = 'Expected Point'\nconst THROW_BAD_TWEAK = 'Expected Tweak'\nconst THROW_BAD_HASH = 'Expected Hash'\nconst THROW_BAD_SIGNATURE = 'Expected Signature'\nconst THROW_BAD_EXTRA_DATA = 'Expected Extra Data (32 bytes)'\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32\n}\n\nfunction isOrderScalar (x) {\n  if (!isScalar(x)) return false\n  return x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isPoint (p) {\n  if (!Buffer.isBuffer(p)) return false\n  if (p.length < 33) return false\n\n  const t = p[0]\n  const x = p.slice(1, 33)\n  if (x.compare(ZERO32) === 0) return false\n  if (x.compare(EC_P) >= 0) return false\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    try { decodeFrom(p) } catch (e) { return false } // TODO: temporary\n    return true\n  }\n\n  const y = p.slice(33)\n  if (y.compare(ZERO32) === 0) return false\n  if (y.compare(EC_P) >= 0) return false\n  if (t === 0x04 && p.length === 65) return true\n  return false\n}\n\nfunction __isPointCompressed (p) {\n  return p[0] !== 0x04\n}\n\nfunction isPointCompressed (p) {\n  if (!isPoint(p)) return false\n  return __isPointCompressed(p)\n}\n\nfunction isPrivate (x) {\n  if (!isScalar(x)) return false\n  return x.compare(ZERO32) > 0 && // > 0\n    x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isSignature (value) {\n  const r = value.slice(0, 32)\n  const s = value.slice(32, 64)\n  return Buffer.isBuffer(value) && value.length === 64 &&\n    r.compare(EC_GROUP_ORDER) < 0 &&\n    s.compare(EC_GROUP_ORDER) < 0\n}\n\nfunction assumeCompression (value, pubkey) {\n  if (value === undefined && pubkey !== undefined) return __isPointCompressed(pubkey)\n  if (value === undefined) return true\n  return value\n}\n\nfunction fromBuffer (d) { return new BN(d) }\nfunction toBuffer (d) { return d.toArrayLike(Buffer, 'be', 32) }\nfunction decodeFrom (P) { return secp256k1.curve.decodePoint(P) }\nfunction getEncoded (P, compressed) { return Buffer.from(P._encode(compressed)) }\n\nfunction pointAdd (pA, pB, __compressed) {\n  if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT)\n  if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT)\n\n  const a = decodeFrom(pA)\n  const b = decodeFrom(pB)\n  const pp = a.add(b)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed, pA)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointAddScalar (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  if (tweak.compare(ZERO32) === 0) return getEncoded(pp, compressed)\n\n  const tt = fromBuffer(tweak)\n  const qq = G.mul(tt)\n  const uu = pp.add(qq)\n  if (uu.isInfinity()) return null\n\n  return getEncoded(uu, compressed)\n}\n\nfunction pointCompress (p, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n\n  const pp = decodeFrom(p)\n  if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT)\n\n  const compressed = assumeCompression(__compressed, p)\n\n  return getEncoded(pp, compressed)\n}\n\nfunction pointFromScalar (d, __compressed) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n\n  const dd = fromBuffer(d)\n  const pp = G.mul(dd)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointMultiply (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  const tt = fromBuffer(tweak)\n  const qq = pp.mul(tt)\n  if (qq.isInfinity()) return null\n\n  return getEncoded(qq, compressed)\n}\n\nfunction privateAdd (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.add(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction privateSub (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.sub(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction sign (hash, x) {\n  return __sign(hash, x)\n}\n\nfunction signWithEntropy (hash, x, addData) {\n  return __sign(hash, x, addData)\n}\n\nfunction __sign (hash, x, addData) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (addData !== undefined && !isScalar(addData)) throw new TypeError(THROW_BAD_EXTRA_DATA)\n\n  const d = fromBuffer(x)\n  const e = fromBuffer(hash)\n\n  let r, s\n  const checkSig = function (k) {\n    const kI = fromBuffer(k)\n    const Q = G.mul(kI)\n\n    if (Q.isInfinity()) return false\n\n    r = Q.x.umod(n)\n    if (r.isZero() === 0) return false\n\n    s = kI\n      .invm(n)\n      .mul(e.add(d.mul(r)))\n      .umod(n)\n    if (s.isZero() === 0) return false\n\n    return true\n  }\n\n  deterministicGenerateK(hash, x, checkSig, isPrivate, addData)\n\n  // enforce low S values, see bip62: 'low s values in signatures'\n  if (s.cmp(nDiv2) > 0) {\n    s = n.sub(s)\n  }\n\n  const buffer = Buffer.allocUnsafe(64)\n  toBuffer(r).copy(buffer, 0)\n  toBuffer(s).copy(buffer, 32)\n  return buffer\n}\n\nfunction verify (hash, q, signature, strict) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT)\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')\n  if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE)\n\n  const Q = decodeFrom(q)\n  const r = fromBuffer(signature.slice(0, 32))\n  const s = fromBuffer(signature.slice(32, 64))\n\n  if (strict && s.cmp(nDiv2) > 0) {\n    return false\n  }\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')\n  if (r.gtn(0) <= 0 /* || r.compareTo(n) >= 0 */) return false\n  if (s.gtn(0) <= 0 /* || s.compareTo(n) >= 0 */) return false\n\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  const e = fromBuffer(hash)\n\n  // Compute s^-1\n  const sInv = s.invm(n)\n\n  // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n  const u1 = e.mul(sInv).umod(n)\n  const u2 = r.mul(sInv).umod(n)\n\n  // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n  const R = G.mulAdd(u1, Q, u2)\n\n  // 1.4.5 (cont.) Enforce R is not at infinity\n  if (R.isInfinity()) return false\n\n  // 1.4.6 Convert the field element R.x to an integer\n  const xR = R.x\n\n  // 1.4.7 Set v = xR mod n\n  const v = xR.umod(n)\n\n  // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n  return v.eq(r)\n}\n\nmodule.exports = {\n  isPoint,\n  isPointCompressed,\n  isPrivate,\n  pointAdd,\n  pointAddScalar,\n  pointCompress,\n  pointFromScalar,\n  pointMultiply,\n  privateAdd,\n  privateSub,\n  sign,\n  signWithEntropy,\n  verify\n}\n",
    "var OPS = require('bitcoin-ops')\n\nfunction encodingLength (i) {\n  return i < OPS.OP_PUSHDATA1 ? 1\n  : i <= 0xff ? 2\n  : i <= 0xffff ? 3\n  : 5\n}\n\nfunction encode (buffer, number, offset) {\n  var size = encodingLength(number)\n\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(number, offset)\n\n  // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA1, offset)\n    buffer.writeUInt8(number, offset + 1)\n\n  // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(OPS.OP_PUSHDATA2, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n\n  // 32 bit\n  } else {\n    buffer.writeUInt8(OPS.OP_PUSHDATA4, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n  }\n\n  return size\n}\n\nfunction decode (buffer, offset) {\n  var opcode = buffer.readUInt8(offset)\n  var number, size\n\n  // ~6 bit\n  if (opcode < OPS.OP_PUSHDATA1) {\n    number = opcode\n    size = 1\n\n  // 8 bit\n  } else if (opcode === OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null\n    number = buffer.readUInt8(offset + 1)\n    size = 2\n\n  // 16 bit\n  } else if (opcode === OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null\n    number = buffer.readUInt16LE(offset + 1)\n    size = 3\n\n  // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null\n    if (opcode !== OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode')\n\n    number = buffer.readUInt32LE(offset + 1)\n    size = 5\n  }\n\n  return {\n    opcode: opcode,\n    number: number,\n    size: size\n  }\n}\n\nmodule.exports = {\n  encodingLength: encodingLength,\n  encode: encode,\n  decode: decode\n}\n",
    "var OPS = require('./index.json')\n\nvar map = {}\nfor (var op in OPS) {\n  var code = OPS[op]\n  map[code] = op\n}\n\nmodule.exports = map\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst scriptNumber = require('./script_number');\nconst scriptSignature = require('./script_signature');\nconst types = require('./types');\nconst bip66 = require('bip66');\nconst ecc = require('tiny-secp256k1');\nconst pushdata = require('pushdata-bitcoin');\nconst typeforce = require('typeforce');\nexports.OPS = require('bitcoin-ops');\nconst REVERSE_OPS = require('bitcoin-ops/map');\nconst OP_INT_BASE = exports.OPS.OP_RESERVED; // OP_1 - 1\nfunction isOPInt(value) {\n  return (\n    types.Number(value) &&\n    (value === exports.OPS.OP_0 ||\n      (value >= exports.OPS.OP_1 && value <= exports.OPS.OP_16) ||\n      value === exports.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\nexports.isPushOnly = isPushOnly;\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return exports.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return exports.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction chunksIsArray(buf) {\n  return types.Array(buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  typeforce(types.Array, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = Buffer.allocUnsafe(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nexports.compile = compile;\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  typeforce(types.Buffer, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > exports.OPS.OP_0 && opcode <= exports.OPS.OP_PUSHDATA4) {\n      const d = pushdata.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\nexports.decompile = decompile;\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString('hex');\n        chunk = op;\n      }\n      // opcode!\n      return REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\nexports.toASM = toASM;\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (exports.OPS[chunkStr] !== undefined) return exports.OPS[chunkStr];\n      typeforce(types.Hex, chunkStr);\n      // data!\n      return Buffer.from(chunkStr, 'hex');\n    }),\n  );\n}\nexports.fromASM = fromASM;\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === exports.OPS.OP_0) return Buffer.allocUnsafe(0);\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\nexports.toStack = toStack;\nfunction isCanonicalPubKey(buffer) {\n  return ecc.isPoint(buffer);\n}\nexports.isCanonicalPubKey = isCanonicalPubKey;\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nexports.isDefinedHashType = isDefinedHashType;\nfunction isCanonicalScriptSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return bip66.check(buffer.slice(0, -1));\n}\nexports.isCanonicalScriptSignature = isCanonicalScriptSignature;\n// tslint:disable-next-line variable-name\nexports.number = scriptNumber;\nexports.signature = scriptSignature;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nexports.prop = prop;\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\nexports.value = value;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// output: OP_RETURN ...\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      data: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'embed', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.data) return;\n    return bscript.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  lazy.prop(o, 'data', () => {\n    if (!a.output) return;\n    return bscript.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(typef.Buffer))\n        throw new TypeError('Output is invalid');\n      if (a.data && !stacksEqual(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2data = p2data;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst typef = require('typeforce');\nconst ecc = require('tiny-secp256k1');\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      m: typef.maybe(typef.Number),\n      n: typef.maybe(typef.Number),\n      output: typef.maybe(typef.Buffer),\n      pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n      signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n      input: typef.maybe(typef.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid');\n      if (!typef.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => ecc.isPoint(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      pubkey: typef.maybe(ecc.isPoint),\n      signature: typef.maybe(bscript.isCanonicalScriptSignature),\n      input: typef.maybe(typef.Buffer),\n    },\n    a,\n  );\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pk', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!ecc.isPoint(o.pubkey))\n        throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey))\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input))\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pk = p2pk;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst createHash = require('create-hash');\nfunction ripemd160(buffer) {\n  try {\n    return createHash('rmd160')\n      .update(buffer)\n      .digest();\n  } catch (err) {\n    return createHash('ripemd160')\n      .update(buffer)\n      .digest();\n  }\n}\nexports.ripemd160 = ripemd160;\nfunction sha1(buffer) {\n  return createHash('sha1')\n    .update(buffer)\n    .digest();\n}\nexports.sha1 = sha1;\nfunction sha256(buffer) {\n  return createHash('sha256')\n    .update(buffer)\n    .digest();\n}\nexports.sha256 = sha256;\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\nexports.hash160 = hash160;\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\nexports.hash256 = hash256;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\nconst bs58check = require('bs58check');\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      output: typef.maybe(typef.BufferN(25)),\n      pubkey: typef.maybe(ecc.isPoint),\n      signature: typef.maybe(bscript.isCanonicalScriptSignature),\n      input: typef.maybe(typef.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!ecc.isPoint(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst bs58check = require('bs58check');\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      output: typef.maybe(typef.BufferN(23)),\n      redeem: typef.maybe({\n        network: typef.maybe(typef.Object),\n        output: typef.maybe(typef.Buffer),\n        input: typef.maybe(typef.Buffer),\n        witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n      }),\n      input: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    return {\n      network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined) nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n",
    "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\nconst bech32 = require('bech32');\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      input: typef.maybe(typef.BufferN(0)),\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.BufferN(22)),\n      pubkey: typef.maybe(ecc.isPoint),\n      signature: typef.maybe(bscript.isCanonicalScriptSignature),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!ecc.isPoint(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!ecc.isPoint(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\nconst bech32 = require('bech32');\nconst EMPTY_BUFFER = Buffer.alloc(0);\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    Buffer.isBuffer(chunk) &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    ecc.isPoint(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(32)),\n      output: typef.maybe(typef.BufferN(34)),\n      redeem: typef.maybe({\n        input: typef.maybe(typef.Buffer),\n        network: typef.maybe(typef.Object),\n        output: typef.maybe(typef.Buffer),\n        witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n      }),\n      input: typef.maybe(typef.BufferN(0)),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const _rchunks = lazy.value(() => {\n    return bscript.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined) nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty?\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !stacksEqual(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (bscript.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(wScript))\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (bscript.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wsh = p2wsh;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst embed_1 = require('./embed');\nexports.embed = embed_1.p2data;\nconst p2ms_1 = require('./p2ms');\nexports.p2ms = p2ms_1.p2ms;\nconst p2pk_1 = require('./p2pk');\nexports.p2pk = p2pk_1.p2pk;\nconst p2pkh_1 = require('./p2pkh');\nexports.p2pkh = p2pkh_1.p2pkh;\nconst p2sh_1 = require('./p2sh');\nexports.p2sh = p2sh_1.p2sh;\nconst p2wpkh_1 = require('./p2wpkh');\nexports.p2wpkh = p2wpkh_1.p2wpkh;\nconst p2wsh_1 = require('./p2wsh');\nexports.p2wsh = p2wsh_1.p2wsh;\n// TODO\n// witness commitment\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst types = require('./types');\nconst bech32 = require('bech32');\nconst bs58check = require('bs58check');\nconst typeforce = require('typeforce');\nfunction fromBase58Check(address) {\n  const payload = bs58check.decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\nexports.fromBase58Check = fromBase58Check;\nfunction fromBech32(address) {\n  const result = bech32.decode(address);\n  const data = bech32.fromWords(result.words.slice(1));\n  return {\n    version: result.words[0],\n    prefix: result.prefix,\n    data: Buffer.from(data),\n  };\n}\nexports.fromBech32 = fromBech32;\nfunction toBase58Check(hash, version) {\n  typeforce(types.tuple(types.Hash160bit, types.UInt8), arguments);\n  const payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\nexports.toBase58Check = toBase58Check;\nfunction toBech32(data, version, prefix) {\n  const words = bech32.toWords(data);\n  words.unshift(version);\n  return bech32.encode(prefix, words);\n}\nexports.toBech32 = toBech32;\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || networks.bitcoin;\n  try {\n    return payments.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wsh({ output, network }).address;\n  } catch (e) {}\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\nexports.fromOutputScript = fromOutputScript;\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return payments.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return payments.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return payments.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return payments.p2wsh({ hash: decodeBech32.data }).output;\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nexports.toOutputScript = toOutputScript;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst NETWORKS = require('./networks');\nconst types = require('./types');\nconst ecc = require('tiny-secp256k1');\nconst randomBytes = require('randombytes');\nconst typeforce = require('typeforce');\nconst wif = require('wif');\nconst isOptions = typeforce.maybe(\n  typeforce.compile({\n    compressed: types.maybe(types.Boolean),\n    network: types.maybe(types.Network),\n  }),\n);\nclass ECPair {\n  constructor(__D, __Q, options) {\n    this.__D = __D;\n    this.__Q = __Q;\n    this.lowR = false;\n    if (options === undefined) options = {};\n    this.compressed =\n      options.compressed === undefined ? true : options.compressed;\n    this.network = options.network || NETWORKS.bitcoin;\n    if (__Q !== undefined) this.__Q = ecc.pointCompress(__Q, this.compressed);\n  }\n  get privateKey() {\n    return this.__D;\n  }\n  get publicKey() {\n    if (!this.__Q) this.__Q = ecc.pointFromScalar(this.__D, this.compressed);\n    return this.__Q;\n  }\n  toWIF() {\n    if (!this.__D) throw new Error('Missing private key');\n    return wif.encode(this.network.wif, this.__D, this.compressed);\n  }\n  sign(hash, lowR) {\n    if (!this.__D) throw new Error('Missing private key');\n    if (lowR === undefined) lowR = this.lowR;\n    if (lowR === false) {\n      return ecc.sign(hash, this.__D);\n    } else {\n      let sig = ecc.sign(hash, this.__D);\n      const extraData = Buffer.alloc(32, 0);\n      let counter = 0;\n      // if first try is lowR, skip the loop\n      // for second try and on, add extra entropy counting up\n      while (sig[0] > 0x7f) {\n        counter++;\n        extraData.writeUIntLE(counter, 0, 6);\n        sig = ecc.signWithEntropy(hash, this.__D, extraData);\n      }\n      return sig;\n    }\n  }\n  verify(hash, signature) {\n    return ecc.verify(hash, this.publicKey, signature);\n  }\n}\nfunction fromPrivateKey(buffer, options) {\n  typeforce(types.Buffer256bit, buffer);\n  if (!ecc.isPrivate(buffer))\n    throw new TypeError('Private key not in range [1, n)');\n  typeforce(isOptions, options);\n  return new ECPair(buffer, undefined, options);\n}\nexports.fromPrivateKey = fromPrivateKey;\nfunction fromPublicKey(buffer, options) {\n  typeforce(ecc.isPoint, buffer);\n  typeforce(isOptions, options);\n  return new ECPair(undefined, buffer, options);\n}\nexports.fromPublicKey = fromPublicKey;\nfunction fromWIF(wifString, network) {\n  const decoded = wif.decode(wifString);\n  const version = decoded.version;\n  // list of networks?\n  if (types.Array(network)) {\n    network = network\n      .filter(x => {\n        return version === x.wif;\n      })\n      .pop();\n    if (!network) throw new Error('Unknown network version');\n    // otherwise, assume a network object (or default to bitcoin)\n  } else {\n    network = network || NETWORKS.bitcoin;\n    if (version !== network.wif) throw new Error('Invalid network version');\n  }\n  return fromPrivateKey(decoded.privateKey, {\n    compressed: decoded.compressed,\n    network: network,\n  });\n}\nexports.fromWIF = fromWIF;\nfunction makeRandom(options) {\n  typeforce(isOptions, options);\n  if (options === undefined) options = {};\n  const rng = options.rng || randomBytes;\n  let d;\n  do {\n    d = rng(32);\n    typeforce(types.Buffer256bit, d);\n  } while (!ecc.isPrivate(d));\n  return fromPrivateKey(d, options);\n}\nexports.makeRandom = makeRandom;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst types = require('./types');\nconst typeforce = require('typeforce');\nconst varuint = require('varuint-bitcoin');\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction cloneBuffer(buffer) {\n  const clone = Buffer.allocUnsafe(buffer.length);\n  buffer.copy(clone);\n  return clone;\n}\nexports.cloneBuffer = cloneBuffer;\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  writeUInt8(i) {\n    this.offset = this.buffer.writeUInt8(i, this.offset);\n  }\n  writeInt32(i) {\n    this.offset = this.buffer.writeInt32LE(i, this.offset);\n  }\n  writeUInt32(i) {\n    this.offset = this.buffer.writeUInt32LE(i, this.offset);\n  }\n  writeUInt64(i) {\n    this.offset = writeUInt64LE(this.buffer, i, this.offset);\n  }\n  writeVarInt(i) {\n    varuint.encode(i, this.buffer, this.offset);\n    this.offset += varuint.encode.bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.offset += slice.copy(this.buffer, this.offset);\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n}\nexports.BufferWriter = BufferWriter;\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  readUInt8() {\n    const result = this.buffer.readUInt8(this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt64() {\n    const result = readUInt64LE(this.buffer, this.offset);\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const vi = varuint.decode(this.buffer, this.offset);\n    this.offset += varuint.decode.bytes;\n    return vi;\n  }\n  readSlice(n) {\n    if (this.buffer.length < this.offset + n) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + n);\n    this.offset += n;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\nexports.BufferReader = BufferReader;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst bscript = require('./script');\nconst script_1 = require('./script');\nconst types = require('./types');\nconst typeforce = require('typeforce');\nconst varuint = require('varuint-bitcoin');\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_SCRIPT = Buffer.allocUnsafe(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'hex',\n);\nconst ONE = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n  'hex',\n);\nconst VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\nconst BLANK_OUTPUT = {\n  script: EMPTY_SCRIPT,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\nclass Transaction {\n  constructor() {\n    this.version = 1;\n    this.locktime = 0;\n    this.ins = [];\n    this.outs = [];\n  }\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readUInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n  }\n  static isCoinbaseHash(buffer) {\n    typeforce(types.Hash256bit, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    typeforce(\n      types.tuple(\n        types.Hash256bit,\n        types.UInt32,\n        types.maybe(types.UInt32),\n        types.maybe(types.Buffer),\n      ),\n      arguments,\n    );\n    if (types.Null(sequence)) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_SCRIPT,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    typeforce(types.tuple(types.Buffer, types.Satoshi), arguments);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      varuint.encodingLength(this.ins.length) +\n      varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number),\n      arguments,\n    );\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = bscript.compile(\n      bscript.decompile(prevOutScript).filter(x => {\n        return x !== script_1.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_SCRIPT;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n    buffer.writeInt32LE(hashType, buffer.length - 4);\n    txTmp.__toBuffer(buffer, 0, false);\n    return bcrypto.hash256(buffer);\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32),\n      arguments,\n    );\n    let tbuffer = Buffer.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = bcrypto.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = Buffer.allocUnsafe(txOutsSize);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.hash256(tbuffer);\n    }\n    tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n    bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeUInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeUInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return bcrypto.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n    return bcrypto.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return bufferutils_1.reverseBuffer(this.getHash(false)).toString('hex');\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return this.toBuffer(undefined, undefined).toString('hex');\n  }\n  setInputScript(index, scriptSig) {\n    typeforce(types.tuple(types.Number, types.Buffer), arguments);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    typeforce(types.tuple(types.Number, [types.Buffer]), arguments);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new bufferutils_1.BufferWriter(\n      buffer,\n      initialOffset || 0,\n    );\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeUInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\nTransaction.DEFAULT_SEQUENCE = 0xffffffff;\nTransaction.SIGHASH_ALL = 0x01;\nTransaction.SIGHASH_NONE = 0x02;\nTransaction.SIGHASH_SINGLE = 0x03;\nTransaction.SIGHASH_ANYONECANPAY = 0x80;\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00;\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01;\nexports.Transaction = Transaction;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst transaction_1 = require('./transaction');\nconst types = require('./types');\nconst fastMerkleRoot = require('merkle-lib/fastRoot');\nconst typeforce = require('typeforce');\nconst varuint = require('varuint-bitcoin');\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  constructor() {\n    this.version = 1;\n    this.prevHash = undefined;\n    this.merkleRoot = undefined;\n    this.timestamp = 0;\n    this.witnessCommit = undefined;\n    this.bits = 0;\n    this.nonce = 0;\n    this.transactions = undefined;\n  }\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = transaction_1.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(Buffer.from(hex, 'hex'));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = Buffer.alloc(32, 0);\n    target.writeUIntBE(mantissa, 29 - exponent, 3);\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    typeforce([{ getHash: types.Function }], transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = fastMerkleRoot(hashes, bcrypto.hash256);\n    return forWitness\n      ? bcrypto.hash256(\n          Buffer.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(out =>\n        out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex')),\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Buffer && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Buffer &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return bcrypto.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return bufferutils_1.reverseBuffer(this.getHash()).toString('hex');\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n    const bufferWriter = new bufferutils_1.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    varuint.encode(this.transactions.length, buffer, bufferWriter.offset);\n    bufferWriter.offset += varuint.encode.bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return this.toBuffer(headersOnly).toString('hex');\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = bufferutils_1.reverseBuffer(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return hash.compare(target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return this.merkleRoot.compare(actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return this.witnessCommit.compare(actualWitnessCommit) === 0;\n  }\n}\nexports.Block = Block;\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bip174_1 = require('bip174');\nconst varuint = require('bip174/src/lib/converter/varint');\nconst utils_1 = require('bip174/src/lib/utils');\nconst address_1 = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst crypto_1 = require('./crypto');\nconst ecpair_1 = require('./ecpair');\nconst networks_1 = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst transaction_1 = require('./transaction');\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: networks_1.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000,\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  constructor(opts = {}, data = new bip174_1.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Old TransactionBuilder behavior was to not confirm input values\n      // before signing. Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  static fromBase64(data, opts = {}) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174_1.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: bufferutils_1.cloneBuffer(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = address_1.fromOutputScript(output.script, this.opts.network);\n      } catch (_) {}\n      return {\n        script: bufferutils_1.cloneBuffer(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = address_1.toOutputScript(address, network);\n      outputData = Object.assign(outputData, { script });\n    }\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    utils_1.checkForInput(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc = getFinalScripts) {\n    const input = utils_1.checkForInput(this.data.inputs, inputIndex);\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = utils_1.checkForInput(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = utils_1.checkForInput(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = utils_1.checkForInput(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = utils_1.checkForOutput(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = utils_1.checkForOutput(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs() {\n    utils_1.checkForInput(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => sig.pubkey.equals(pubkey))\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = bscript.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      const keypair = ecpair_1.fromPublicKey(pSig.pubkey);\n      results.push(keypair.verify(hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  signAllInputsHD(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: bscript.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const { hash, sighashType } = getHashAndSighashType(\n        this.data.inputs,\n        inputIndex,\n        keyPair.publicKey,\n        this.__CACHE,\n        sighashTypes,\n      );\n      return Promise.resolve(keyPair.sign(hash)).then(signature => {\n        const partialSig = [\n          {\n            pubkey: keyPair.publicKey,\n            signature: bscript.signature.encode(signature, sighashType),\n          },\n        ];\n        this.data.updateInput(inputIndex, { partialSig });\n      });\n    });\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\nexports.Psbt = Psbt;\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  constructor(buffer = Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = transaction_1.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!Buffer.isBuffer(input.hash) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? bufferutils_1.reverseBuffer(Buffer.from(input.hash, 'hex'))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !Buffer.isBuffer(output.script) ||\n      typeof output.value !== 'number'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = payments.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = ecpair_1.fromPublicKey(pkey, { compressed: true })\n          .publicKey;\n        return partialSig.find(pSig => pSig.pubkey.equals(pubkey));\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nconst isP2MS = isPaymentFactory(payments.p2ms);\nconst isP2PK = isPaymentFactory(payments.p2pk);\nconst isP2PKH = isPaymentFactory(payments.p2pkh);\nconst isP2WPKH = isPaymentFactory(payments.p2wpkh);\nconst isP2WSHScript = isPaymentFactory(payments.p2wsh);\nconst isP2SHScript = isPaymentFactory(payments.p2sh);\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n    if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    let throws = false;\n    let pSigs = [];\n    if ((input.partialSig || []).length === 0) {\n      if (!input.finalScriptSig && !input.finalScriptWitness) return;\n      pSigs = getPsigsFromInputFinalScripts(input);\n    } else {\n      pSigs = input.partialSig;\n    }\n    pSigs.forEach(pSig => {\n      const { hashType } = bscript.signature.decode(pSig.signature);\n      const whitelist = [];\n      const isAnyoneCanPay =\n        hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n      if (isAnyoneCanPay) whitelist.push('addInput');\n      const hashMod = hashType & 0x1f;\n      switch (hashMod) {\n        case transaction_1.Transaction.SIGHASH_ALL:\n          break;\n        case transaction_1.Transaction.SIGHASH_SINGLE:\n        case transaction_1.Transaction.SIGHASH_NONE:\n          whitelist.push('addOutput');\n          whitelist.push('setInputSequence');\n          break;\n      }\n      if (whitelist.indexOf(action) === -1) {\n        throws = true;\n      }\n    });\n    if (throws) {\n      throw new Error('Can not modify transaction, signatures exist.');\n    }\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = bscript.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!pubkeyInScript(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${pubkey.toString('hex')}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    bufferutils_1.reverseBuffer(Buffer.from(input.hash)).toString('hex') +\n    ':' +\n    input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (!scriptPubKey.equals(redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  payments.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : payments.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : payments.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = witnessStackToScriptWitness(p2wsh.witness);\n    } else {\n      finalScriptWitness = witnessStackToScriptWitness(payment.witness);\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = utils_1.checkForInput(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_ALL;\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (!prevoutHash.equals(utxoHash)) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if (isP2WPKH(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = payments.p2pkh({ hash: meaningfulScript.slice(2) })\n      .output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${meaningfulScript.toString('hex')}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          'to trick you into paying large fees. This behavior is the same as the old ' +\n          'TransactionBuilder class when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = payments.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = payments.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = payments.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = payments.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || isP2WPKH(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = utils_1.checkForInput(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (!bipDv.pubkey.equals(node.publicKey)) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = payments.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return ps.pubkey.equals(pk);\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case transaction_1.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = transaction_1.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(fee / bytes);\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return input.witnessUtxo.script;\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    return nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index].script;\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return pubkeyInScript(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return pubkeyInScript(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = bscript.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !Buffer.isBuffer(lastItem) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return bscript.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = isP2SHScript(script);\n  const isP2SHP2WSH = isP2SH && redeemScript && isP2WSHScript(redeemScript);\n  const isP2WSH = isP2WSHScript(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n      ? 'p2sh'\n      : isP2WSH\n      ? 'p2wsh'\n      : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if (isP2WPKH(script) || isP2SHScript(script)) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction pubkeyInScript(pubkey, script) {\n  const pubkeyHash = crypto_1.hash160(pubkey);\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.some(element => {\n    if (typeof element === 'number') return false;\n    return element.equals(pubkey) || element.equals(pubkeyHash);\n  });\n}\nfunction classifyScript(script) {\n  if (isP2WPKH(script)) return 'witnesspubkeyhash';\n  if (isP2PKH(script)) return 'pubkeyhash';\n  if (isP2MS(script)) return 'multisig';\n  if (isP2PK(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n",
    "'use strict';\n// OP_0 [signatures ...]\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction partialSignature(value) {\n  return (\n    value === script_1.OPS.OP_0 || bscript.isCanonicalScriptSignature(value)\n  );\n}\nfunction check(script, allowIncomplete) {\n  const chunks = bscript.decompile(script);\n  if (chunks.length < 2) return false;\n  if (chunks[0] !== script_1.OPS.OP_0) return false;\n  if (allowIncomplete) {\n    return chunks.slice(1).every(partialSignature);\n  }\n  return chunks.slice(1).every(bscript.isCanonicalScriptSignature);\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'multisig input';\n};\n",
    "'use strict';\n// m [pubKeys ...] n OP_CHECKMULTISIG\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nconst types = require('../../types');\nconst OP_INT_BASE = script_1.OPS.OP_RESERVED; // OP_1 - 1\nfunction check(script, allowIncomplete) {\n  const chunks = bscript.decompile(script);\n  if (chunks.length < 4) return false;\n  if (chunks[chunks.length - 1] !== script_1.OPS.OP_CHECKMULTISIG) return false;\n  if (!types.Number(chunks[0])) return false;\n  if (!types.Number(chunks[chunks.length - 2])) return false;\n  const m = chunks[0] - OP_INT_BASE;\n  const n = chunks[chunks.length - 2] - OP_INT_BASE;\n  if (m <= 0) return false;\n  if (n > 16) return false;\n  if (m > n) return false;\n  if (n !== chunks.length - 3) return false;\n  if (allowIncomplete) return true;\n  const keys = chunks.slice(1, -2);\n  return keys.every(bscript.isCanonicalPubKey);\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'multi-sig output';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// OP_RETURN {data}\nconst bscript = require('../script');\nconst OPS = bscript.OPS;\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return buffer.length > 1 && buffer[0] === OPS.OP_RETURN;\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'null data output';\n};\nconst output = { check };\nexports.output = output;\n",
    "'use strict';\n// {signature}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return chunks.length === 1 && bscript.isCanonicalScriptSignature(chunks[0]);\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'pubKey input';\n};\n",
    "'use strict';\n// {pubKey} OP_CHECKSIG\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return (\n    chunks.length === 2 &&\n    bscript.isCanonicalPubKey(chunks[0]) &&\n    chunks[1] === script_1.OPS.OP_CHECKSIG\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'pubKey output';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\n// {signature} {pubKey}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return (\n    chunks.length === 2 &&\n    bscript.isCanonicalScriptSignature(chunks[0]) &&\n    bscript.isCanonicalPubKey(chunks[1])\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'pubKeyHash input';\n};\n",
    "'use strict';\n// OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return (\n    buffer.length === 25 &&\n    buffer[0] === script_1.OPS.OP_DUP &&\n    buffer[1] === script_1.OPS.OP_HASH160 &&\n    buffer[2] === 0x14 &&\n    buffer[23] === script_1.OPS.OP_EQUALVERIFY &&\n    buffer[24] === script_1.OPS.OP_CHECKSIG\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'pubKeyHash output';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\n// OP_0 {pubKeyHash}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return (\n    buffer.length === 22 &&\n    buffer[0] === script_1.OPS.OP_0 &&\n    buffer[1] === 0x14\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'Witness pubKeyHash output';\n};\n",
    "'use strict';\n// OP_0 {scriptHash}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return (\n    buffer.length === 34 &&\n    buffer[0] === script_1.OPS.OP_0 &&\n    buffer[1] === 0x20\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'Witness scriptHash output';\n};\n",
    "'use strict';\n// <scriptSig> {serialized scriptPubKey script}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst p2ms = require('../multisig');\nconst p2pk = require('../pubkey');\nconst p2pkh = require('../pubkeyhash');\nconst p2wpkho = require('../witnesspubkeyhash/output');\nconst p2wsho = require('../witnessscripthash/output');\nfunction check(script, allowIncomplete) {\n  const chunks = bscript.decompile(script);\n  if (chunks.length < 1) return false;\n  const lastChunk = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(lastChunk)) return false;\n  const scriptSigChunks = bscript.decompile(\n    bscript.compile(chunks.slice(0, -1)),\n  );\n  const redeemScriptChunks = bscript.decompile(lastChunk);\n  // is redeemScript a valid script?\n  if (!redeemScriptChunks) return false;\n  // is redeemScriptSig push only?\n  if (!bscript.isPushOnly(scriptSigChunks)) return false;\n  // is witness?\n  if (chunks.length === 1) {\n    return (\n      p2wsho.check(redeemScriptChunks) || p2wpkho.check(redeemScriptChunks)\n    );\n  }\n  // match types\n  if (\n    p2pkh.input.check(scriptSigChunks) &&\n    p2pkh.output.check(redeemScriptChunks)\n  )\n    return true;\n  if (\n    p2ms.input.check(scriptSigChunks, allowIncomplete) &&\n    p2ms.output.check(redeemScriptChunks)\n  )\n    return true;\n  if (\n    p2pk.input.check(scriptSigChunks) &&\n    p2pk.output.check(redeemScriptChunks)\n  )\n    return true;\n  return false;\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'scriptHash input';\n};\n",
    "'use strict';\n// OP_HASH160 {scriptHash} OP_EQUAL\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return (\n    buffer.length === 23 &&\n    buffer[0] === script_1.OPS.OP_HASH160 &&\n    buffer[1] === 0x14 &&\n    buffer[22] === script_1.OPS.OP_EQUAL\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'scriptHash output';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\n// OP_RETURN {aa21a9ed} {commitment}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst script_1 = require('../../script');\nconst types = require('../../types');\nconst typeforce = require('typeforce');\nconst HEADER = Buffer.from('aa21a9ed', 'hex');\nfunction check(script) {\n  const buffer = bscript.compile(script);\n  return (\n    buffer.length > 37 &&\n    buffer[0] === script_1.OPS.OP_RETURN &&\n    buffer[1] === 0x24 &&\n    buffer.slice(2, 6).equals(HEADER)\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'Witness commitment output';\n};\nfunction encode(commitment) {\n  typeforce(types.Hash256bit, commitment);\n  const buffer = Buffer.allocUnsafe(36);\n  HEADER.copy(buffer, 0);\n  commitment.copy(buffer, 4);\n  return bscript.compile([script_1.OPS.OP_RETURN, buffer]);\n}\nexports.encode = encode;\nfunction decode(buffer) {\n  typeforce(check, buffer);\n  return bscript.decompile(buffer)[1].slice(4, 36);\n}\nexports.decode = decode;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\n// {signature} {pubKey}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nfunction isCompressedCanonicalPubKey(pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33;\n}\nfunction check(script) {\n  const chunks = bscript.decompile(script);\n  return (\n    chunks.length === 2 &&\n    bscript.isCanonicalScriptSignature(chunks[0]) &&\n    isCompressedCanonicalPubKey(chunks[1])\n  );\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'witnessPubKeyHash input';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\n// <scriptSig> {serialized scriptPubKey script}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst typeforce = require('typeforce');\nconst p2ms = require('../multisig');\nconst p2pk = require('../pubkey');\nconst p2pkh = require('../pubkeyhash');\nfunction check(chunks, allowIncomplete) {\n  typeforce(typeforce.Array, chunks);\n  if (chunks.length < 1) return false;\n  const witnessScript = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(witnessScript)) return false;\n  const witnessScriptChunks = bscript.decompile(witnessScript);\n  // is witnessScript a valid script?\n  if (!witnessScriptChunks || witnessScriptChunks.length === 0) return false;\n  const witnessRawScriptSig = bscript.compile(chunks.slice(0, -1));\n  // match types\n  if (\n    p2pkh.input.check(witnessRawScriptSig) &&\n    p2pkh.output.check(witnessScriptChunks)\n  )\n    return true;\n  if (\n    p2ms.input.check(witnessRawScriptSig, allowIncomplete) &&\n    p2ms.output.check(witnessScriptChunks)\n  )\n    return true;\n  if (\n    p2pk.input.check(witnessRawScriptSig) &&\n    p2pk.output.check(witnessScriptChunks)\n  )\n    return true;\n  return false;\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'witnessScriptHash input';\n};\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst input = require('./input');\nexports.input = input;\nconst output = require('./output');\nexports.output = output;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst script_1 = require('./script');\nconst multisig = require('./templates/multisig');\nconst nullData = require('./templates/nulldata');\nconst pubKey = require('./templates/pubkey');\nconst pubKeyHash = require('./templates/pubkeyhash');\nconst scriptHash = require('./templates/scripthash');\nconst witnessCommitment = require('./templates/witnesscommitment');\nconst witnessPubKeyHash = require('./templates/witnesspubkeyhash');\nconst witnessScriptHash = require('./templates/witnessscripthash');\nconst types = {\n  P2MS: 'multisig',\n  NONSTANDARD: 'nonstandard',\n  NULLDATA: 'nulldata',\n  P2PK: 'pubkey',\n  P2PKH: 'pubkeyhash',\n  P2SH: 'scripthash',\n  P2WPKH: 'witnesspubkeyhash',\n  P2WSH: 'witnessscripthash',\n  WITNESS_COMMITMENT: 'witnesscommitment',\n};\nexports.types = types;\nfunction classifyOutput(script) {\n  if (witnessPubKeyHash.output.check(script)) return types.P2WPKH;\n  if (witnessScriptHash.output.check(script)) return types.P2WSH;\n  if (pubKeyHash.output.check(script)) return types.P2PKH;\n  if (scriptHash.output.check(script)) return types.P2SH;\n  // XXX: optimization, below functions .decompile before use\n  const chunks = script_1.decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (multisig.output.check(chunks)) return types.P2MS;\n  if (pubKey.output.check(chunks)) return types.P2PK;\n  if (witnessCommitment.output.check(chunks)) return types.WITNESS_COMMITMENT;\n  if (nullData.output.check(chunks)) return types.NULLDATA;\n  return types.NONSTANDARD;\n}\nexports.output = classifyOutput;\nfunction classifyInput(script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  const chunks = script_1.decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (pubKeyHash.input.check(chunks)) return types.P2PKH;\n  if (scriptHash.input.check(chunks, allowIncomplete)) return types.P2SH;\n  if (multisig.input.check(chunks, allowIncomplete)) return types.P2MS;\n  if (pubKey.input.check(chunks)) return types.P2PK;\n  return types.NONSTANDARD;\n}\nexports.input = classifyInput;\nfunction classifyWitness(script, allowIncomplete) {\n  // XXX: optimization, below functions .decompile before use\n  const chunks = script_1.decompile(script);\n  if (!chunks) throw new TypeError('Invalid script');\n  if (witnessPubKeyHash.input.check(chunks)) return types.P2WPKH;\n  if (witnessScriptHash.input.check(chunks, allowIncomplete))\n    return types.P2WSH;\n  return types.NONSTANDARD;\n}\nexports.witness = classifyWitness;\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst baddress = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst classify = require('./classify');\nconst bcrypto = require('./crypto');\nconst ECPair = require('./ecpair');\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst script_1 = require('./script');\nconst transaction_1 = require('./transaction');\nconst types = require('./types');\nconst typeforce = require('typeforce');\nconst SCRIPT_TYPES = classify.types;\nconst PREVOUT_TYPES = new Set([\n  // Raw\n  'p2pkh',\n  'p2pk',\n  'p2wpkh',\n  'p2ms',\n  // P2SH wrapped\n  'p2sh-p2pkh',\n  'p2sh-p2pk',\n  'p2sh-p2wpkh',\n  'p2sh-p2ms',\n  // P2WSH wrapped\n  'p2wsh-p2pkh',\n  'p2wsh-p2pk',\n  'p2wsh-p2ms',\n  // P2SH-P2WSH wrapper\n  'p2sh-p2wsh-p2pkh',\n  'p2sh-p2wsh-p2pk',\n  'p2sh-p2wsh-p2ms',\n]);\nfunction tfMessage(type, value, message) {\n  try {\n    typeforce(type, value);\n  } catch (err) {\n    throw new Error(message);\n  }\n}\nfunction txIsString(tx) {\n  return typeof tx === 'string' || tx instanceof String;\n}\nfunction txIsTransaction(tx) {\n  return tx instanceof transaction_1.Transaction;\n}\nclass TransactionBuilder {\n  // WARNING: maximumFeeRate is __NOT__ to be relied on,\n  //          it's just another potential safety mechanism (safety in-depth)\n  constructor(network = networks.bitcoin, maximumFeeRate = 2500) {\n    this.network = network;\n    this.maximumFeeRate = maximumFeeRate;\n    this.__PREV_TX_SET = {};\n    this.__INPUTS = [];\n    this.__TX = new transaction_1.Transaction();\n    this.__TX.version = 2;\n    this.__USE_LOW_R = false;\n    console.warn(\n      'Deprecation Warning: TransactionBuilder will be removed in the future. ' +\n        '(v6.x.x or later) Please use the Psbt class instead. Examples of usage ' +\n        'are available in the transactions-psbt.js integration test file on our ' +\n        'Github. A high level explanation is available in the psbt.ts and psbt.js ' +\n        'files as well.',\n    );\n  }\n  static fromTransaction(transaction, network) {\n    const txb = new TransactionBuilder(network);\n    // Copy transaction fields\n    txb.setVersion(transaction.version);\n    txb.setLockTime(transaction.locktime);\n    // Copy outputs (done first to avoid signature invalidation)\n    transaction.outs.forEach(txOut => {\n      txb.addOutput(txOut.script, txOut.value);\n    });\n    // Copy inputs\n    transaction.ins.forEach(txIn => {\n      txb.__addInputUnsafe(txIn.hash, txIn.index, {\n        sequence: txIn.sequence,\n        script: txIn.script,\n        witness: txIn.witness,\n      });\n    });\n    // fix some things not possible through the public API\n    txb.__INPUTS.forEach((input, i) => {\n      fixMultisigOrder(input, transaction, i);\n    });\n    return txb;\n  }\n  setLowR(setting) {\n    typeforce(typeforce.maybe(typeforce.Boolean), setting);\n    if (setting === undefined) {\n      setting = true;\n    }\n    this.__USE_LOW_R = setting;\n    return setting;\n  }\n  setLockTime(locktime) {\n    typeforce(types.UInt32, locktime);\n    // if any signatures exist, throw\n    if (\n      this.__INPUTS.some(input => {\n        if (!input.signatures) return false;\n        return input.signatures.some(s => s !== undefined);\n      })\n    ) {\n      throw new Error('No, this would invalidate signatures');\n    }\n    this.__TX.locktime = locktime;\n  }\n  setVersion(version) {\n    typeforce(types.UInt32, version);\n    // XXX: this might eventually become more complex depending on what the versions represent\n    this.__TX.version = version;\n  }\n  addInput(txHash, vout, sequence, prevOutScript) {\n    if (!this.__canModifyInputs()) {\n      throw new Error('No, this would invalidate signatures');\n    }\n    let value;\n    // is it a hex string?\n    if (txIsString(txHash)) {\n      // transaction hashs's are displayed in reverse order, un-reverse it\n      txHash = bufferutils_1.reverseBuffer(Buffer.from(txHash, 'hex'));\n      // is it a Transaction object?\n    } else if (txIsTransaction(txHash)) {\n      const txOut = txHash.outs[vout];\n      prevOutScript = txOut.script;\n      value = txOut.value;\n      txHash = txHash.getHash(false);\n    }\n    return this.__addInputUnsafe(txHash, vout, {\n      sequence,\n      prevOutScript,\n      value,\n    });\n  }\n  addOutput(scriptPubKey, value) {\n    if (!this.__canModifyOutputs()) {\n      throw new Error('No, this would invalidate signatures');\n    }\n    // Attempt to get a script if it's a base58 or bech32 address string\n    if (typeof scriptPubKey === 'string') {\n      scriptPubKey = baddress.toOutputScript(scriptPubKey, this.network);\n    }\n    return this.__TX.addOutput(scriptPubKey, value);\n  }\n  build() {\n    return this.__build(false);\n  }\n  buildIncomplete() {\n    return this.__build(true);\n  }\n  sign(\n    signParams,\n    keyPair,\n    redeemScript,\n    hashType,\n    witnessValue,\n    witnessScript,\n  ) {\n    trySign(\n      getSigningData(\n        this.network,\n        this.__INPUTS,\n        this.__needsOutputs.bind(this),\n        this.__TX,\n        signParams,\n        keyPair,\n        redeemScript,\n        hashType,\n        witnessValue,\n        witnessScript,\n        this.__USE_LOW_R,\n      ),\n    );\n  }\n  __addInputUnsafe(txHash, vout, options) {\n    if (transaction_1.Transaction.isCoinbaseHash(txHash)) {\n      throw new Error('coinbase inputs not supported');\n    }\n    const prevTxOut = txHash.toString('hex') + ':' + vout;\n    if (this.__PREV_TX_SET[prevTxOut] !== undefined)\n      throw new Error('Duplicate TxOut: ' + prevTxOut);\n    let input = {};\n    // derive what we can from the scriptSig\n    if (options.script !== undefined) {\n      input = expandInput(options.script, options.witness || []);\n    }\n    // if an input value was given, retain it\n    if (options.value !== undefined) {\n      input.value = options.value;\n    }\n    // derive what we can from the previous transactions output script\n    if (!input.prevOutScript && options.prevOutScript) {\n      let prevOutType;\n      if (!input.pubkeys && !input.signatures) {\n        const expanded = expandOutput(options.prevOutScript);\n        if (expanded.pubkeys) {\n          input.pubkeys = expanded.pubkeys;\n          input.signatures = expanded.signatures;\n        }\n        prevOutType = expanded.type;\n      }\n      input.prevOutScript = options.prevOutScript;\n      input.prevOutType = prevOutType || classify.output(options.prevOutScript);\n    }\n    const vin = this.__TX.addInput(\n      txHash,\n      vout,\n      options.sequence,\n      options.scriptSig,\n    );\n    this.__INPUTS[vin] = input;\n    this.__PREV_TX_SET[prevTxOut] = true;\n    return vin;\n  }\n  __build(allowIncomplete) {\n    if (!allowIncomplete) {\n      if (!this.__TX.ins.length) throw new Error('Transaction has no inputs');\n      if (!this.__TX.outs.length) throw new Error('Transaction has no outputs');\n    }\n    const tx = this.__TX.clone();\n    // create script signatures from inputs\n    this.__INPUTS.forEach((input, i) => {\n      if (!input.prevOutType && !allowIncomplete)\n        throw new Error('Transaction is not complete');\n      const result = build(input.prevOutType, input, allowIncomplete);\n      if (!result) {\n        if (!allowIncomplete && input.prevOutType === SCRIPT_TYPES.NONSTANDARD)\n          throw new Error('Unknown input type');\n        if (!allowIncomplete) throw new Error('Not enough information');\n        return;\n      }\n      tx.setInputScript(i, result.input);\n      tx.setWitness(i, result.witness);\n    });\n    if (!allowIncomplete) {\n      // do not rely on this, its merely a last resort\n      if (this.__overMaximumFees(tx.virtualSize())) {\n        throw new Error('Transaction has absurd fees');\n      }\n    }\n    return tx;\n  }\n  __canModifyInputs() {\n    return this.__INPUTS.every(input => {\n      if (!input.signatures) return true;\n      return input.signatures.every(signature => {\n        if (!signature) return true;\n        const hashType = signatureHashType(signature);\n        // if SIGHASH_ANYONECANPAY is set, signatures would not\n        // be invalidated by more inputs\n        return (\n          (hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY) !== 0\n        );\n      });\n    });\n  }\n  __needsOutputs(signingHashType) {\n    if (signingHashType === transaction_1.Transaction.SIGHASH_ALL) {\n      return this.__TX.outs.length === 0;\n    }\n    // if inputs are being signed with SIGHASH_NONE, we don't strictly need outputs\n    // .build() will fail, but .buildIncomplete() is OK\n    return (\n      this.__TX.outs.length === 0 &&\n      this.__INPUTS.some(input => {\n        if (!input.signatures) return false;\n        return input.signatures.some(signature => {\n          if (!signature) return false; // no signature, no issue\n          const hashType = signatureHashType(signature);\n          if (hashType & transaction_1.Transaction.SIGHASH_NONE) return false; // SIGHASH_NONE doesn't care about outputs\n          return true; // SIGHASH_* does care\n        });\n      })\n    );\n  }\n  __canModifyOutputs() {\n    const nInputs = this.__TX.ins.length;\n    const nOutputs = this.__TX.outs.length;\n    return this.__INPUTS.every(input => {\n      if (input.signatures === undefined) return true;\n      return input.signatures.every(signature => {\n        if (!signature) return true;\n        const hashType = signatureHashType(signature);\n        const hashTypeMod = hashType & 0x1f;\n        if (hashTypeMod === transaction_1.Transaction.SIGHASH_NONE) return true;\n        if (hashTypeMod === transaction_1.Transaction.SIGHASH_SINGLE) {\n          // if SIGHASH_SINGLE is set, and nInputs > nOutputs\n          // some signatures would be invalidated by the addition\n          // of more outputs\n          return nInputs <= nOutputs;\n        }\n        return false;\n      });\n    });\n  }\n  __overMaximumFees(bytes) {\n    // not all inputs will have .value defined\n    const incoming = this.__INPUTS.reduce((a, x) => a + (x.value >>> 0), 0);\n    // but all outputs do, and if we have any input value\n    // we can immediately determine if the outputs are too small\n    const outgoing = this.__TX.outs.reduce((a, x) => a + x.value, 0);\n    const fee = incoming - outgoing;\n    const feeRate = fee / bytes;\n    return feeRate > this.maximumFeeRate;\n  }\n}\nexports.TransactionBuilder = TransactionBuilder;\nfunction expandInput(scriptSig, witnessStack, type, scriptPubKey) {\n  if (scriptSig.length === 0 && witnessStack.length === 0) return {};\n  if (!type) {\n    let ssType = classify.input(scriptSig, true);\n    let wsType = classify.witness(witnessStack, true);\n    if (ssType === SCRIPT_TYPES.NONSTANDARD) ssType = undefined;\n    if (wsType === SCRIPT_TYPES.NONSTANDARD) wsType = undefined;\n    type = ssType || wsType;\n  }\n  switch (type) {\n    case SCRIPT_TYPES.P2WPKH: {\n      const { output, pubkey, signature } = payments.p2wpkh({\n        witness: witnessStack,\n      });\n      return {\n        prevOutScript: output,\n        prevOutType: SCRIPT_TYPES.P2WPKH,\n        pubkeys: [pubkey],\n        signatures: [signature],\n      };\n    }\n    case SCRIPT_TYPES.P2PKH: {\n      const { output, pubkey, signature } = payments.p2pkh({\n        input: scriptSig,\n      });\n      return {\n        prevOutScript: output,\n        prevOutType: SCRIPT_TYPES.P2PKH,\n        pubkeys: [pubkey],\n        signatures: [signature],\n      };\n    }\n    case SCRIPT_TYPES.P2PK: {\n      const { signature } = payments.p2pk({ input: scriptSig });\n      return {\n        prevOutType: SCRIPT_TYPES.P2PK,\n        pubkeys: [undefined],\n        signatures: [signature],\n      };\n    }\n    case SCRIPT_TYPES.P2MS: {\n      const { m, pubkeys, signatures } = payments.p2ms(\n        {\n          input: scriptSig,\n          output: scriptPubKey,\n        },\n        { allowIncomplete: true },\n      );\n      return {\n        prevOutType: SCRIPT_TYPES.P2MS,\n        pubkeys,\n        signatures,\n        maxSignatures: m,\n      };\n    }\n  }\n  if (type === SCRIPT_TYPES.P2SH) {\n    const { output, redeem } = payments.p2sh({\n      input: scriptSig,\n      witness: witnessStack,\n    });\n    const outputType = classify.output(redeem.output);\n    const expanded = expandInput(\n      redeem.input,\n      redeem.witness,\n      outputType,\n      redeem.output,\n    );\n    if (!expanded.prevOutType) return {};\n    return {\n      prevOutScript: output,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      redeemScript: redeem.output,\n      redeemScriptType: expanded.prevOutType,\n      witnessScript: expanded.witnessScript,\n      witnessScriptType: expanded.witnessScriptType,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n    };\n  }\n  if (type === SCRIPT_TYPES.P2WSH) {\n    const { output, redeem } = payments.p2wsh({\n      input: scriptSig,\n      witness: witnessStack,\n    });\n    const outputType = classify.output(redeem.output);\n    let expanded;\n    if (outputType === SCRIPT_TYPES.P2WPKH) {\n      expanded = expandInput(redeem.input, redeem.witness, outputType);\n    } else {\n      expanded = expandInput(\n        bscript.compile(redeem.witness),\n        [],\n        outputType,\n        redeem.output,\n      );\n    }\n    if (!expanded.prevOutType) return {};\n    return {\n      prevOutScript: output,\n      prevOutType: SCRIPT_TYPES.P2WSH,\n      witnessScript: redeem.output,\n      witnessScriptType: expanded.prevOutType,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n    };\n  }\n  return {\n    prevOutType: SCRIPT_TYPES.NONSTANDARD,\n    prevOutScript: scriptSig,\n  };\n}\n// could be done in expandInput, but requires the original Transaction for hashForSignature\nfunction fixMultisigOrder(input, transaction, vin) {\n  if (input.redeemScriptType !== SCRIPT_TYPES.P2MS || !input.redeemScript)\n    return;\n  if (input.pubkeys.length === input.signatures.length) return;\n  const unmatched = input.signatures.concat();\n  input.signatures = input.pubkeys.map(pubKey => {\n    const keyPair = ECPair.fromPublicKey(pubKey);\n    let match;\n    // check for a signature\n    unmatched.some((signature, i) => {\n      // skip if undefined || OP_0\n      if (!signature) return false;\n      // TODO: avoid O(n) hashForSignature\n      const parsed = bscript.signature.decode(signature);\n      const hash = transaction.hashForSignature(\n        vin,\n        input.redeemScript,\n        parsed.hashType,\n      );\n      // skip if signature does not match pubKey\n      if (!keyPair.verify(hash, parsed.signature)) return false;\n      // remove matched signature from unmatched\n      unmatched[i] = undefined;\n      match = signature;\n      return true;\n    });\n    return match;\n  });\n}\nfunction expandOutput(script, ourPubKey) {\n  typeforce(types.Buffer, script);\n  const type = classify.output(script);\n  switch (type) {\n    case SCRIPT_TYPES.P2PKH: {\n      if (!ourPubKey) return { type };\n      // does our hash160(pubKey) match the output scripts?\n      const pkh1 = payments.p2pkh({ output: script }).hash;\n      const pkh2 = bcrypto.hash160(ourPubKey);\n      if (!pkh1.equals(pkh2)) return { type };\n      return {\n        type,\n        pubkeys: [ourPubKey],\n        signatures: [undefined],\n      };\n    }\n    case SCRIPT_TYPES.P2WPKH: {\n      if (!ourPubKey) return { type };\n      // does our hash160(pubKey) match the output scripts?\n      const wpkh1 = payments.p2wpkh({ output: script }).hash;\n      const wpkh2 = bcrypto.hash160(ourPubKey);\n      if (!wpkh1.equals(wpkh2)) return { type };\n      return {\n        type,\n        pubkeys: [ourPubKey],\n        signatures: [undefined],\n      };\n    }\n    case SCRIPT_TYPES.P2PK: {\n      const p2pk = payments.p2pk({ output: script });\n      return {\n        type,\n        pubkeys: [p2pk.pubkey],\n        signatures: [undefined],\n      };\n    }\n    case SCRIPT_TYPES.P2MS: {\n      const p2ms = payments.p2ms({ output: script });\n      return {\n        type,\n        pubkeys: p2ms.pubkeys,\n        signatures: p2ms.pubkeys.map(() => undefined),\n        maxSignatures: p2ms.m,\n      };\n    }\n  }\n  return { type };\n}\nfunction prepareInput(input, ourPubKey, redeemScript, witnessScript) {\n  if (redeemScript && witnessScript) {\n    const p2wsh = payments.p2wsh({\n      redeem: { output: witnessScript },\n    });\n    const p2wshAlt = payments.p2wsh({ output: redeemScript });\n    const p2sh = payments.p2sh({ redeem: { output: redeemScript } });\n    const p2shAlt = payments.p2sh({ redeem: p2wsh });\n    // enforces P2SH(P2WSH(...))\n    if (!p2wsh.hash.equals(p2wshAlt.hash))\n      throw new Error('Witness script inconsistent with prevOutScript');\n    if (!p2sh.hash.equals(p2shAlt.hash))\n      throw new Error('Redeem script inconsistent with prevOutScript');\n    const expanded = expandOutput(p2wsh.redeem.output, ourPubKey);\n    if (!expanded.pubkeys)\n      throw new Error(\n        expanded.type +\n          ' not supported as witnessScript (' +\n          bscript.toASM(witnessScript) +\n          ')',\n      );\n    if (input.signatures && input.signatures.some(x => x !== undefined)) {\n      expanded.signatures = input.signatures;\n    }\n    const signScript = witnessScript;\n    if (expanded.type === SCRIPT_TYPES.P2WPKH)\n      throw new Error('P2SH(P2WSH(P2WPKH)) is a consensus failure');\n    return {\n      redeemScript,\n      redeemScriptType: SCRIPT_TYPES.P2WSH,\n      witnessScript,\n      witnessScriptType: expanded.type,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      prevOutScript: p2sh.output,\n      hasWitness: true,\n      signScript,\n      signType: expanded.type,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n      maxSignatures: expanded.maxSignatures,\n    };\n  }\n  if (redeemScript) {\n    const p2sh = payments.p2sh({ redeem: { output: redeemScript } });\n    if (input.prevOutScript) {\n      let p2shAlt;\n      try {\n        p2shAlt = payments.p2sh({ output: input.prevOutScript });\n      } catch (e) {\n        throw new Error('PrevOutScript must be P2SH');\n      }\n      if (!p2sh.hash.equals(p2shAlt.hash))\n        throw new Error('Redeem script inconsistent with prevOutScript');\n    }\n    const expanded = expandOutput(p2sh.redeem.output, ourPubKey);\n    if (!expanded.pubkeys)\n      throw new Error(\n        expanded.type +\n          ' not supported as redeemScript (' +\n          bscript.toASM(redeemScript) +\n          ')',\n      );\n    if (input.signatures && input.signatures.some(x => x !== undefined)) {\n      expanded.signatures = input.signatures;\n    }\n    let signScript = redeemScript;\n    if (expanded.type === SCRIPT_TYPES.P2WPKH) {\n      signScript = payments.p2pkh({ pubkey: expanded.pubkeys[0] }).output;\n    }\n    return {\n      redeemScript,\n      redeemScriptType: expanded.type,\n      prevOutType: SCRIPT_TYPES.P2SH,\n      prevOutScript: p2sh.output,\n      hasWitness: expanded.type === SCRIPT_TYPES.P2WPKH,\n      signScript,\n      signType: expanded.type,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n      maxSignatures: expanded.maxSignatures,\n    };\n  }\n  if (witnessScript) {\n    const p2wsh = payments.p2wsh({ redeem: { output: witnessScript } });\n    if (input.prevOutScript) {\n      const p2wshAlt = payments.p2wsh({ output: input.prevOutScript });\n      if (!p2wsh.hash.equals(p2wshAlt.hash))\n        throw new Error('Witness script inconsistent with prevOutScript');\n    }\n    const expanded = expandOutput(p2wsh.redeem.output, ourPubKey);\n    if (!expanded.pubkeys)\n      throw new Error(\n        expanded.type +\n          ' not supported as witnessScript (' +\n          bscript.toASM(witnessScript) +\n          ')',\n      );\n    if (input.signatures && input.signatures.some(x => x !== undefined)) {\n      expanded.signatures = input.signatures;\n    }\n    const signScript = witnessScript;\n    if (expanded.type === SCRIPT_TYPES.P2WPKH)\n      throw new Error('P2WSH(P2WPKH) is a consensus failure');\n    return {\n      witnessScript,\n      witnessScriptType: expanded.type,\n      prevOutType: SCRIPT_TYPES.P2WSH,\n      prevOutScript: p2wsh.output,\n      hasWitness: true,\n      signScript,\n      signType: expanded.type,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n      maxSignatures: expanded.maxSignatures,\n    };\n  }\n  if (input.prevOutType && input.prevOutScript) {\n    // embedded scripts are not possible without extra information\n    if (input.prevOutType === SCRIPT_TYPES.P2SH)\n      throw new Error(\n        'PrevOutScript is ' + input.prevOutType + ', requires redeemScript',\n      );\n    if (input.prevOutType === SCRIPT_TYPES.P2WSH)\n      throw new Error(\n        'PrevOutScript is ' + input.prevOutType + ', requires witnessScript',\n      );\n    if (!input.prevOutScript) throw new Error('PrevOutScript is missing');\n    const expanded = expandOutput(input.prevOutScript, ourPubKey);\n    if (!expanded.pubkeys)\n      throw new Error(\n        expanded.type +\n          ' not supported (' +\n          bscript.toASM(input.prevOutScript) +\n          ')',\n      );\n    if (input.signatures && input.signatures.some(x => x !== undefined)) {\n      expanded.signatures = input.signatures;\n    }\n    let signScript = input.prevOutScript;\n    if (expanded.type === SCRIPT_TYPES.P2WPKH) {\n      signScript = payments.p2pkh({ pubkey: expanded.pubkeys[0] }).output;\n    }\n    return {\n      prevOutType: expanded.type,\n      prevOutScript: input.prevOutScript,\n      hasWitness: expanded.type === SCRIPT_TYPES.P2WPKH,\n      signScript,\n      signType: expanded.type,\n      pubkeys: expanded.pubkeys,\n      signatures: expanded.signatures,\n      maxSignatures: expanded.maxSignatures,\n    };\n  }\n  const prevOutScript = payments.p2pkh({ pubkey: ourPubKey }).output;\n  return {\n    prevOutType: SCRIPT_TYPES.P2PKH,\n    prevOutScript,\n    hasWitness: false,\n    signScript: prevOutScript,\n    signType: SCRIPT_TYPES.P2PKH,\n    pubkeys: [ourPubKey],\n    signatures: [undefined],\n  };\n}\nfunction build(type, input, allowIncomplete) {\n  const pubkeys = input.pubkeys || [];\n  let signatures = input.signatures || [];\n  switch (type) {\n    case SCRIPT_TYPES.P2PKH: {\n      if (pubkeys.length === 0) break;\n      if (signatures.length === 0) break;\n      return payments.p2pkh({ pubkey: pubkeys[0], signature: signatures[0] });\n    }\n    case SCRIPT_TYPES.P2WPKH: {\n      if (pubkeys.length === 0) break;\n      if (signatures.length === 0) break;\n      return payments.p2wpkh({ pubkey: pubkeys[0], signature: signatures[0] });\n    }\n    case SCRIPT_TYPES.P2PK: {\n      if (pubkeys.length === 0) break;\n      if (signatures.length === 0) break;\n      return payments.p2pk({ signature: signatures[0] });\n    }\n    case SCRIPT_TYPES.P2MS: {\n      const m = input.maxSignatures;\n      if (allowIncomplete) {\n        signatures = signatures.map(x => x || script_1.OPS.OP_0);\n      } else {\n        signatures = signatures.filter(x => x);\n      }\n      // if the transaction is not not complete (complete), or if signatures.length === m, validate\n      // otherwise, the number of OP_0's may be >= m, so don't validate (boo)\n      const validate = !allowIncomplete || m === signatures.length;\n      return payments.p2ms(\n        { m, pubkeys, signatures },\n        { allowIncomplete, validate },\n      );\n    }\n    case SCRIPT_TYPES.P2SH: {\n      const redeem = build(input.redeemScriptType, input, allowIncomplete);\n      if (!redeem) return;\n      return payments.p2sh({\n        redeem: {\n          output: redeem.output || input.redeemScript,\n          input: redeem.input,\n          witness: redeem.witness,\n        },\n      });\n    }\n    case SCRIPT_TYPES.P2WSH: {\n      const redeem = build(input.witnessScriptType, input, allowIncomplete);\n      if (!redeem) return;\n      return payments.p2wsh({\n        redeem: {\n          output: input.witnessScript,\n          input: redeem.input,\n          witness: redeem.witness,\n        },\n      });\n    }\n  }\n}\nfunction canSign(input) {\n  return (\n    input.signScript !== undefined &&\n    input.signType !== undefined &&\n    input.pubkeys !== undefined &&\n    input.signatures !== undefined &&\n    input.signatures.length === input.pubkeys.length &&\n    input.pubkeys.length > 0 &&\n    (input.hasWitness === false || input.value !== undefined)\n  );\n}\nfunction signatureHashType(buffer) {\n  return buffer.readUInt8(buffer.length - 1);\n}\nfunction checkSignArgs(inputs, signParams) {\n  if (!PREVOUT_TYPES.has(signParams.prevOutScriptType)) {\n    throw new TypeError(\n      `Unknown prevOutScriptType \"${signParams.prevOutScriptType}\"`,\n    );\n  }\n  tfMessage(\n    typeforce.Number,\n    signParams.vin,\n    `sign must include vin parameter as Number (input index)`,\n  );\n  tfMessage(\n    types.Signer,\n    signParams.keyPair,\n    `sign must include keyPair parameter as Signer interface`,\n  );\n  tfMessage(\n    typeforce.maybe(typeforce.Number),\n    signParams.hashType,\n    `sign hashType parameter must be a number`,\n  );\n  const prevOutType = (inputs[signParams.vin] || []).prevOutType;\n  const posType = signParams.prevOutScriptType;\n  switch (posType) {\n    case 'p2pkh':\n      if (prevOutType && prevOutType !== 'pubkeyhash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type p2pkh: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.redeemScript,\n        `${posType} requires NO redeemScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessValue,\n        `${posType} requires NO witnessValue`,\n      );\n      break;\n    case 'p2pk':\n      if (prevOutType && prevOutType !== 'pubkey') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type p2pk: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.redeemScript,\n        `${posType} requires NO redeemScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessValue,\n        `${posType} requires NO witnessValue`,\n      );\n      break;\n    case 'p2wpkh':\n      if (prevOutType && prevOutType !== 'witnesspubkeyhash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type p2wpkh: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.redeemScript,\n        `${posType} requires NO redeemScript`,\n      );\n      tfMessage(\n        types.Satoshi,\n        signParams.witnessValue,\n        `${posType} requires witnessValue`,\n      );\n      break;\n    case 'p2ms':\n      if (prevOutType && prevOutType !== 'multisig') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type p2ms: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.redeemScript,\n        `${posType} requires NO redeemScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessValue,\n        `${posType} requires NO witnessValue`,\n      );\n      break;\n    case 'p2sh-p2wpkh':\n      if (prevOutType && prevOutType !== 'scripthash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type p2sh-p2wpkh: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.Buffer,\n        signParams.redeemScript,\n        `${posType} requires redeemScript`,\n      );\n      tfMessage(\n        types.Satoshi,\n        signParams.witnessValue,\n        `${posType} requires witnessValue`,\n      );\n      break;\n    case 'p2sh-p2ms':\n    case 'p2sh-p2pk':\n    case 'p2sh-p2pkh':\n      if (prevOutType && prevOutType !== 'scripthash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type ${posType}: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessScript,\n        `${posType} requires NO witnessScript`,\n      );\n      tfMessage(\n        typeforce.Buffer,\n        signParams.redeemScript,\n        `${posType} requires redeemScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.witnessValue,\n        `${posType} requires NO witnessValue`,\n      );\n      break;\n    case 'p2wsh-p2ms':\n    case 'p2wsh-p2pk':\n    case 'p2wsh-p2pkh':\n      if (prevOutType && prevOutType !== 'witnessscripthash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type ${posType}: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.Buffer,\n        signParams.witnessScript,\n        `${posType} requires witnessScript`,\n      );\n      tfMessage(\n        typeforce.value(undefined),\n        signParams.redeemScript,\n        `${posType} requires NO redeemScript`,\n      );\n      tfMessage(\n        types.Satoshi,\n        signParams.witnessValue,\n        `${posType} requires witnessValue`,\n      );\n      break;\n    case 'p2sh-p2wsh-p2ms':\n    case 'p2sh-p2wsh-p2pk':\n    case 'p2sh-p2wsh-p2pkh':\n      if (prevOutType && prevOutType !== 'scripthash') {\n        throw new TypeError(\n          `input #${signParams.vin} is not of type ${posType}: ${prevOutType}`,\n        );\n      }\n      tfMessage(\n        typeforce.Buffer,\n        signParams.witnessScript,\n        `${posType} requires witnessScript`,\n      );\n      tfMessage(\n        typeforce.Buffer,\n        signParams.redeemScript,\n        `${posType} requires witnessScript`,\n      );\n      tfMessage(\n        types.Satoshi,\n        signParams.witnessValue,\n        `${posType} requires witnessScript`,\n      );\n      break;\n  }\n}\nfunction trySign({\n  input,\n  ourPubKey,\n  keyPair,\n  signatureHash,\n  hashType,\n  useLowR,\n}) {\n  // enforce in order signing of public keys\n  let signed = false;\n  for (const [i, pubKey] of input.pubkeys.entries()) {\n    if (!ourPubKey.equals(pubKey)) continue;\n    if (input.signatures[i]) throw new Error('Signature already exists');\n    // TODO: add tests\n    if (ourPubKey.length !== 33 && input.hasWitness) {\n      throw new Error(\n        'BIP143 rejects uncompressed public keys in P2WPKH or P2WSH',\n      );\n    }\n    const signature = keyPair.sign(signatureHash, useLowR);\n    input.signatures[i] = bscript.signature.encode(signature, hashType);\n    signed = true;\n  }\n  if (!signed) throw new Error('Key pair cannot sign for this input');\n}\nfunction getSigningData(\n  network,\n  inputs,\n  needsOutputs,\n  tx,\n  signParams,\n  keyPair,\n  redeemScript,\n  hashType,\n  witnessValue,\n  witnessScript,\n  useLowR,\n) {\n  let vin;\n  if (typeof signParams === 'number') {\n    console.warn(\n      'DEPRECATED: TransactionBuilder sign method arguments ' +\n        'will change in v6, please use the TxbSignArg interface',\n    );\n    vin = signParams;\n  } else if (typeof signParams === 'object') {\n    checkSignArgs(inputs, signParams);\n    ({\n      vin,\n      keyPair,\n      redeemScript,\n      hashType,\n      witnessValue,\n      witnessScript,\n    } = signParams);\n  } else {\n    throw new TypeError(\n      'TransactionBuilder sign first arg must be TxbSignArg or number',\n    );\n  }\n  if (keyPair === undefined) {\n    throw new Error('sign requires keypair');\n  }\n  // TODO: remove keyPair.network matching in 4.0.0\n  if (keyPair.network && keyPair.network !== network)\n    throw new TypeError('Inconsistent network');\n  if (!inputs[vin]) throw new Error('No input at index: ' + vin);\n  hashType = hashType || transaction_1.Transaction.SIGHASH_ALL;\n  if (needsOutputs(hashType)) throw new Error('Transaction needs outputs');\n  const input = inputs[vin];\n  // if redeemScript was previously provided, enforce consistency\n  if (\n    input.redeemScript !== undefined &&\n    redeemScript &&\n    !input.redeemScript.equals(redeemScript)\n  ) {\n    throw new Error('Inconsistent redeemScript');\n  }\n  const ourPubKey =\n    keyPair.publicKey || (keyPair.getPublicKey && keyPair.getPublicKey());\n  if (!canSign(input)) {\n    if (witnessValue !== undefined) {\n      if (input.value !== undefined && input.value !== witnessValue)\n        throw new Error('Input did not match witnessValue');\n      typeforce(types.Satoshi, witnessValue);\n      input.value = witnessValue;\n    }\n    if (!canSign(input)) {\n      const prepared = prepareInput(\n        input,\n        ourPubKey,\n        redeemScript,\n        witnessScript,\n      );\n      // updates inline\n      Object.assign(input, prepared);\n    }\n    if (!canSign(input)) throw Error(input.prevOutType + ' not supported');\n  }\n  // ready to sign\n  let signatureHash;\n  if (input.hasWitness) {\n    signatureHash = tx.hashForWitnessV0(\n      vin,\n      input.signScript,\n      input.value,\n      hashType,\n    );\n  } else {\n    signatureHash = tx.hashForSignature(vin, input.signScript, hashType);\n  }\n  return {\n    input,\n    ourPubKey,\n    keyPair,\n    signatureHash,\n    hashType,\n    useLowR: !!useLowR,\n  };\n}\n",
    "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bip32 = require('bip32');\nexports.bip32 = bip32;\nconst address = require('./address');\nexports.address = address;\nconst crypto = require('./crypto');\nexports.crypto = crypto;\nconst ECPair = require('./ecpair');\nexports.ECPair = ECPair;\nconst networks = require('./networks');\nexports.networks = networks;\nconst payments = require('./payments');\nexports.payments = payments;\nconst script = require('./script');\nexports.script = script;\nvar block_1 = require('./block');\nexports.Block = block_1.Block;\nvar psbt_1 = require('./psbt');\nexports.Psbt = psbt_1.Psbt;\nvar script_1 = require('./script');\nexports.opcodes = script_1.OPS;\nvar transaction_1 = require('./transaction');\nexports.Transaction = transaction_1.Transaction;\nvar transaction_builder_1 = require('./transaction_builder');\nexports.TransactionBuilder = transaction_builder_1.TransactionBuilder;\n",
    "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport semver from \"semver\";\nimport BtcNew from \"./BtcNew\";\nimport BtcOld from \"./BtcOld\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { AppClient } from \"./newops/appClient\";\nimport { serializeTransactionOutputs } from \"./serializeTransaction\";\nimport { splitTransaction } from \"./splitTransaction\";\nimport { signP2SHTransaction } from \"./signP2SHTransaction\";\nimport { checkIsBtcLegacy, getAppAndVersion } from \"./getAppAndVersion\";\n/**\n * @class Btc\n * @description Bitcoin API.\n * @param transport The transport layer used for communication.\n * @param scrambleKey This parameter is deprecated and no longer needed.\n * @param currency The currency to use, defaults to \"bitcoin\".\n * @example\n * import Btc from \"@ledgerhq/hw-app-btc\";\n * const btc = new Btc({ transport, currency: \"bitcoin\" });\n */\nexport default class Btc {\n    constructor({ transport, scrambleKey = \"BTC\", currency = \"bitcoin\", }) {\n        this._transport = transport;\n        this._transport.decorateAppAPIMethods(this, [\n            \"getWalletXpub\",\n            \"getWalletPublicKey\",\n            \"signP2SHTransaction\",\n            \"signMessage\",\n            \"createPaymentTransaction\",\n            \"getTrustedInput\",\n            \"getTrustedInputBIP143\",\n        ], scrambleKey);\n        this._impl = (() => {\n            switch (currency) {\n                case \"bitcoin\":\n                case \"bitcoin_testnet\":\n                case \"qtum\":\n                    // new APDU (nano app API) for currencies using app-bitcoin-new implementation\n                    return new BtcNew(new AppClient(this._transport));\n                default:\n                    // old APDU (legacy API) for currencies using legacy bitcoin app implementation\n                    return new BtcOld(this._transport);\n            }\n        })();\n    }\n    /**\n     * Get an XPUB with a ledger device\n     * @param arg derivation parameter\n     * - path: a BIP 32 path of the account level. (e.g. The derivation path `84'/0'/0'`\n     * follows the `purpose' / coin_type' / account'` standard, with purpose=84, coin_type=0, account=0)\n     * - xpubVersion: the XPUBVersion of the coin used. (refer to ledgerjs/packages/cryptoassets/src/currencies.ts\n     * for the XPUBVersion value if needed)\n     * @returns XPUB of the account\n     */\n    getWalletXpub(arg) {\n        return this.changeImplIfNecessary().then(impl => {\n            return impl.getWalletXpub(arg);\n        });\n    }\n    /**\n     * @param path a BIP 32 path (i.e. the `purpose’ / coin_type’ / account’ / change / address_index` standard)\n     * @param options an object with optional these fields:\n     *\n     * - verify (boolean) whether ask user to confirm the address on the device\n     *\n     * - format (\"legacy\" | \"p2sh\" | \"bech32\" | \"bech32m\" | \"cashaddr\") to use different bitcoin address formatter.\n     *\n     * NB The normal usage is to use:\n     *\n     * - legacy format with 44' paths\n     *\n     * - p2sh format with 49' paths\n     *\n     * - bech32 format with 84' paths\n     *\n     * - bech32m format with 86' paths\n     *\n     * - cashaddr in case of Bitcoin Cash\n     *\n     * @example\n     * btc.getWalletPublicKey(\"44'/0'/0'/0/0\").then(o => o.bitcoinAddress)\n     * btc.getWalletPublicKey(\"49'/0'/0'/0/0\", { format: \"p2sh\" }).then(o => o.bitcoinAddress)\n     */\n    getWalletPublicKey(path, opts) {\n        let options;\n        if (arguments.length > 2 || typeof opts === \"boolean\") {\n            console.warn(\"btc.getWalletPublicKey deprecated signature used. Please switch to getWalletPublicKey(path, { format, verify })\");\n            options = {\n                verify: !!opts,\n                // eslint-disable-next-line prefer-rest-params\n                format: arguments[2] ? \"p2sh\" : \"legacy\",\n            };\n        }\n        else {\n            options = opts || {};\n        }\n        return this.changeImplIfNecessary().then(impl => {\n            return impl.getWalletPublicKey(path, options);\n        });\n    }\n    /**\n     * You can sign a message according to the Bitcoin Signature format and retrieve v, r, s given the message and the BIP 32 path of the account to sign.\n     * @example\n     btc.signMessage(\"44'/60'/0'/0'/0\", Buffer.from(\"test\").toString(\"hex\")).then(function(result) {\n       var v = result['v'] + 27 + 4;\n       var signature = Buffer.from(v.toString(16) + result['r'] + result['s'], 'hex').toString('base64');\n       console.log(\"Signature : \" + signature);\n     }).catch(function(ex) {console.log(ex);});\n     */\n    signMessage(path, messageHex) {\n        return this.changeImplIfNecessary().then(impl => {\n            return impl.signMessage({\n                path,\n                messageHex,\n            });\n        });\n    }\n    /**\n     * To sign a transaction involving standard (P2PKH) inputs, call createTransaction with the following parameters\n     * @param inputs is an array of [ transaction, output_index, optional redeem script, optional sequence ] where\n     *\n     * * transaction is the previously computed transaction object for this UTXO\n     * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n     * * redeem script is the optional redeem script to use when consuming a Segregated Witness input\n     * * sequence is the sequence number to use for this input (when using RBF), or non present\n     * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n     * @param changePath is an optional BIP 32 path pointing to the path to the public key used to compute the change address\n     * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign, including leading vararg voutCount\n     * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n     * @param sigHashType is the hash type of the transaction to sign, or default (all)\n     * @param segwit is an optional boolean indicating wether to use segwit or not. This includes wrapped segwit.\n     * @param initialTimestamp is an optional timestamp of the function call to use for coins that necessitate timestamps only, (not the one that the tx will include)\n     * @param additionals list of additionnal options\n     *\n     * - \"bech32\" for spending native segwit outputs\n     * - \"bech32m\" for spending segwit v1+ outputs\n     * - \"abc\" for bch\n     * - \"gold\" for btg\n     * - \"decred\" for decred\n     * - \"zcash\" for zcash\n     * - \"bipxxx\" for using BIPxxx\n     * - \"sapling\" to indicate a zec transaction is supporting sapling (to be set over block 419200)\n     * @param expiryHeight is an optional Buffer for zec overwinter / sapling Txs\n     * @param useTrustedInputForSegwit trust inputs for segwit transactions. If app version >= 1.4.0 this should be true.\n     * @return the signed transaction ready to be broadcast\n     * @example\n    btc.createTransaction({\n     inputs: [ [tx1, 1] ],\n     associatedKeysets: [\"0'/0/0\"],\n     outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n    }).then(res => ...);\n     */\n    createPaymentTransaction(arg) {\n        if (arguments.length > 1) {\n            throw new Error(\"@ledgerhq/hw-app-btc: createPaymentTransaction multi argument signature is deprecated. please switch to named parameters.\");\n        }\n        return this.changeImplIfNecessary().then(impl => {\n            return impl.createPaymentTransaction(arg);\n        });\n    }\n    /**\n     * To obtain the signature of multisignature (P2SH) inputs, call signP2SHTransaction_async with the folowing parameters\n     * @param inputs is an array of [ transaction, output_index, redeem script, optional sequence ] where\n     * * transaction is the previously computed transaction object for this UTXO\n     * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n     * * redeem script is the mandatory redeem script associated to the current P2SH input\n     * * sequence is the sequence number to use for this input (when using RBF), or non present\n     * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n     * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign\n     * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n     * @param sigHashType is the hash type of the transaction to sign, or default (all)\n     * @return the signed transaction ready to be broadcast\n     * @example\n    btc.signP2SHTransaction({\n    inputs: [ [tx, 1, \"52210289b4a3ad52a919abd2bdd6920d8a6879b1e788c38aa76f0440a6f32a9f1996d02103a3393b1439d1693b063482c04bd40142db97bdf139eedd1b51ffb7070a37eac321030b9a409a1e476b0d5d17b804fcdb81cf30f9b99c6f3ae1178206e08bc500639853ae\"] ],\n    associatedKeysets: [\"0'/0/0\"],\n    outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n    }).then(result => ...);\n     */\n    signP2SHTransaction(arg) {\n        return signP2SHTransaction(this._transport, arg);\n    }\n    /**\n     * For each UTXO included in your transaction, create a transaction object from the raw serialized version of the transaction used in this UTXO.\n     * @param transactionHex a raw hexadecimal serialized transaction\n     * @param isSegwitSupported is a boolean indicating if the segwit is supported\n     * @param hasTimestamp is a boolean (peercoin includes timestamp in their transactions, others don't)\n     * @param hasExtraData is a boolean (komodo, zencash and zcash include extraData in their transactions, others don't)\n     * @param additionals list of additionnal options\n     * @return the transaction object deserialized from the raw hexadecimal transaction\n     * @example\n    const tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\n     */\n    splitTransaction(transactionHex, isSegwitSupported = false, hasTimestamp = false, hasExtraData = false, additionals = []) {\n        return splitTransaction(transactionHex, isSegwitSupported, hasTimestamp, hasExtraData, additionals);\n    }\n    /**\n     * Serialize a transaction's outputs to hexadecimal\n     * @example\n    const tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\n    const outputScript = btc.serializeTransactionOutputs(tx1).toString('hex');\n    */\n    serializeTransactionOutputs(t) {\n        return serializeTransactionOutputs(t);\n    }\n    /**\n     * Trusted input is the hash of a UTXO that needs to be signed\n     * For Legacy transactions, the app has some APDUs flows that do the amount check for an UTXO,\n     * by parsing the transaction that created this UTXO\n     */\n    getTrustedInput(indexLookup, transaction, additionals = []) {\n        return getTrustedInput(this._transport, indexLookup, transaction, additionals);\n    }\n    /**\n     * Trusted input is the hash of a UTXO that needs to be signed. BIP143 is used for Segwit inputs.\n     */\n    getTrustedInputBIP143(indexLookup, transaction, additionals = []) {\n        return getTrustedInputBIP143(this._transport, indexLookup, transaction, additionals);\n    }\n    changeImplIfNecessary() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // if BtcOld was instantiated, stick with it\n            if (this._impl instanceof BtcOld)\n                return this._impl;\n            const { name, version } = yield getAppAndVersion(this._transport);\n            const isBtcLegacy = yield (() => __awaiter(this, void 0, void 0, function* () {\n                switch (name) {\n                    case \"Bitcoin\":\n                    case \"Bitcoin Test\": {\n                        // we use the legacy protocol for versions below 2.1.0 of the Bitcoin app.\n                        return semver.lt(version, \"2.1.0\");\n                    }\n                    case \"Bitcoin Legacy\":\n                    case \"Bitcoin Test Legacy\":\n                        // the \"Bitcoin Legacy\" and \"Bitcoin Testnet Legacy\" app use the legacy protocol, regardless of the version\n                        return true;\n                    case \"Exchange\":\n                        // We can't query the version of the Bitcoin app if we're coming from Exchange;\n                        // therefore, we use a workaround to distinguish legacy and new versions.\n                        // This can be removed once Ledger Live enforces minimum bitcoin version >= 2.1.0.\n                        return yield checkIsBtcLegacy(this._transport);\n                    case \"Qtum\":\n                        // we use the legacy protocol for versions below 3.0.0 of the Qtum app.\n                        return semver.lt(version, \"3.0.0\");\n                    default:\n                        return true;\n                }\n            }))();\n            if (isBtcLegacy) {\n                this._impl = new BtcOld(this._transport);\n            }\n            return this._impl;\n        });\n    }\n}\n//# sourceMappingURL=Btc.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { crypto } from \"bitcoinjs-lib\";\nimport { pointCompress } from \"tiny-secp256k1\";\nimport { getXpubComponents, hardenedPathOf, pathArrayToString, pathStringToArray, pubkeyFromXpub, } from \"./bip32\";\nimport { BufferReader } from \"./buffertools\";\nimport { p2pkh, p2tr, p2wpkh, p2wpkhWrapped, } from \"./newops/accounttype\";\nimport { createKey, WalletPolicy } from \"./newops/policy\";\nimport { extract } from \"./newops/psbtExtractor\";\nimport { finalize } from \"./newops/psbtFinalizer\";\nimport { psbtIn, PsbtV2 } from \"./newops/psbtv2\";\nimport { serializeTransaction } from \"./serializeTransaction\";\n/**\n * @class BtcNew\n * @description This class implements the same interface as BtcOld (formerly\n * named Btc), but interacts with Bitcoin hardware app version 2.1.0+\n * which uses a totally new APDU protocol. This new\n * protocol is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md\n *\n * Since the interface must remain compatible with BtcOld, the methods\n * of this class are quite clunky, because it needs to adapt legacy\n * input data into the PSBT process. In the future, a new interface should\n * be developed that exposes PSBT to the outer world, which would render\n * a much cleaner implementation.\n *\n */\nexport default class BtcNew {\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * This is a new method that allow users to get an xpub at a standard path.\n     * Standard paths are described at\n     * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md#description\n     *\n     * This boils down to paths (N=0 for Bitcoin, N=1 for Testnet):\n     * M/44'/N'/x'/**\n     * M/48'/N'/x'/y'/**\n     * M/49'/N'/x'/**\n     * M/84'/N'/x'/**\n     * M/86'/N'/x'/**\n     *\n     * The method was added because of added security in the hardware app v2+. The\n     * new hardware app will allow export of any xpub up to and including the\n     * deepest hardened key of standard derivation paths, whereas the old app\n     * would allow export of any key.\n     *\n     * This caused an issue for callers of this class, who only had\n     * getWalletPublicKey() to call which means they have to constuct xpub\n     * themselves:\n     *\n     * Suppose a user of this class wants to create an account xpub on a standard\n     * path, M/44'/0'/Z'. The user must get the parent key fingerprint (see BIP32)\n     * by requesting the parent key M/44'/0'. The new app won't allow that, because\n     * it only allows exporting deepest level hardened path. So the options are to\n     * allow requesting M/44'/0' from the app, or to add a new function\n     * \"getWalletXpub\".\n     *\n     * We opted for adding a new function, which can greatly simplify client code.\n     */\n    getWalletXpub(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ path, xpubVersion, }) {\n            const pathElements = pathStringToArray(path);\n            const xpub = yield this.client.getExtendedPubkey(false, pathElements);\n            const xpubComponents = getXpubComponents(xpub);\n            if (xpubComponents.version != xpubVersion) {\n                throw new Error(`Expected xpub version ${xpubVersion} doesn't match the xpub version from the device ${xpubComponents.version}`);\n            }\n            return xpub;\n        });\n    }\n    /**\n     * This method returns a public key, a bitcoin address, and and a chaincode\n     * for a specific derivation path.\n     *\n     * Limitation: If the path is not a leaf node of a standard path, the address\n     * will be the empty string \"\", see this.getWalletAddress() for details.\n     */\n    getWalletPublicKey(path, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (!isPathNormal(path)) {\n                throw Error(`non-standard path: ${path}`);\n            }\n            const pathElements = pathStringToArray(path);\n            const xpub = yield this.client.getExtendedPubkey(false, pathElements);\n            const display = (_a = opts === null || opts === void 0 ? void 0 : opts.verify) !== null && _a !== void 0 ? _a : false;\n            const address = yield this.getWalletAddress(pathElements, descrTemplFrom((_b = opts === null || opts === void 0 ? void 0 : opts.format) !== null && _b !== void 0 ? _b : \"legacy\"), display);\n            const components = getXpubComponents(xpub);\n            const uncompressedPubkey = Buffer.from(pointCompress(components.pubkey, false));\n            return {\n                publicKey: uncompressedPubkey.toString(\"hex\"),\n                bitcoinAddress: address,\n                chainCode: components.chaincode.toString(\"hex\"),\n            };\n        });\n    }\n    /**\n     * Get an address for the specified path.\n     *\n     * If display is true, we must get the address from the device, which would require\n     * us to determine WalletPolicy. This requires two *extra* queries to the device, one\n     * for the account xpub and one for master key fingerprint.\n     *\n     * If display is false we *could* generate the address ourselves, but chose to\n     * get it from the device to save development time. However, it shouldn't take\n     * too much time to implement local address generation.\n     *\n     * Moreover, if the path is not for a leaf, ie accountPath+/X/Y, there is no\n     * way to get the address from the device. In this case we have to create it\n     * ourselves, but we don't at this time, and instead return an empty (\"\") address.\n     */\n    getWalletAddress(pathElements, descrTempl, display) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accountPath = hardenedPathOf(pathElements);\n            if (accountPath.length + 2 != pathElements.length) {\n                return \"\";\n            }\n            const accountXpub = yield this.client.getExtendedPubkey(false, accountPath);\n            const masterFingerprint = yield this.client.getMasterFingerprint();\n            const policy = new WalletPolicy(descrTempl, createKey(masterFingerprint, accountPath, accountXpub));\n            const changeAndIndex = pathElements.slice(-2, pathElements.length);\n            return this.client.getWalletAddress(policy, Buffer.alloc(32, 0), changeAndIndex[0], changeAndIndex[1], display);\n        });\n    }\n    /**\n     * Build and sign a transaction. See Btc.createPaymentTransaction for\n     * details on how to use this method.\n     *\n     * This method will convert the legacy arguments, CreateTransactionArg, into\n     * a psbt which is finally signed and finalized, and the extracted fully signed\n     * transaction is returned.\n     */\n    createPaymentTransaction(arg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inputCount = arg.inputs.length;\n            if (inputCount == 0) {\n                throw Error(\"No inputs\");\n            }\n            const psbt = new PsbtV2();\n            // The master fingerprint is needed when adding BIP32 derivation paths on\n            // the psbt.\n            const masterFp = yield this.client.getMasterFingerprint();\n            const accountType = accountTypeFromArg(arg, psbt, masterFp);\n            if (arg.lockTime != undefined) {\n                // The signer will assume locktime 0 if unset\n                psbt.setGlobalFallbackLocktime(arg.lockTime);\n            }\n            psbt.setGlobalInputCount(inputCount);\n            psbt.setGlobalPsbtVersion(2);\n            psbt.setGlobalTxVersion(2);\n            let notifyCount = 0;\n            const progress = () => {\n                if (!arg.onDeviceStreaming)\n                    return;\n                arg.onDeviceStreaming({\n                    total: 2 * inputCount,\n                    index: notifyCount,\n                    progress: ++notifyCount / (2 * inputCount),\n                });\n            };\n            let accountXpub = \"\";\n            let accountPath = [];\n            for (let i = 0; i < inputCount; i++) {\n                progress();\n                const pathElems = pathStringToArray(arg.associatedKeysets[i]);\n                if (accountXpub == \"\") {\n                    // We assume all inputs belong to the same account so we set\n                    // the account xpub and path based on the first input.\n                    accountPath = pathElems.slice(0, -2);\n                    accountXpub = yield this.client.getExtendedPubkey(false, accountPath);\n                }\n                yield this.setInput(psbt, i, arg.inputs[i], pathElems, accountType, masterFp, arg.sigHashType);\n            }\n            const outputsConcat = Buffer.from(arg.outputScriptHex, \"hex\");\n            const outputsBufferReader = new BufferReader(outputsConcat);\n            const outputCount = outputsBufferReader.readVarInt();\n            psbt.setGlobalOutputCount(outputCount);\n            const changeData = yield this.outputScriptAt(accountPath, accountType, arg.changePath);\n            // If the caller supplied a changePath, we must make sure there actually is\n            // a change output. If no change output found, we'll throw an error.\n            let changeFound = !changeData;\n            for (let i = 0; i < outputCount; i++) {\n                const amount = Number(outputsBufferReader.readUInt64());\n                const outputScript = outputsBufferReader.readVarSlice();\n                psbt.setOutputAmount(i, amount);\n                psbt.setOutputScript(i, outputScript);\n                // We won't know if we're paying to ourselves, because there's no\n                // information in arg to support multiple \"change paths\". One exception is\n                // if there are multiple outputs to the change address.\n                const isChange = changeData && outputScript.equals(changeData === null || changeData === void 0 ? void 0 : changeData.cond.scriptPubKey);\n                if (isChange) {\n                    changeFound = true;\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const changePath = pathStringToArray(arg.changePath);\n                    const pubkey = changeData.pubkey;\n                    accountType.setOwnOutput(i, changeData.cond, [pubkey], [changePath]);\n                }\n            }\n            if (!changeFound) {\n                throw new Error(\"Change script not found among outputs! \" + (changeData === null || changeData === void 0 ? void 0 : changeData.cond.scriptPubKey.toString(\"hex\")));\n            }\n            const key = createKey(masterFp, accountPath, accountXpub);\n            const p = new WalletPolicy(accountType.getDescriptorTemplate(), key);\n            // This is cheating, because it's not actually requested on the\n            // device yet, but it will be, soonish.\n            if (arg.onDeviceSignatureRequested)\n                arg.onDeviceSignatureRequested();\n            let firstSigned = false;\n            // This callback will be called once for each signature yielded.\n            const progressCallback = () => {\n                if (!firstSigned) {\n                    firstSigned = true;\n                    arg.onDeviceSignatureGranted && arg.onDeviceSignatureGranted();\n                }\n                progress();\n            };\n            yield this.signPsbt(psbt, p, progressCallback);\n            finalize(psbt);\n            const serializedTx = extract(psbt);\n            return serializedTx.toString(\"hex\");\n        });\n    }\n    /**\n     * Signs an arbitrary hex-formatted message with the private key at\n     * the provided derivation path according to the Bitcoin Signature format\n     * and returns v, r, s.\n     */\n    signMessage(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ path, messageHex }) {\n            const pathElements = pathStringToArray(path);\n            const message = Buffer.from(messageHex, \"hex\");\n            const sig = yield this.client.signMessage(message, pathElements);\n            const buf = Buffer.from(sig, \"base64\");\n            const v = buf.readUInt8() - 27 - 4;\n            const r = buf.slice(1, 33).toString(\"hex\");\n            const s = buf.slice(33, 65).toString(\"hex\");\n            return {\n                v,\n                r,\n                s,\n            };\n        });\n    }\n    /**\n     * Calculates an output script along with public key and possible redeemScript\n     * from a path and accountType. The accountPath must be a prefix of path.\n     *\n     * @returns an object with output script (property \"script\"), redeemScript (if\n     * wrapped p2wpkh), and pubkey at provided path. The values of these three\n     * properties depend on the accountType used.\n     */\n    outputScriptAt(accountPath, accountType, path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!path)\n                return undefined;\n            const pathElems = pathStringToArray(path);\n            // Make sure path is in our account, otherwise something fishy is probably\n            // going on.\n            for (let i = 0; i < accountPath.length; i++) {\n                if (accountPath[i] != pathElems[i]) {\n                    throw new Error(`Path ${path} not in account ${pathArrayToString(accountPath)}`);\n                }\n            }\n            const xpub = yield this.client.getExtendedPubkey(false, pathElems);\n            const pubkey = pubkeyFromXpub(xpub);\n            const cond = accountType.spendingCondition([pubkey]);\n            return { cond, pubkey };\n        });\n    }\n    /**\n     * Adds relevant data about an input to the psbt. This includes sequence,\n     * previous txid, output index, spent UTXO, redeem script for wrapped p2wpkh,\n     * public key and its derivation path.\n     */\n    setInput(psbt, i, input, pathElements, accountType, masterFP, sigHashType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inputTx = input[0];\n            const spentOutputIndex = input[1];\n            // redeemScript will be null for wrapped p2wpkh, we need to create it\n            // ourselves. But if set, it should be used.\n            const redeemScript = input[2] ? Buffer.from(input[2], \"hex\") : undefined;\n            const sequence = input[3];\n            if (sequence != undefined) {\n                psbt.setInputSequence(i, sequence);\n            }\n            if (sigHashType != undefined) {\n                psbt.setInputSighashType(i, sigHashType);\n            }\n            const inputTxBuffer = serializeTransaction(inputTx, true);\n            const inputTxid = crypto.hash256(inputTxBuffer);\n            const xpubBase58 = yield this.client.getExtendedPubkey(false, pathElements);\n            const pubkey = pubkeyFromXpub(xpubBase58);\n            if (!inputTx.outputs)\n                throw Error(\"Missing outputs array in transaction to sign\");\n            const spentTxOutput = inputTx.outputs[spentOutputIndex];\n            const spendCondition = {\n                scriptPubKey: spentTxOutput.script,\n                redeemScript: redeemScript,\n            };\n            const spentOutput = { cond: spendCondition, amount: spentTxOutput.amount };\n            accountType.setInput(i, inputTxBuffer, spentOutput, [pubkey], [pathElements]);\n            psbt.setInputPreviousTxId(i, inputTxid);\n            psbt.setInputOutputIndex(i, spentOutputIndex);\n        });\n    }\n    /**\n     * This implements the \"Signer\" role of the BIP370 transaction signing\n     * process.\n     *\n     * It ssks the hardware device to sign the a psbt using the specified wallet\n     * policy. This method assumes BIP32 derived keys are used for all inputs, see\n     * comment in-line. The signatures returned from the hardware device is added\n     * to the appropriate input fields of the PSBT.\n     */\n    signPsbt(psbt, walletPolicy, progressCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sigs = yield this.client.signPsbt(psbt, walletPolicy, Buffer.alloc(32, 0), progressCallback);\n            sigs.forEach((v, k) => {\n                // Note: Looking at BIP32 derivation does not work in the generic case,\n                // since some inputs might not have a BIP32-derived pubkey.\n                const pubkeys = psbt.getInputKeyDatas(k, psbtIn.BIP32_DERIVATION);\n                let pubkey;\n                if (pubkeys.length != 1) {\n                    // No legacy BIP32_DERIVATION, assume we're using taproot.\n                    pubkey = psbt.getInputKeyDatas(k, psbtIn.TAP_BIP32_DERIVATION);\n                    if (pubkey.length == 0) {\n                        throw Error(`Missing pubkey derivation for input ${k}`);\n                    }\n                    psbt.setInputTapKeySig(k, v);\n                }\n                else {\n                    pubkey = pubkeys[0];\n                    psbt.setInputPartialSig(k, pubkey, v);\n                }\n            });\n        });\n    }\n}\n/**\n * This function returns a descriptor template based on the address format.\n * See https://github.com/LedgerHQ/app-bitcoin-new/blob/develop/doc/wallet.md for details of\n * the bitcoin descriptor template.\n */\nfunction descrTemplFrom(addressFormat) {\n    if (addressFormat == \"legacy\")\n        return \"pkh(@0)\";\n    if (addressFormat == \"p2sh\")\n        return \"sh(wpkh(@0))\";\n    if (addressFormat == \"bech32\")\n        return \"wpkh(@0)\";\n    if (addressFormat == \"bech32m\")\n        return \"tr(@0)\";\n    throw new Error(\"Unsupported address format \" + addressFormat);\n}\nfunction accountTypeFromArg(arg, psbt, masterFp) {\n    if (arg.additionals.includes(\"bech32m\"))\n        return new p2tr(psbt, masterFp);\n    if (arg.additionals.includes(\"bech32\"))\n        return new p2wpkh(psbt, masterFp);\n    if (arg.segwit)\n        return new p2wpkhWrapped(psbt, masterFp);\n    return new p2pkh(psbt, masterFp);\n}\n/*\n  The new protocol only allows standard path.\n  Standard paths are (currently):\n  M/44'/(1|0|88)'/X'\n  M/49'/(1|0|88)'/X'\n  M/84'/(1|0|88)'/X'\n  M/86'/(1|0|88)'/X'\n  M/48'/(1|0|88)'/X'/Y'\n  followed by \"\", \"(0|1)\", or \"(0|1)/b\", where a and b are\n  non-hardened. For example, the following paths are standard\n  M/48'/1'/99'/7'\n  M/86'/1'/99'/0\n  M/48'/0'/99'/7'/1/17\n  The following paths are non-standard\n  M/48'/0'/99'           // Not deepest hardened path\n  M/48'/0'/99'/7'/1/17/2 // Too many non-hardened derivation steps\n  M/199'/0'/1'/0/88      // Not a known purpose 199\n  M/86'/1'/99'/2         // Change path item must be 0 or 1\n\n  Useful resource on derivation paths: https://learnmeabitcoin.com/technical/derivation-paths\n*/\n//path is not deepest hardened node of a standard path or deeper, use BtcOld\nconst H = 0x80000000; //HARDENED from bip32\nconst VALID_COIN_TYPES = [\n    0, // Bitcoin\n    1, // Bitcoin (Testnet)\n    88, // Qtum\n];\nconst VALID_SINGLE_SIG_PURPOSES = [\n    44, // BIP44 - https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\n    49, // BIP49 - https://github.com/bitcoin/bips/blob/master/bip-0049.mediawiki\n    84, // BIP84 - https://github.com/bitcoin/bips/blob/master/bip-0084.mediawiki\n    86, // BIP86 - https://github.com/bitcoin/bips/blob/master/bip-0086.mediawiki\n];\nconst VALID_MULTISIG_PURPOSES = [\n    48, // BIP48 - https://github.com/bitcoin/bips/blob/master/bip-0048.mediawiki\n];\nconst hard = (n) => n >= H;\nconst soft = (n) => n === undefined || n < H;\nconst change = (n) => n === undefined || n === 0 || n === 1;\nconst validCoinPathPartsSet = new Set(VALID_COIN_TYPES.map(t => t + H));\nconst validSingleSigPurposePathPartsSet = new Set(VALID_SINGLE_SIG_PURPOSES.map(t => t + H));\nconst validMultiSigPurposePathPartsSet = new Set(VALID_MULTISIG_PURPOSES.map(t => t + H));\nexport function isPathNormal(path) {\n    const pathElems = pathStringToArray(path);\n    // Single sig\n    if (pathElems.length >= 3 &&\n        pathElems.length <= 5 &&\n        validSingleSigPurposePathPartsSet.has(pathElems[0]) &&\n        validCoinPathPartsSet.has(pathElems[1]) &&\n        hard(pathElems[2]) &&\n        change(pathElems[3]) &&\n        soft(pathElems[4])) {\n        return true;\n    }\n    // Multi sig\n    if (pathElems.length >= 4 &&\n        pathElems.length <= 6 &&\n        validMultiSigPurposePathPartsSet.has(pathElems[0]) &&\n        validCoinPathPartsSet.has(pathElems[1]) &&\n        hard(pathElems[2]) &&\n        hard(pathElems[3]) &&\n        change(pathElems[4]) &&\n        soft(pathElems[5])) {\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=BtcNew.js.map",
    "/**\n * @file bip32.ts\n * @description BIP32 Path Handling for Bitcoin Wallets\n *\n * This file provides utility functions to handle BIP32 paths,\n * which are commonly used in hierarchical deterministic (HD) wallets.\n * It includes functions to convert BIP32 paths to and from different formats,\n * extract components from extended public keys (xpubs), and manipulate path elements.\n */\nimport bippath from \"bip32-path\";\nimport bs58check from \"bs58check\";\nexport function pathElementsToBuffer(paths) {\n    const buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n        buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return buffer;\n}\nexport function bip32asBuffer(path) {\n    const pathElements = !path ? [] : pathStringToArray(path);\n    return pathElementsToBuffer(pathElements);\n}\nexport function pathArrayToString(pathElements) {\n    // Limitation: bippath can't handle and empty path. It shouldn't affect us\n    // right now, but might in the future.\n    // TODO: Fix support for empty path.\n    return bippath.fromPathArray(pathElements).toString();\n}\nexport function pathStringToArray(path) {\n    return bippath.fromString(path).toPathArray();\n}\nexport function pubkeyFromXpub(xpub) {\n    const xpubBuf = bs58check.decode(xpub);\n    return xpubBuf.slice(xpubBuf.length - 33);\n}\nexport function getXpubComponents(xpub) {\n    const xpubBuf = bs58check.decode(xpub);\n    return {\n        chaincode: xpubBuf.slice(13, 13 + 32),\n        pubkey: xpubBuf.slice(xpubBuf.length - 33),\n        version: xpubBuf.readUInt32BE(0),\n    };\n}\nexport function hardenedPathOf(pathElements) {\n    for (let i = pathElements.length - 1; i >= 0; i--) {\n        if (pathElements[i] >= 0x80000000) {\n            return pathElements.slice(0, i + 1);\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=bip32.js.map",
    "import varuint from \"varuint-bitcoin\";\nexport function unsafeTo64bitLE(n) {\n    // we want to represent the input as a 8-bytes array\n    if (n > Number.MAX_SAFE_INTEGER) {\n        throw new Error(\"Can't convert numbers > MAX_SAFE_INT\");\n    }\n    const byteArray = Buffer.alloc(8, 0);\n    for (let index = 0; index < byteArray.length; index++) {\n        const byte = n & 0xff;\n        byteArray[index] = byte;\n        n = (n - byte) / 256;\n    }\n    return byteArray;\n}\nexport function unsafeFrom64bitLE(byteArray) {\n    let value = 0;\n    if (byteArray.length != 8) {\n        throw new Error(\"Expected Bufffer of lenght 8\");\n    }\n    if (byteArray[7] != 0) {\n        throw new Error(\"Can't encode numbers > MAX_SAFE_INT\");\n    }\n    if (byteArray[6] > 0x1f) {\n        throw new Error(\"Can't encode numbers > MAX_SAFE_INT\");\n    }\n    for (let i = byteArray.length - 1; i >= 0; i--) {\n        value = value * 256 + byteArray[i];\n    }\n    return value;\n}\nexport class BufferWriter {\n    constructor() {\n        this.bufs = [];\n    }\n    write(alloc, fn) {\n        const b = Buffer.alloc(alloc);\n        fn(b);\n        this.bufs.push(b);\n    }\n    writeUInt8(i) {\n        this.write(1, b => b.writeUInt8(i, 0));\n    }\n    writeInt32(i) {\n        this.write(4, b => b.writeInt32LE(i, 0));\n    }\n    writeUInt32(i) {\n        this.write(4, b => b.writeUInt32LE(i, 0));\n    }\n    writeUInt64(i) {\n        const bytes = unsafeTo64bitLE(i);\n        this.writeSlice(bytes);\n    }\n    writeVarInt(i) {\n        this.bufs.push(varuint.encode(i));\n    }\n    writeSlice(slice) {\n        this.bufs.push(Buffer.from(slice));\n    }\n    writeVarSlice(slice) {\n        this.writeVarInt(slice.length);\n        this.writeSlice(slice);\n    }\n    buffer() {\n        return Buffer.concat(this.bufs);\n    }\n}\nexport class BufferReader {\n    constructor(buffer, offset = 0) {\n        this.buffer = buffer;\n        this.offset = offset;\n    }\n    available() {\n        return this.buffer.length - this.offset;\n    }\n    readUInt8() {\n        const result = this.buffer.readUInt8(this.offset);\n        this.offset++;\n        return result;\n    }\n    readInt32() {\n        const result = this.buffer.readInt32LE(this.offset);\n        this.offset += 4;\n        return result;\n    }\n    readUInt32() {\n        const result = this.buffer.readUInt32LE(this.offset);\n        this.offset += 4;\n        return result;\n    }\n    readUInt64() {\n        const buf = this.readSlice(8);\n        const n = unsafeFrom64bitLE(buf);\n        return n;\n    }\n    readVarInt() {\n        const vi = varuint.decode(this.buffer, this.offset);\n        this.offset += varuint.decode.bytes;\n        return vi;\n    }\n    readSlice(n) {\n        if (this.buffer.length < this.offset + n) {\n            throw new Error(\"Cannot read slice out of bounds\");\n        }\n        const result = this.buffer.slice(this.offset, this.offset + n);\n        this.offset += n;\n        return result;\n    }\n    readVarSlice() {\n        return this.readSlice(this.readVarInt());\n    }\n    readVector() {\n        const count = this.readVarInt();\n        const vector = [];\n        for (let i = 0; i < count; i++)\n            vector.push(this.readVarSlice());\n        return vector;\n    }\n}\n//# sourceMappingURL=buffertools.js.map",
    "import { crypto } from \"bitcoinjs-lib\";\nimport { pointAddScalar } from \"tiny-secp256k1\";\nimport { BufferWriter } from \"../buffertools\";\nimport { HASH_SIZE, OP_CHECKSIG, OP_DUP, OP_EQUAL, OP_EQUALVERIFY, OP_HASH160 } from \"../constants\";\nimport { hashPublicKey } from \"../hashPublicKey\";\nclass BaseAccount {\n    constructor(psbt, masterFp) {\n        this.psbt = psbt;\n        this.masterFp = masterFp;\n    }\n}\n/**\n * Superclass for single signature accounts. This will make sure that the pubkey\n * arrays and path arrays in the method arguments contains exactly one element\n * and calls an abstract method to do the actual work.\n */\nclass SingleKeyAccount extends BaseAccount {\n    spendingCondition(pubkeys) {\n        if (pubkeys.length != 1) {\n            throw new Error(\"Expected single key, got \" + pubkeys.length);\n        }\n        return this.singleKeyCondition(pubkeys[0]);\n    }\n    setInput(i, inputTx, spentOutput, pubkeys, pathElems) {\n        if (pubkeys.length != 1) {\n            throw new Error(\"Expected single key, got \" + pubkeys.length);\n        }\n        if (pathElems.length != 1) {\n            throw new Error(\"Expected single path, got \" + pathElems.length);\n        }\n        this.setSingleKeyInput(i, inputTx, spentOutput, pubkeys[0], pathElems[0]);\n    }\n    setOwnOutput(i, cond, pubkeys, paths) {\n        if (pubkeys.length != 1) {\n            throw new Error(\"Expected single key, got \" + pubkeys.length);\n        }\n        if (paths.length != 1) {\n            throw new Error(\"Expected single path, got \" + paths.length);\n        }\n        this.setSingleKeyOutput(i, cond, pubkeys[0], paths[0]);\n    }\n}\nexport class p2pkh extends SingleKeyAccount {\n    singleKeyCondition(pubkey) {\n        const buf = new BufferWriter();\n        const pubkeyHash = hashPublicKey(pubkey);\n        buf.writeSlice(Buffer.from([OP_DUP, OP_HASH160, HASH_SIZE]));\n        buf.writeSlice(pubkeyHash);\n        buf.writeSlice(Buffer.from([OP_EQUALVERIFY, OP_CHECKSIG]));\n        return { scriptPubKey: buf.buffer() };\n    }\n    setSingleKeyInput(i, inputTx, _spentOutput, pubkey, path) {\n        if (!inputTx) {\n            throw new Error(\"Full input base transaction required\");\n        }\n        this.psbt.setInputNonWitnessUtxo(i, inputTx);\n        this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n    }\n    setSingleKeyOutput(i, cond, pubkey, path) {\n        this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n    }\n    getDescriptorTemplate() {\n        return \"pkh(@0)\";\n    }\n}\nexport class p2tr extends SingleKeyAccount {\n    singleKeyCondition(pubkey) {\n        const xonlyPubkey = pubkey.slice(1); // x-only pubkey\n        const buf = new BufferWriter();\n        const outputKey = this.getTaprootOutputKey(xonlyPubkey);\n        buf.writeSlice(Buffer.from([0x51, 32])); // push1, pubkeylen\n        buf.writeSlice(outputKey);\n        return { scriptPubKey: buf.buffer() };\n    }\n    setSingleKeyInput(i, _inputTx, spentOutput, pubkey, path) {\n        const xonly = pubkey.slice(1);\n        this.psbt.setInputTapBip32Derivation(i, xonly, [], this.masterFp, path);\n        this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n    }\n    setSingleKeyOutput(i, cond, pubkey, path) {\n        const xonly = pubkey.slice(1);\n        this.psbt.setOutputTapBip32Derivation(i, xonly, [], this.masterFp, path);\n    }\n    getDescriptorTemplate() {\n        return \"tr(@0)\";\n    }\n    /*\n    The following two functions are copied from wallet-btc and adapted.\n    They should be moved to a library to avoid code reuse.\n    */\n    hashTapTweak(x) {\n        // hash_tag(x) = SHA256(SHA256(tag) || SHA256(tag) || x), see BIP340\n        // See https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#specification\n        const h = crypto.sha256(Buffer.from(\"TapTweak\", \"utf-8\"));\n        return crypto.sha256(Buffer.concat([h, h, x]));\n    }\n    /**\n     * Calculates a taproot output key from an internal key. This output key will be\n     * used as witness program in a taproot output. The internal key is tweaked\n     * according to recommendation in BIP341:\n     * https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_ref-22-0\n     *\n     * @param internalPubkey A 32 byte x-only taproot internal key\n     * @returns The output key\n     */\n    getTaprootOutputKey(internalPubkey) {\n        if (internalPubkey.length != 32) {\n            throw new Error(\"Expected 32 byte pubkey. Got \" + internalPubkey.length);\n        }\n        // A BIP32 derived key can be converted to a schnorr pubkey by dropping\n        // the first byte, which represent the oddness/evenness. In schnorr all\n        // pubkeys are even.\n        // https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#public-key-conversion\n        const evenEcdsaPubkey = Buffer.concat([Buffer.from([0x02]), internalPubkey]);\n        const tweak = this.hashTapTweak(internalPubkey);\n        // Q = P + int(hash_TapTweak(bytes(P)))G\n        const outputEcdsaKey = Buffer.from(pointAddScalar(evenEcdsaPubkey, tweak));\n        // Convert to schnorr.\n        const outputSchnorrKey = outputEcdsaKey.slice(1);\n        // Create address\n        return outputSchnorrKey;\n    }\n}\nexport class p2wpkhWrapped extends SingleKeyAccount {\n    singleKeyCondition(pubkey) {\n        const buf = new BufferWriter();\n        const redeemScript = this.createRedeemScript(pubkey);\n        const scriptHash = hashPublicKey(redeemScript);\n        buf.writeSlice(Buffer.from([OP_HASH160, HASH_SIZE]));\n        buf.writeSlice(scriptHash);\n        buf.writeUInt8(OP_EQUAL);\n        return { scriptPubKey: buf.buffer(), redeemScript: redeemScript };\n    }\n    setSingleKeyInput(i, inputTx, spentOutput, pubkey, path) {\n        if (!inputTx) {\n            throw new Error(\"Full input base transaction required\");\n        }\n        this.psbt.setInputNonWitnessUtxo(i, inputTx);\n        this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n        const userSuppliedRedeemScript = spentOutput.cond.redeemScript;\n        const expectedRedeemScript = this.createRedeemScript(pubkey);\n        if (userSuppliedRedeemScript && !expectedRedeemScript.equals(userSuppliedRedeemScript)) {\n            // At what point might a user set the redeemScript on its own?\n            throw new Error(`User-supplied redeemScript ${userSuppliedRedeemScript.toString(\"hex\")} doesn't\n       match expected ${expectedRedeemScript.toString(\"hex\")} for input ${i}`);\n        }\n        this.psbt.setInputRedeemScript(i, expectedRedeemScript);\n        this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n    }\n    setSingleKeyOutput(i, cond, pubkey, path) {\n        this.psbt.setOutputRedeemScript(i, cond.redeemScript);\n        this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n    }\n    getDescriptorTemplate() {\n        return \"sh(wpkh(@0))\";\n    }\n    createRedeemScript(pubkey) {\n        const pubkeyHash = hashPublicKey(pubkey);\n        return Buffer.concat([Buffer.from(\"0014\", \"hex\"), pubkeyHash]);\n    }\n}\nexport class p2wpkh extends SingleKeyAccount {\n    singleKeyCondition(pubkey) {\n        const buf = new BufferWriter();\n        const pubkeyHash = hashPublicKey(pubkey);\n        buf.writeSlice(Buffer.from([0, HASH_SIZE]));\n        buf.writeSlice(pubkeyHash);\n        return { scriptPubKey: buf.buffer() };\n    }\n    setSingleKeyInput(i, inputTx, spentOutput, pubkey, path) {\n        if (!inputTx) {\n            throw new Error(\"Full input base transaction required\");\n        }\n        this.psbt.setInputNonWitnessUtxo(i, inputTx);\n        this.psbt.setInputBip32Derivation(i, pubkey, this.masterFp, path);\n        this.psbt.setInputWitnessUtxo(i, spentOutput.amount, spentOutput.cond.scriptPubKey);\n    }\n    setSingleKeyOutput(i, cond, pubkey, path) {\n        this.psbt.setOutputBip32Derivation(i, pubkey, this.masterFp, path);\n    }\n    getDescriptorTemplate() {\n        return \"wpkh(@0)\";\n    }\n}\n//# sourceMappingURL=accounttype.js.map",
    "// the maximum number of bytes allowed in a single chunk when processing bitcoin script data.\n// if the Bitcoin script is too large, we will process it in several chunks.\nexport const MAX_SCRIPT_BLOCK = 50;\nexport const DEFAULT_VERSION = 1;\nexport const DEFAULT_LOCKTIME = 0;\n// input sequence for non-rbf transactions\nexport const DEFAULT_SEQUENCE = 0xffffffff;\n// SIGHASH flags(Sign all inputs and outputs)\n// refer to https://wiki.bitcoinsv.io/index.php/SIGHASH_flags for more details\nexport const SIGHASH_ALL = 1;\n// refer to https://en.bitcoin.it/wiki/Script for Opcodes(OP_DUP, OP_HASH160...) that are used in bitcoin script\nexport const OP_DUP = 0x76;\nexport const OP_HASH160 = 0xa9;\nexport const HASH_SIZE = 0x14;\nexport const OP_EQUAL = 0x87;\nexport const OP_EQUALVERIFY = 0x88;\nexport const OP_CHECKSIG = 0xac;\nexport const OP_RETURN = 0x6a;\n//# sourceMappingURL=constants.js.map",
    "import RIPEMD160 from \"ripemd160\";\nimport sha from \"sha.js\";\nexport function hashPublicKey(buffer) {\n    return new RIPEMD160().update(sha(\"sha256\").update(buffer).digest()).digest();\n}\n//# sourceMappingURL=hashPublicKey.js.map",
    "import { crypto } from \"bitcoinjs-lib\";\nimport { pathArrayToString } from \"../bip32\";\nimport { BufferWriter } from \"../buffertools\";\nimport { hashLeaf, Merkle } from \"./merkle\";\n/**\n * The Bitcon hardware app uses a descriptors-like thing to describe\n * how to construct output scripts from keys. A \"Wallet Policy\" consists\n * of a \"Descriptor Template\" and a list of \"keys\". A key is basically\n * a serialized BIP32 extended public key with some added derivation path\n * information. This is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/wallet.md\n */\nexport class WalletPolicy {\n    /**\n     * For now, we only support default descriptor templates.\n     */\n    constructor(descriptorTemplate, key) {\n        this.descriptorTemplate = descriptorTemplate;\n        this.keys = [key];\n    }\n    getWalletId() {\n        // wallet_id (sha256 of the wallet serialization),\n        return crypto.sha256(this.serialize());\n    }\n    serialize() {\n        const keyBuffers = this.keys.map(k => {\n            return Buffer.from(k, \"ascii\");\n        });\n        const m = new Merkle(keyBuffers.map(k => hashLeaf(k)));\n        const buf = new BufferWriter();\n        buf.writeUInt8(0x01); // wallet type (policy map)\n        buf.writeUInt8(0); // length of wallet name (empty string for default wallets)\n        buf.writeVarSlice(Buffer.from(this.descriptorTemplate, \"ascii\"));\n        buf.writeVarInt(this.keys.length), buf.writeSlice(m.getRoot());\n        return buf.buffer();\n    }\n}\nexport function createKey(masterFingerprint, path, xpub) {\n    const accountPath = pathArrayToString(path);\n    return `[${masterFingerprint.toString(\"hex\")}${accountPath.substring(1)}]${xpub}/**`;\n}\n//# sourceMappingURL=policy.js.map",
    "import { crypto } from \"bitcoinjs-lib\";\n/**\n * This class implements the merkle tree used by Ledger Bitcoin app v2+,\n * which is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/merkle.md\n */\nexport class Merkle {\n    constructor(leaves, hasher = crypto.sha256) {\n        this.leaves = leaves;\n        this.h = hasher;\n        const nodes = this.calculateRoot(leaves);\n        this.rootNode = nodes.root;\n        this.leafNodes = nodes.leaves;\n    }\n    getRoot() {\n        return this.rootNode.hash;\n    }\n    size() {\n        return this.leaves.length;\n    }\n    getLeaves() {\n        return this.leaves;\n    }\n    getLeafHash(index) {\n        return this.leafNodes[index].hash;\n    }\n    getProof(index) {\n        if (index >= this.leaves.length)\n            throw Error(\"Index out of bounds\");\n        return proveNode(this.leafNodes[index]);\n    }\n    calculateRoot(leaves) {\n        const n = leaves.length;\n        if (n == 0) {\n            return {\n                root: new Node(undefined, undefined, Buffer.alloc(32, 0)),\n                leaves: [],\n            };\n        }\n        if (n == 1) {\n            const newNode = new Node(undefined, undefined, leaves[0]);\n            return { root: newNode, leaves: [newNode] };\n        }\n        const leftCount = highestPowerOf2LessThan(n);\n        const leftBranch = this.calculateRoot(leaves.slice(0, leftCount));\n        const rightBranch = this.calculateRoot(leaves.slice(leftCount));\n        const leftChild = leftBranch.root;\n        const rightChild = rightBranch.root;\n        const hash = this.hashNode(leftChild.hash, rightChild.hash);\n        const node = new Node(leftChild, rightChild, hash);\n        leftChild.parent = node;\n        rightChild.parent = node;\n        return { root: node, leaves: leftBranch.leaves.concat(rightBranch.leaves) };\n    }\n    hashNode(left, right) {\n        return this.h(Buffer.concat([Buffer.from([1]), left, right]));\n    }\n}\nexport function hashLeaf(buf, hashFunction = crypto.sha256) {\n    return hashConcat(Buffer.from([0]), buf, hashFunction);\n}\nfunction hashConcat(bufA, bufB, hashFunction) {\n    return hashFunction(Buffer.concat([bufA, bufB]));\n}\nclass Node {\n    constructor(left, right, hash) {\n        this.leftChild = left;\n        this.rightChild = right;\n        this.hash = hash;\n    }\n    isLeaf() {\n        return this.leftChild == undefined;\n    }\n}\nfunction proveNode(node) {\n    if (!node.parent) {\n        return [];\n    }\n    if (node.parent.leftChild == node) {\n        if (!node.parent.rightChild) {\n            throw new Error(\"Expected right child to exist\");\n        }\n        return [node.parent.rightChild.hash, ...proveNode(node.parent)];\n    }\n    else {\n        if (!node.parent.leftChild) {\n            throw new Error(\"Expected left child to exist\");\n        }\n        return [node.parent.leftChild.hash, ...proveNode(node.parent)];\n    }\n}\nfunction highestPowerOf2LessThan(n) {\n    if (n < 2) {\n        throw Error(\"Expected n >= 2\");\n    }\n    if (isPowerOf2(n)) {\n        return n / 2;\n    }\n    return 1 << Math.floor(Math.log2(n));\n}\nfunction isPowerOf2(n) {\n    return (n & (n - 1)) == 0;\n}\n//# sourceMappingURL=merkle.js.map",
    "import { BufferWriter } from \"../buffertools\";\n/**\n * This implements the \"Transaction Extractor\" role of BIP370 (PSBTv2\n * https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki#transaction-extractor). However\n * the role is partially documented in BIP174 (PSBTv0\n * https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#transaction-extractor).\n */\nexport function extract(psbt) {\n    var _a, _b;\n    const tx = new BufferWriter();\n    tx.writeUInt32(psbt.getGlobalTxVersion());\n    const isSegwit = !!psbt.getInputWitnessUtxo(0);\n    if (isSegwit) {\n        tx.writeSlice(Buffer.from([0, 1]));\n    }\n    const inputCount = psbt.getGlobalInputCount();\n    tx.writeVarInt(inputCount);\n    const witnessWriter = new BufferWriter();\n    for (let i = 0; i < inputCount; i++) {\n        tx.writeSlice(psbt.getInputPreviousTxid(i));\n        tx.writeUInt32(psbt.getInputOutputIndex(i));\n        tx.writeVarSlice((_a = psbt.getInputFinalScriptsig(i)) !== null && _a !== void 0 ? _a : Buffer.from([]));\n        tx.writeUInt32(psbt.getInputSequence(i));\n        if (isSegwit) {\n            witnessWriter.writeSlice(psbt.getInputFinalScriptwitness(i));\n        }\n    }\n    const outputCount = psbt.getGlobalOutputCount();\n    tx.writeVarInt(outputCount);\n    for (let i = 0; i < outputCount; i++) {\n        tx.writeUInt64(psbt.getOutputAmount(i));\n        tx.writeVarSlice(psbt.getOutputScript(i));\n    }\n    tx.writeSlice(witnessWriter.buffer());\n    tx.writeUInt32((_b = psbt.getGlobalFallbackLocktime()) !== null && _b !== void 0 ? _b : 0);\n    return tx.buffer();\n}\n//# sourceMappingURL=psbtExtractor.js.map",
    "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { BufferReader, BufferWriter, unsafeFrom64bitLE, unsafeTo64bitLE } from \"../buffertools\";\nexport var psbtGlobal;\n(function (psbtGlobal) {\n    psbtGlobal[psbtGlobal[\"TX_VERSION\"] = 2] = \"TX_VERSION\";\n    psbtGlobal[psbtGlobal[\"FALLBACK_LOCKTIME\"] = 3] = \"FALLBACK_LOCKTIME\";\n    psbtGlobal[psbtGlobal[\"INPUT_COUNT\"] = 4] = \"INPUT_COUNT\";\n    psbtGlobal[psbtGlobal[\"OUTPUT_COUNT\"] = 5] = \"OUTPUT_COUNT\";\n    psbtGlobal[psbtGlobal[\"TX_MODIFIABLE\"] = 6] = \"TX_MODIFIABLE\";\n    psbtGlobal[psbtGlobal[\"VERSION\"] = 251] = \"VERSION\";\n})(psbtGlobal || (psbtGlobal = {}));\nexport var psbtIn;\n(function (psbtIn) {\n    psbtIn[psbtIn[\"NON_WITNESS_UTXO\"] = 0] = \"NON_WITNESS_UTXO\";\n    psbtIn[psbtIn[\"WITNESS_UTXO\"] = 1] = \"WITNESS_UTXO\";\n    psbtIn[psbtIn[\"PARTIAL_SIG\"] = 2] = \"PARTIAL_SIG\";\n    psbtIn[psbtIn[\"SIGHASH_TYPE\"] = 3] = \"SIGHASH_TYPE\";\n    psbtIn[psbtIn[\"REDEEM_SCRIPT\"] = 4] = \"REDEEM_SCRIPT\";\n    psbtIn[psbtIn[\"BIP32_DERIVATION\"] = 6] = \"BIP32_DERIVATION\";\n    psbtIn[psbtIn[\"FINAL_SCRIPTSIG\"] = 7] = \"FINAL_SCRIPTSIG\";\n    psbtIn[psbtIn[\"FINAL_SCRIPTWITNESS\"] = 8] = \"FINAL_SCRIPTWITNESS\";\n    psbtIn[psbtIn[\"PREVIOUS_TXID\"] = 14] = \"PREVIOUS_TXID\";\n    psbtIn[psbtIn[\"OUTPUT_INDEX\"] = 15] = \"OUTPUT_INDEX\";\n    psbtIn[psbtIn[\"SEQUENCE\"] = 16] = \"SEQUENCE\";\n    psbtIn[psbtIn[\"TAP_KEY_SIG\"] = 19] = \"TAP_KEY_SIG\";\n    psbtIn[psbtIn[\"TAP_BIP32_DERIVATION\"] = 22] = \"TAP_BIP32_DERIVATION\";\n})(psbtIn || (psbtIn = {}));\nexport var psbtOut;\n(function (psbtOut) {\n    psbtOut[psbtOut[\"REDEEM_SCRIPT\"] = 0] = \"REDEEM_SCRIPT\";\n    psbtOut[psbtOut[\"BIP_32_DERIVATION\"] = 2] = \"BIP_32_DERIVATION\";\n    psbtOut[psbtOut[\"AMOUNT\"] = 3] = \"AMOUNT\";\n    psbtOut[psbtOut[\"SCRIPT\"] = 4] = \"SCRIPT\";\n    psbtOut[psbtOut[\"TAP_BIP32_DERIVATION\"] = 7] = \"TAP_BIP32_DERIVATION\";\n})(psbtOut || (psbtOut = {}));\nconst PSBT_MAGIC_BYTES = Buffer.from([0x70, 0x73, 0x62, 0x74, 0xff]);\nexport class NoSuchEntry extends Error {\n}\n/**\n * Implements Partially Signed Bitcoin Transaction version 2, BIP370, as\n * documented at https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki\n * and https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki\n *\n * A psbt is a data structure that can carry all relevant information about a\n * transaction through all stages of the signing process. From constructing an\n * unsigned transaction to extracting the final serialized transaction ready for\n * broadcast.\n *\n * This implementation is limited to what's needed in ledgerjs to carry out its\n * duties, which means that support for features like multisig or taproot script\n * path spending are not implemented. Specifically, it supports p2pkh,\n * p2wpkhWrappedInP2sh, p2wpkh and p2tr key path spending.\n *\n * This class is made purposefully dumb, so it's easy to add support for\n * complemantary fields as needed in the future.\n */\nexport class PsbtV2 {\n    constructor() {\n        this.globalMap = new Map();\n        this.inputMaps = [];\n        this.outputMaps = [];\n    }\n    setGlobalTxVersion(version) {\n        this.setGlobal(psbtGlobal.TX_VERSION, uint32LE(version));\n    }\n    getGlobalTxVersion() {\n        return this.getGlobal(psbtGlobal.TX_VERSION).readUInt32LE(0);\n    }\n    setGlobalFallbackLocktime(locktime) {\n        this.setGlobal(psbtGlobal.FALLBACK_LOCKTIME, uint32LE(locktime));\n    }\n    getGlobalFallbackLocktime() {\n        var _a;\n        return (_a = this.getGlobalOptional(psbtGlobal.FALLBACK_LOCKTIME)) === null || _a === void 0 ? void 0 : _a.readUInt32LE(0);\n    }\n    setGlobalInputCount(inputCount) {\n        this.setGlobal(psbtGlobal.INPUT_COUNT, varint(inputCount));\n    }\n    getGlobalInputCount() {\n        return fromVarint(this.getGlobal(psbtGlobal.INPUT_COUNT));\n    }\n    setGlobalOutputCount(outputCount) {\n        this.setGlobal(psbtGlobal.OUTPUT_COUNT, varint(outputCount));\n    }\n    getGlobalOutputCount() {\n        return fromVarint(this.getGlobal(psbtGlobal.OUTPUT_COUNT));\n    }\n    setGlobalTxModifiable(byte) {\n        this.setGlobal(psbtGlobal.TX_MODIFIABLE, byte);\n    }\n    getGlobalTxModifiable() {\n        return this.getGlobalOptional(psbtGlobal.TX_MODIFIABLE);\n    }\n    setGlobalPsbtVersion(psbtVersion) {\n        this.setGlobal(psbtGlobal.VERSION, uint32LE(psbtVersion));\n    }\n    getGlobalPsbtVersion() {\n        return this.getGlobal(psbtGlobal.VERSION).readUInt32LE(0);\n    }\n    setInputNonWitnessUtxo(inputIndex, transaction) {\n        this.setInput(inputIndex, psbtIn.NON_WITNESS_UTXO, b(), transaction);\n    }\n    getInputNonWitnessUtxo(inputIndex) {\n        return this.getInputOptional(inputIndex, psbtIn.NON_WITNESS_UTXO, b());\n    }\n    setInputWitnessUtxo(inputIndex, amount, scriptPubKey) {\n        const buf = new BufferWriter();\n        buf.writeSlice(amount);\n        buf.writeVarSlice(scriptPubKey);\n        this.setInput(inputIndex, psbtIn.WITNESS_UTXO, b(), buf.buffer());\n    }\n    getInputWitnessUtxo(inputIndex) {\n        const utxo = this.getInputOptional(inputIndex, psbtIn.WITNESS_UTXO, b());\n        if (!utxo)\n            return undefined;\n        const buf = new BufferReader(utxo);\n        return { amount: buf.readSlice(8), scriptPubKey: buf.readVarSlice() };\n    }\n    setInputPartialSig(inputIndex, pubkey, signature) {\n        this.setInput(inputIndex, psbtIn.PARTIAL_SIG, pubkey, signature);\n    }\n    getInputPartialSig(inputIndex, pubkey) {\n        return this.getInputOptional(inputIndex, psbtIn.PARTIAL_SIG, pubkey);\n    }\n    setInputSighashType(inputIndex, sigHashtype) {\n        this.setInput(inputIndex, psbtIn.SIGHASH_TYPE, b(), uint32LE(sigHashtype));\n    }\n    getInputSighashType(inputIndex) {\n        const result = this.getInputOptional(inputIndex, psbtIn.SIGHASH_TYPE, b());\n        if (!result)\n            return undefined;\n        return result.readUInt32LE(0);\n    }\n    setInputRedeemScript(inputIndex, redeemScript) {\n        this.setInput(inputIndex, psbtIn.REDEEM_SCRIPT, b(), redeemScript);\n    }\n    getInputRedeemScript(inputIndex) {\n        return this.getInputOptional(inputIndex, psbtIn.REDEEM_SCRIPT, b());\n    }\n    setInputBip32Derivation(inputIndex, pubkey, masterFingerprint, path) {\n        if (pubkey.length != 33)\n            throw new Error(\"Invalid pubkey length: \" + pubkey.length);\n        this.setInput(inputIndex, psbtIn.BIP32_DERIVATION, pubkey, this.encodeBip32Derivation(masterFingerprint, path));\n    }\n    getInputBip32Derivation(inputIndex, pubkey) {\n        const buf = this.getInputOptional(inputIndex, psbtIn.BIP32_DERIVATION, pubkey);\n        if (!buf)\n            return undefined;\n        return this.decodeBip32Derivation(buf);\n    }\n    setInputFinalScriptsig(inputIndex, scriptSig) {\n        this.setInput(inputIndex, psbtIn.FINAL_SCRIPTSIG, b(), scriptSig);\n    }\n    getInputFinalScriptsig(inputIndex) {\n        return this.getInputOptional(inputIndex, psbtIn.FINAL_SCRIPTSIG, b());\n    }\n    setInputFinalScriptwitness(inputIndex, scriptWitness) {\n        this.setInput(inputIndex, psbtIn.FINAL_SCRIPTWITNESS, b(), scriptWitness);\n    }\n    getInputFinalScriptwitness(inputIndex) {\n        return this.getInput(inputIndex, psbtIn.FINAL_SCRIPTWITNESS, b());\n    }\n    setInputPreviousTxId(inputIndex, txid) {\n        this.setInput(inputIndex, psbtIn.PREVIOUS_TXID, b(), txid);\n    }\n    getInputPreviousTxid(inputIndex) {\n        return this.getInput(inputIndex, psbtIn.PREVIOUS_TXID, b());\n    }\n    setInputOutputIndex(inputIndex, outputIndex) {\n        this.setInput(inputIndex, psbtIn.OUTPUT_INDEX, b(), uint32LE(outputIndex));\n    }\n    getInputOutputIndex(inputIndex) {\n        return this.getInput(inputIndex, psbtIn.OUTPUT_INDEX, b()).readUInt32LE(0);\n    }\n    setInputSequence(inputIndex, sequence) {\n        this.setInput(inputIndex, psbtIn.SEQUENCE, b(), uint32LE(sequence));\n    }\n    getInputSequence(inputIndex) {\n        var _a, _b;\n        return (_b = (_a = this.getInputOptional(inputIndex, psbtIn.SEQUENCE, b())) === null || _a === void 0 ? void 0 : _a.readUInt32LE(0)) !== null && _b !== void 0 ? _b : 0xffffffff;\n    }\n    setInputTapKeySig(inputIndex, sig) {\n        this.setInput(inputIndex, psbtIn.TAP_KEY_SIG, b(), sig);\n    }\n    getInputTapKeySig(inputIndex) {\n        return this.getInputOptional(inputIndex, psbtIn.TAP_KEY_SIG, b());\n    }\n    setInputTapBip32Derivation(inputIndex, pubkey, hashes, masterFingerprint, path) {\n        if (pubkey.length != 32)\n            throw new Error(\"Invalid pubkey length: \" + pubkey.length);\n        const buf = this.encodeTapBip32Derivation(hashes, masterFingerprint, path);\n        this.setInput(inputIndex, psbtIn.TAP_BIP32_DERIVATION, pubkey, buf);\n    }\n    getInputTapBip32Derivation(inputIndex, pubkey) {\n        const buf = this.getInput(inputIndex, psbtIn.TAP_BIP32_DERIVATION, pubkey);\n        return this.decodeTapBip32Derivation(buf);\n    }\n    getInputKeyDatas(inputIndex, keyType) {\n        return this.getKeyDatas(this.inputMaps[inputIndex], keyType);\n    }\n    setOutputRedeemScript(outputIndex, redeemScript) {\n        this.setOutput(outputIndex, psbtOut.REDEEM_SCRIPT, b(), redeemScript);\n    }\n    getOutputRedeemScript(outputIndex) {\n        return this.getOutput(outputIndex, psbtOut.REDEEM_SCRIPT, b());\n    }\n    setOutputBip32Derivation(outputIndex, pubkey, masterFingerprint, path) {\n        this.setOutput(outputIndex, psbtOut.BIP_32_DERIVATION, pubkey, this.encodeBip32Derivation(masterFingerprint, path));\n    }\n    getOutputBip32Derivation(outputIndex, pubkey) {\n        const buf = this.getOutput(outputIndex, psbtOut.BIP_32_DERIVATION, pubkey);\n        return this.decodeBip32Derivation(buf);\n    }\n    setOutputAmount(outputIndex, amount) {\n        this.setOutput(outputIndex, psbtOut.AMOUNT, b(), uint64LE(amount));\n    }\n    getOutputAmount(outputIndex) {\n        const buf = this.getOutput(outputIndex, psbtOut.AMOUNT, b());\n        return unsafeFrom64bitLE(buf);\n    }\n    setOutputScript(outputIndex, scriptPubKey) {\n        this.setOutput(outputIndex, psbtOut.SCRIPT, b(), scriptPubKey);\n    }\n    getOutputScript(outputIndex) {\n        return this.getOutput(outputIndex, psbtOut.SCRIPT, b());\n    }\n    setOutputTapBip32Derivation(outputIndex, pubkey, hashes, fingerprint, path) {\n        const buf = this.encodeTapBip32Derivation(hashes, fingerprint, path);\n        this.setOutput(outputIndex, psbtOut.TAP_BIP32_DERIVATION, pubkey, buf);\n    }\n    getOutputTapBip32Derivation(outputIndex, pubkey) {\n        const buf = this.getOutput(outputIndex, psbtOut.TAP_BIP32_DERIVATION, pubkey);\n        return this.decodeTapBip32Derivation(buf);\n    }\n    deleteInputEntries(inputIndex, keyTypes) {\n        const map = this.inputMaps[inputIndex];\n        map.forEach((_v, k, m) => {\n            if (this.isKeyType(k, keyTypes)) {\n                m.delete(k);\n            }\n        });\n    }\n    copy(to) {\n        this.copyMap(this.globalMap, to.globalMap);\n        this.copyMaps(this.inputMaps, to.inputMaps);\n        this.copyMaps(this.outputMaps, to.outputMaps);\n    }\n    copyMaps(from, to) {\n        from.forEach((m, index) => {\n            const to_index = new Map();\n            this.copyMap(m, to_index);\n            to[index] = to_index;\n        });\n    }\n    copyMap(from, to) {\n        from.forEach((v, k) => to.set(k, Buffer.from(v)));\n    }\n    serialize() {\n        const buf = new BufferWriter();\n        buf.writeSlice(Buffer.from([0x70, 0x73, 0x62, 0x74, 0xff]));\n        serializeMap(buf, this.globalMap);\n        this.inputMaps.forEach(map => {\n            serializeMap(buf, map);\n        });\n        this.outputMaps.forEach(map => {\n            serializeMap(buf, map);\n        });\n        return buf.buffer();\n    }\n    deserialize(psbt) {\n        const buf = new BufferReader(psbt);\n        if (!buf.readSlice(5).equals(PSBT_MAGIC_BYTES)) {\n            throw new Error(\"Invalid magic bytes\");\n        }\n        while (this.readKeyPair(this.globalMap, buf))\n            ;\n        for (let i = 0; i < this.getGlobalInputCount(); i++) {\n            this.inputMaps[i] = new Map();\n            while (this.readKeyPair(this.inputMaps[i], buf))\n                ;\n        }\n        for (let i = 0; i < this.getGlobalOutputCount(); i++) {\n            this.outputMaps[i] = new Map();\n            while (this.readKeyPair(this.outputMaps[i], buf))\n                ;\n        }\n    }\n    readKeyPair(map, buf) {\n        const keyLen = buf.readVarInt();\n        if (keyLen == 0) {\n            return false;\n        }\n        const keyType = buf.readUInt8();\n        const keyData = buf.readSlice(keyLen - 1);\n        const value = buf.readVarSlice();\n        set(map, keyType, keyData, value);\n        return true;\n    }\n    getKeyDatas(map, keyType) {\n        const result = [];\n        map.forEach((_v, k) => {\n            if (this.isKeyType(k, [keyType])) {\n                result.push(Buffer.from(k.substring(2), \"hex\"));\n            }\n        });\n        return result;\n    }\n    isKeyType(hexKey, keyTypes) {\n        const keyType = Buffer.from(hexKey.substring(0, 2), \"hex\").readUInt8(0);\n        return keyTypes.some(k => k == keyType);\n    }\n    setGlobal(keyType, value) {\n        const key = new Key(keyType, Buffer.from([]));\n        this.globalMap.set(key.toString(), value);\n    }\n    getGlobal(keyType) {\n        return get(this.globalMap, keyType, b(), false);\n    }\n    getGlobalOptional(keyType) {\n        return get(this.globalMap, keyType, b(), true);\n    }\n    setInput(index, keyType, keyData, value) {\n        set(this.getMap(index, this.inputMaps), keyType, keyData, value);\n    }\n    getInput(index, keyType, keyData) {\n        return get(this.inputMaps[index], keyType, keyData, false);\n    }\n    getInputOptional(index, keyType, keyData) {\n        return get(this.inputMaps[index], keyType, keyData, true);\n    }\n    setOutput(index, keyType, keyData, value) {\n        set(this.getMap(index, this.outputMaps), keyType, keyData, value);\n    }\n    getOutput(index, keyType, keyData) {\n        return get(this.outputMaps[index], keyType, keyData, false);\n    }\n    getMap(index, maps) {\n        if (maps[index]) {\n            return maps[index];\n        }\n        return (maps[index] = new Map());\n    }\n    encodeBip32Derivation(masterFingerprint, path) {\n        const buf = new BufferWriter();\n        this.writeBip32Derivation(buf, masterFingerprint, path);\n        return buf.buffer();\n    }\n    decodeBip32Derivation(buffer) {\n        const buf = new BufferReader(buffer);\n        return this.readBip32Derivation(buf);\n    }\n    writeBip32Derivation(buf, masterFingerprint, path) {\n        buf.writeSlice(masterFingerprint);\n        path.forEach(element => {\n            buf.writeUInt32(element);\n        });\n    }\n    readBip32Derivation(buf) {\n        const masterFingerprint = buf.readSlice(4);\n        const path = [];\n        while (buf.offset < buf.buffer.length) {\n            path.push(buf.readUInt32());\n        }\n        return { masterFingerprint, path };\n    }\n    encodeTapBip32Derivation(hashes, masterFingerprint, path) {\n        const buf = new BufferWriter();\n        buf.writeVarInt(hashes.length);\n        hashes.forEach(h => {\n            buf.writeSlice(h);\n        });\n        this.writeBip32Derivation(buf, masterFingerprint, path);\n        return buf.buffer();\n    }\n    decodeTapBip32Derivation(buffer) {\n        const buf = new BufferReader(buffer);\n        const hashCount = buf.readVarInt();\n        const hashes = [];\n        for (let i = 0; i < hashCount; i++) {\n            hashes.push(buf.readSlice(32));\n        }\n        const deriv = this.readBip32Derivation(buf);\n        return Object.assign({ hashes }, deriv);\n    }\n}\nfunction get(map, keyType, keyData, acceptUndefined) {\n    if (!map)\n        throw Error(\"No such map\");\n    const key = new Key(keyType, keyData);\n    const value = map.get(key.toString());\n    if (!value) {\n        if (acceptUndefined) {\n            return undefined;\n        }\n        throw new NoSuchEntry(key.toString());\n    }\n    // Make sure to return a copy, to protect the underlying data.\n    return Buffer.from(value);\n}\nclass Key {\n    constructor(keyType, keyData) {\n        this.keyType = keyType;\n        this.keyData = keyData;\n    }\n    toString() {\n        const buf = new BufferWriter();\n        this.toBuffer(buf);\n        return buf.buffer().toString(\"hex\");\n    }\n    serialize(buf) {\n        buf.writeVarInt(1 + this.keyData.length);\n        this.toBuffer(buf);\n    }\n    toBuffer(buf) {\n        buf.writeUInt8(this.keyType);\n        buf.writeSlice(this.keyData);\n    }\n}\nclass KeyPair {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    serialize(buf) {\n        this.key.serialize(buf);\n        buf.writeVarSlice(this.value);\n    }\n}\nfunction createKey(buf) {\n    return new Key(buf.readUInt8(0), buf.slice(1));\n}\nfunction serializeMap(buf, map) {\n    for (const k of map.keys()) {\n        const value = map.get(k);\n        const keyPair = new KeyPair(createKey(Buffer.from(k, \"hex\")), value);\n        keyPair.serialize(buf);\n    }\n    buf.writeUInt8(0);\n}\nfunction b() {\n    return Buffer.from([]);\n}\nfunction set(map, keyType, keyData, value) {\n    const key = new Key(keyType, keyData);\n    map.set(key.toString(), value);\n}\nfunction uint32LE(n) {\n    const b = Buffer.alloc(4);\n    b.writeUInt32LE(n, 0);\n    return b;\n}\nfunction uint64LE(n) {\n    return unsafeTo64bitLE(n);\n}\nfunction varint(n) {\n    const b = new BufferWriter();\n    b.writeVarInt(n);\n    return b.buffer();\n}\nfunction fromVarint(buf) {\n    return new BufferReader(buf).readVarInt();\n}\n//# sourceMappingURL=psbtv2.js.map",
    "import { BufferWriter } from \"../buffertools\";\nimport { psbtIn } from \"./psbtv2\";\n/**\n * This roughly implements the \"input finalizer\" role of BIP370 (PSBTv2\n * https://github.com/bitcoin/bips/blob/master/bip-0370.mediawiki). However\n * the role is documented in BIP174 (PSBTv0\n * https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).\n *\n * Verify that all inputs have a signature, and set inputFinalScriptwitness\n * and/or inputFinalScriptSig depending on the type of the spent outputs. Clean\n * fields that aren't useful anymore, partial signatures, redeem script and\n * derivation paths.\n *\n * @param psbt The psbt with all signatures added as partial sigs, either\n * through PSBT_IN_PARTIAL_SIG or PSBT_IN_TAP_KEY_SIG\n */\nexport function finalize(psbt) {\n    // First check that each input has a signature\n    const inputCount = psbt.getGlobalInputCount();\n    for (let i = 0; i < inputCount; i++) {\n        const legacyPubkeys = psbt.getInputKeyDatas(i, psbtIn.PARTIAL_SIG);\n        const taprootSig = psbt.getInputTapKeySig(i);\n        if (legacyPubkeys.length == 0 && !taprootSig) {\n            throw Error(`No signature for input ${i} present`);\n        }\n        if (legacyPubkeys.length > 0) {\n            if (legacyPubkeys.length > 1) {\n                throw Error(`Expected exactly one signature, got ${legacyPubkeys.length}`);\n            }\n            if (taprootSig) {\n                throw Error(\"Both taproot and non-taproot signatures present.\");\n            }\n            const isSegwitV0 = !!psbt.getInputWitnessUtxo(i);\n            const redeemScript = psbt.getInputRedeemScript(i);\n            const isWrappedSegwit = !!redeemScript;\n            const signature = psbt.getInputPartialSig(i, legacyPubkeys[0]);\n            if (!signature)\n                throw new Error(\"Expected partial signature for input \" + i);\n            if (isSegwitV0) {\n                const witnessBuf = new BufferWriter();\n                witnessBuf.writeVarInt(2);\n                witnessBuf.writeVarInt(signature.length);\n                witnessBuf.writeSlice(signature);\n                witnessBuf.writeVarInt(legacyPubkeys[0].length);\n                witnessBuf.writeSlice(legacyPubkeys[0]);\n                psbt.setInputFinalScriptwitness(i, witnessBuf.buffer());\n                if (isWrappedSegwit) {\n                    if (!redeemScript || redeemScript.length == 0) {\n                        throw new Error(\"Expected non-empty redeemscript. Can't finalize intput \" + i);\n                    }\n                    const scriptSigBuf = new BufferWriter();\n                    // Push redeemScript length\n                    scriptSigBuf.writeUInt8(redeemScript.length);\n                    scriptSigBuf.writeSlice(redeemScript);\n                    psbt.setInputFinalScriptsig(i, scriptSigBuf.buffer());\n                }\n            }\n            else {\n                // Legacy input\n                const scriptSig = new BufferWriter();\n                writePush(scriptSig, signature);\n                writePush(scriptSig, legacyPubkeys[0]);\n                psbt.setInputFinalScriptsig(i, scriptSig.buffer());\n            }\n        }\n        else {\n            // Taproot input\n            const signature = psbt.getInputTapKeySig(i);\n            if (!signature) {\n                throw Error(\"No taproot signature found\");\n            }\n            if (signature.length != 64 && signature.length != 65) {\n                throw Error(\"Unexpected length of schnorr signature.\");\n            }\n            const witnessBuf = new BufferWriter();\n            witnessBuf.writeVarInt(1);\n            witnessBuf.writeVarSlice(signature);\n            psbt.setInputFinalScriptwitness(i, witnessBuf.buffer());\n        }\n        clearFinalizedInput(psbt, i);\n    }\n}\n/**\n * Deletes fields that are no longer neccesary from the psbt.\n *\n * Note, the spec doesn't say anything about removing ouput fields\n * like PSBT_OUT_BIP32_DERIVATION_PATH and others, so we keep them\n * without actually knowing why. I think we should remove them too.\n */\nfunction clearFinalizedInput(psbt, inputIndex) {\n    const keyTypes = [\n        psbtIn.BIP32_DERIVATION,\n        psbtIn.PARTIAL_SIG,\n        psbtIn.TAP_BIP32_DERIVATION,\n        psbtIn.TAP_KEY_SIG,\n    ];\n    const witnessUtxoAvailable = !!psbt.getInputWitnessUtxo(inputIndex);\n    const nonWitnessUtxoAvailable = !!psbt.getInputNonWitnessUtxo(inputIndex);\n    if (witnessUtxoAvailable && nonWitnessUtxoAvailable) {\n        // Remove NON_WITNESS_UTXO for segwit v0 as it's only needed while signing.\n        // Segwit v1 doesn't have NON_WITNESS_UTXO set.\n        // See https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki#cite_note-7\n        keyTypes.push(psbtIn.NON_WITNESS_UTXO);\n    }\n    psbt.deleteInputEntries(inputIndex, keyTypes);\n}\n/**\n * Writes a script push operation to buf, which looks different\n * depending on the size of the data. See\n * https://en.bitcoin.it/wiki/Script#Constants\n *\n * @param buf the BufferWriter to write to\n * @param data the Buffer to be pushed.\n */\nfunction writePush(buf, data) {\n    if (data.length <= 75) {\n        buf.writeUInt8(data.length);\n    }\n    else if (data.length <= 256) {\n        buf.writeUInt8(76);\n        buf.writeUInt8(data.length);\n    }\n    else if (data.length <= 256 * 256) {\n        buf.writeUInt8(77);\n        const b = Buffer.alloc(2);\n        b.writeUInt16LE(data.length, 0);\n        buf.writeSlice(b);\n    }\n    buf.writeSlice(data);\n}\n//# sourceMappingURL=psbtFinalizer.js.map",
    "export function getVarint(data, offset) {\n    if (data[offset] < 0xfd) {\n        return [data[offset], 1];\n    }\n    if (data[offset] === 0xfd) {\n        return [(data[offset + 2] << 8) + data[offset + 1], 3];\n    }\n    if (data[offset] === 0xfe) {\n        return [\n            (data[offset + 4] << 24) +\n                (data[offset + 3] << 16) +\n                (data[offset + 2] << 8) +\n                data[offset + 1],\n            5,\n        ];\n    }\n    throw new Error(\"getVarint called with unexpected parameters\");\n}\nexport function createVarint(value) {\n    if (value < 0xfd) {\n        const buffer = Buffer.alloc(1);\n        buffer[0] = value;\n        return buffer;\n    }\n    if (value <= 0xffff) {\n        const buffer = Buffer.alloc(3);\n        buffer[0] = 0xfd;\n        buffer[1] = value & 0xff;\n        buffer[2] = (value >> 8) & 0xff;\n        return buffer;\n    }\n    const buffer = Buffer.alloc(5);\n    buffer[0] = 0xfe;\n    buffer[1] = value & 0xff;\n    buffer[2] = (value >> 8) & 0xff;\n    buffer[3] = (value >> 16) & 0xff;\n    buffer[4] = (value >> 24) & 0xff;\n    return buffer;\n}\n//# sourceMappingURL=varint.js.map",
    "import { createVarint } from \"./varint\";\n/**\n  @example\nconst tx1 = btc.splitTransaction(\"01000000014ea60aeac5252c14291d428915bd7ccd1bfc4af009f4d4dc57ae597ed0420b71010000008a47304402201f36a12c240dbf9e566bc04321050b1984cd6eaf6caee8f02bb0bfec08e3354b022012ee2aeadcbbfd1e92959f57c15c1c6debb757b798451b104665aa3010569b49014104090b15bde569386734abf2a2b99f9ca6a50656627e77de663ca7325702769986cf26cc9dd7fdea0af432c8e2becc867c932e1b9dd742f2a108997c2252e2bdebffffffff0281b72e00000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88aca0860100000000001976a9144533f5fb9b4817f713c48f0bfe96b9f50c476c9b88ac00000000\");\nconst outputScript = btc.serializeTransactionOutputs(tx1).toString('hex');\n  */\nexport function serializeTransactionOutputs({ outputs }) {\n    let outputBuffer = Buffer.alloc(0);\n    if (typeof outputs !== \"undefined\") {\n        outputBuffer = Buffer.concat([outputBuffer, createVarint(outputs.length)]);\n        outputs.forEach(output => {\n            outputBuffer = Buffer.concat([\n                outputBuffer,\n                output.amount,\n                createVarint(output.script.length),\n                output.script,\n            ]);\n        });\n    }\n    return outputBuffer;\n}\nexport function serializeTransaction(transaction, skipWitness, timestamp, additionals = []) {\n    const isDecred = additionals.includes(\"decred\");\n    const isZcash = additionals.includes(\"zcash\");\n    const isBech32 = additionals.includes(\"bech32\");\n    let inputBuffer = Buffer.alloc(0);\n    const useWitness = typeof transaction[\"witness\"] != \"undefined\" && !skipWitness;\n    transaction.inputs.forEach(input => {\n        inputBuffer =\n            isDecred || isBech32\n                ? Buffer.concat([\n                    inputBuffer,\n                    input.prevout,\n                    Buffer.from([0x00]), //tree\n                    input.sequence,\n                ])\n                : Buffer.concat([\n                    inputBuffer,\n                    input.prevout,\n                    createVarint(input.script.length),\n                    input.script,\n                    input.sequence,\n                ]);\n    });\n    let outputBuffer = serializeTransactionOutputs(transaction);\n    if (typeof transaction.outputs !== \"undefined\" && typeof transaction.locktime !== \"undefined\") {\n        outputBuffer = Buffer.concat([\n            outputBuffer,\n            (useWitness && transaction.witness) || Buffer.alloc(0),\n            transaction.locktime,\n            transaction.nExpiryHeight || Buffer.alloc(0),\n            transaction.extraData || Buffer.alloc(0),\n        ]);\n    }\n    // from to https://zips.z.cash/zip-0225, zcash is different with other coins, the lock_time and nExpiryHeight fields are before the inputs and outputs\n    if (isZcash) {\n        return Buffer.concat([\n            transaction.version,\n            transaction.nVersionGroupId || Buffer.alloc(0),\n            Buffer.from([0xb4, 0xd0, 0xd6, 0xc2]), // Zcash Consensus Branch ID: 0xC2D6D0B4 refer to https://z.cash/upgrade/nu5/\n            transaction.locktime || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n            transaction.nExpiryHeight || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n            useWitness ? Buffer.from(\"0001\", \"hex\") : Buffer.alloc(0),\n            createVarint(transaction.inputs.length),\n            inputBuffer,\n            outputBuffer,\n        ]);\n    }\n    return Buffer.concat([\n        transaction.version,\n        timestamp ? timestamp : Buffer.alloc(0),\n        transaction.nVersionGroupId || Buffer.alloc(0),\n        useWitness ? Buffer.from(\"0001\", \"hex\") : Buffer.alloc(0),\n        createVarint(transaction.inputs.length),\n        inputBuffer,\n        outputBuffer,\n    ]);\n}\n//# sourceMappingURL=serializeTransaction.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport bs58 from \"bs58\";\nimport RIPEMD160 from \"ripemd160\";\nimport sha from \"sha.js\";\nimport { createTransaction } from \"./createTransaction\";\nimport { getWalletPublicKey } from \"./getWalletPublicKey\";\nimport { pathArrayToString, pathStringToArray } from \"./bip32\";\nimport { signMessage } from \"./signMessage\";\n/**\n * @class BtcOld\n * @description This Bitcoin old API is compatible with versions of the Bitcoin nano app that are earlier than 2.1.0\n *\n */\nexport default class BtcOld {\n    constructor(transport) {\n        this.transport = transport;\n        this.derivationsCache = {};\n    }\n    derivatePath(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.derivationsCache[path])\n                return this.derivationsCache[path];\n            const res = yield getWalletPublicKey(this.transport, {\n                path,\n            });\n            this.derivationsCache[path] = res;\n            return res;\n        });\n    }\n    getWalletXpub(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ path, xpubVersion, }) {\n            const pathElements = pathStringToArray(path);\n            const parentPath = pathElements.slice(0, -1);\n            const parentDerivation = yield this.derivatePath(pathArrayToString(parentPath));\n            const accountDerivation = yield this.derivatePath(path);\n            const fingerprint = makeFingerprint(compressPublicKeySECP256(Buffer.from(parentDerivation.publicKey, \"hex\")));\n            const xpub = makeXpub(xpubVersion, pathElements.length, fingerprint, pathElements[pathElements.length - 1], Buffer.from(accountDerivation.chainCode, \"hex\"), compressPublicKeySECP256(Buffer.from(accountDerivation.publicKey, \"hex\")));\n            return xpub;\n        });\n    }\n    /**\n     * @param path a BIP 32 path\n     * @param options an object with optional these fields:\n     *\n     * - verify (boolean) will ask user to confirm the address on the device\n     *\n     * - format (\"legacy\" | \"p2sh\" | \"bech32\" | \"bech32m\" | \"cashaddr\") to use different bitcoin address formatter.\n     *\n     * NB The normal usage is to use:\n     *\n     * - legacy format with 44' paths\n     *\n     * - p2sh format with 49' paths\n     *\n     * - bech32 format with 84' paths\n     *\n     * - bech32m format with 86' paths\n     *\n     * - cashaddr in case of Bitcoin Cash\n     *\n     * @example\n     * btc.getWalletPublicKey(\"44'/0'/0'/0/0\").then(o => o.bitcoinAddress)\n     * btc.getWalletPublicKey(\"49'/0'/0'/0/0\", { format: \"p2sh\" }).then(o => o.bitcoinAddress)\n     */\n    getWalletPublicKey(path, opts) {\n        if ((opts === null || opts === void 0 ? void 0 : opts.format) === \"bech32m\") {\n            throw new Error(\"Unsupported address format bech32m\");\n        }\n        return getWalletPublicKey(this.transport, Object.assign(Object.assign({}, opts), { path }));\n    }\n    /**\n     * To sign a transaction involving standard (P2PKH) inputs, call createTransaction with the following parameters\n     * @param inputs is an array of [ transaction, output_index, optional redeem script, optional sequence ] where\n     *\n     * * transaction is the previously computed transaction object for this UTXO\n     * * output_index is the output in the transaction used as input for this UTXO (counting from 0)\n     * * redeem script is the optional redeem script to use when consuming a Segregated Witness input\n     * * sequence is the sequence number to use for this input (when using RBF), or non present\n     * @param associatedKeysets is an array of BIP 32 paths pointing to the path to the private key used for each UTXO\n     * @param changePath is an optional BIP 32 path pointing to the path to the public key used to compute the change address\n     * @param outputScriptHex is the hexadecimal serialized outputs of the transaction to sign\n     * @param lockTime is the optional lockTime of the transaction to sign, or default (0)\n     * @param sigHashType is the hash type of the transaction to sign, or default (all)\n     * @param segwit is an optional boolean indicating wether to use segwit or not\n     * @param initialTimestamp is an optional timestamp of the function call to use for coins that necessitate timestamps only, (not the one that the tx will include)\n     * @param additionals list of additionnal options\n     *\n     * - \"bech32\" for spending native segwit outputs\n     * - \"abc\" for bch\n     * - \"gold\" for btg\n     * - \"decred\" for decred\n     * - \"zcash\" for zcash\n     * - \"bipxxx\" for using BIPxxx\n     * - \"sapling\" to indicate a zec transaction is supporting sapling (to be set over block 419200)\n     * @param expiryHeight is an optional Buffer for zec overwinter / sapling Txs\n     * @param useTrustedInputForSegwit trust inputs for segwit transactions\n     * @return the signed transaction ready to be broadcast\n     * @example\n    btc.createTransaction({\n     inputs: [ [tx1, 1] ],\n     associatedKeysets: [\"0'/0/0\"],\n     outputScriptHex: \"01905f0100000000001976a91472a5d75c8d2d0565b656a5232703b167d50d5a2b88ac\"\n    }).then(res => ...);\n     */\n    createPaymentTransaction(arg) {\n        if (arguments.length > 1) {\n            throw new Error(\"@ledgerhq/hw-app-btc: createPaymentTransaction multi argument signature is deprecated. please switch to named parameters.\");\n        }\n        return createTransaction(this.transport, arg);\n    }\n    signMessage(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ path, messageHex }) {\n            return signMessage(this.transport, {\n                path,\n                messageHex,\n            });\n        });\n    }\n}\nfunction makeFingerprint(compressedPubKey) {\n    return hash160(compressedPubKey).slice(0, 4);\n}\nfunction asBufferUInt32BE(n) {\n    const buf = Buffer.allocUnsafe(4);\n    buf.writeUInt32BE(n, 0);\n    return buf;\n}\nconst compressPublicKeySECP256 = (publicKey) => Buffer.concat([Buffer.from([0x02 + (publicKey[64] & 0x01)]), publicKey.slice(1, 33)]);\nfunction makeXpub(version, depth, parentFingerprint, index, chainCode, pubKey) {\n    const indexBuffer = asBufferUInt32BE(index);\n    indexBuffer[0] |= 0x80;\n    const extendedKeyBytes = Buffer.concat([\n        asBufferUInt32BE(version),\n        Buffer.from([depth]),\n        parentFingerprint,\n        indexBuffer,\n        chainCode,\n        pubKey,\n    ]);\n    const checksum = hash256(extendedKeyBytes).slice(0, 4);\n    return bs58.encode(Buffer.concat([extendedKeyBytes, checksum]));\n}\nfunction sha256(buffer) {\n    return sha(\"sha256\").update(buffer).digest();\n}\nfunction hash256(buffer) {\n    return sha256(sha256(buffer));\n}\nfunction ripemd160(buffer) {\n    return new RIPEMD160().update(buffer).digest();\n}\nfunction hash160(buffer) {\n    return ripemd160(sha256(buffer));\n}\n//# sourceMappingURL=BtcOld.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { bip32asBuffer } from \"./bip32\";\nconst addressFormatMap = {\n    legacy: 0,\n    p2sh: 1,\n    bech32: 2,\n    cashaddr: 3,\n};\nexport function getWalletPublicKey(transport, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { path, verify, format } = Object.assign({ verify: false, format: \"legacy\" }, options);\n        if (!(format in addressFormatMap)) {\n            throw new Error(\"btc.getWalletPublicKey invalid format=\" + format);\n        }\n        const buffer = bip32asBuffer(path);\n        const p1 = verify ? 1 : 0;\n        const p2 = addressFormatMap[format];\n        const response = yield transport.send(0xe0, 0x40, p1, p2, buffer);\n        const publicKeyLength = response[0];\n        const addressLength = response[1 + publicKeyLength];\n        const publicKey = response.slice(1, 1 + publicKeyLength).toString(\"hex\");\n        const bitcoinAddress = response\n            .slice(1 + publicKeyLength + 1, 1 + publicKeyLength + 1 + addressLength)\n            .toString(\"ascii\");\n        const chainCode = response\n            .slice(1 + publicKeyLength + 1 + addressLength, 1 + publicKeyLength + 1 + addressLength + 32)\n            .toString(\"hex\");\n        return {\n            publicKey,\n            bitcoinAddress,\n            chainCode,\n        };\n    });\n}\n//# sourceMappingURL=getWalletPublicKey.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport invariant from \"invariant\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nimport { createVarint } from \"./varint\";\nexport function getTrustedInputRaw(transport, transactionData, indexLookup) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let data;\n        let firstRound = false;\n        if (typeof indexLookup === \"number\") {\n            firstRound = true;\n            const prefix = Buffer.alloc(4);\n            prefix.writeUInt32BE(indexLookup, 0);\n            data = Buffer.concat([prefix, transactionData], transactionData.length + 4);\n        }\n        else {\n            data = transactionData;\n        }\n        const trustedInput = yield transport.send(0xe0, 0x42, firstRound ? 0x00 : 0x80, 0x00, data);\n        const res = trustedInput.slice(0, trustedInput.length - 2).toString(\"hex\");\n        return res;\n    });\n}\nexport function getTrustedInput(transport_1, indexLookup_1, transaction_1) {\n    return __awaiter(this, arguments, void 0, function* (transport, indexLookup, transaction, additionals = []) {\n        const { version, inputs, outputs, locktime, nExpiryHeight, extraData } = transaction;\n        if (!outputs || !locktime) {\n            throw new Error(\"getTrustedInput: locktime & outputs is expected\");\n        }\n        const isDecred = additionals.includes(\"decred\");\n        const isXST = additionals.includes(\"stealthcoin\");\n        const processScriptBlocks = (script, sequence) => __awaiter(this, void 0, void 0, function* () {\n            const seq = sequence || Buffer.alloc(0);\n            const scriptBlocks = [];\n            let offset = 0;\n            while (offset !== script.length) {\n                const blockSize = script.length - offset > MAX_SCRIPT_BLOCK ? MAX_SCRIPT_BLOCK : script.length - offset;\n                if (offset + blockSize !== script.length) {\n                    scriptBlocks.push(script.slice(offset, offset + blockSize));\n                }\n                else {\n                    scriptBlocks.push(Buffer.concat([script.slice(offset, offset + blockSize), seq]));\n                }\n                offset += blockSize;\n            }\n            // Handle case when no script length: we still want to pass the sequence\n            // relatable: https://github.com/LedgerHQ/ledger-live-desktop/issues/1386\n            if (script.length === 0) {\n                scriptBlocks.push(seq);\n            }\n            let res;\n            for (const scriptBlock of scriptBlocks) {\n                res = yield getTrustedInputRaw(transport, scriptBlock);\n            }\n            return res;\n        });\n        const processWholeScriptBlock = block => getTrustedInputRaw(transport, block);\n        yield getTrustedInputRaw(transport, Buffer.concat([\n            transaction.version,\n            transaction.timestamp || Buffer.alloc(0),\n            transaction.nVersionGroupId || Buffer.alloc(0),\n            createVarint(inputs.length),\n        ]), indexLookup);\n        for (const input of inputs) {\n            const isXSTV2 = isXST && Buffer.compare(version, Buffer.from([0x02, 0x00, 0x00, 0x00])) === 0;\n            const treeField = isDecred ? input.tree || Buffer.from([0x00]) : Buffer.alloc(0);\n            const data = Buffer.concat([\n                input.prevout,\n                treeField,\n                isXSTV2 ? Buffer.from([0x00]) : createVarint(input.script.length),\n            ]);\n            yield getTrustedInputRaw(transport, data);\n            // iteration (eachSeries) ended\n            // TODO notify progress\n            // deferred.notify(\"input\");\n            // Reference: https://github.com/StealthSend/Stealth/commit/5be35d6c2c500b32ed82e5d6913d66d18a4b0a7f#diff-e8db9b851adc2422aadfffca88f14c91R566\n            yield (isDecred\n                ? processWholeScriptBlock(Buffer.concat([input.script, input.sequence]))\n                : isXSTV2\n                    ? processWholeScriptBlock(input.sequence)\n                    : processScriptBlocks(input.script, input.sequence));\n        }\n        yield getTrustedInputRaw(transport, createVarint(outputs.length));\n        for (const output of outputs) {\n            const data = Buffer.concat([\n                output.amount,\n                isDecred ? Buffer.from([0x00, 0x00]) : Buffer.alloc(0), //Version script\n                createVarint(output.script.length),\n                output.script,\n            ]);\n            yield getTrustedInputRaw(transport, data);\n        }\n        const endData = [];\n        if (nExpiryHeight && nExpiryHeight.length > 0) {\n            endData.push(nExpiryHeight);\n        }\n        if (extraData && extraData.length > 0) {\n            endData.push(extraData);\n        }\n        let extraPart;\n        if (endData.length) {\n            const data = Buffer.concat(endData);\n            extraPart = isDecred ? data : Buffer.concat([createVarint(data.length), data]);\n        }\n        const res = yield processScriptBlocks(Buffer.concat([locktime, extraPart || Buffer.alloc(0)]));\n        invariant(res, \"missing result in processScriptBlocks\");\n        return res;\n    });\n}\n//# sourceMappingURL=getTrustedInput.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createVarint } from \"./varint\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport function startUntrustedHashTransactionInputRaw(transport, newTransaction, firstRound, transactionData, bip143 = false, overwinter = false, additionals = []) {\n    const p2 = additionals.includes(\"cashaddr\")\n        ? 0x03\n        : bip143\n            ? additionals.includes(\"sapling\")\n                ? 0x05\n                : overwinter\n                    ? 0x04\n                    : 0x02\n            : 0x00;\n    return transport.send(0xe0, 0x44, firstRound ? 0x00 : 0x80, newTransaction ? p2 : 0x80, transactionData);\n}\nexport function startUntrustedHashTransactionInput(transport_1, newTransaction_1, transaction_1, inputs_1) {\n    return __awaiter(this, arguments, void 0, function* (transport, newTransaction, transaction, inputs, bip143 = false, overwinter = false, additionals = [], useTrustedInputForSegwit = false) {\n        let data = Buffer.concat([\n            transaction.version,\n            transaction.timestamp || Buffer.alloc(0),\n            transaction.nVersionGroupId || Buffer.alloc(0),\n            createVarint(transaction.inputs.length),\n        ]);\n        yield startUntrustedHashTransactionInputRaw(transport, newTransaction, true, data, bip143, overwinter, additionals);\n        let i = 0;\n        const isDecred = additionals.includes(\"decred\");\n        for (const input of transaction.inputs) {\n            let prefix;\n            const inputValue = inputs[i].value;\n            if (bip143) {\n                if (useTrustedInputForSegwit && inputs[i].trustedInput) {\n                    prefix = Buffer.from([0x01, inputValue.length]);\n                }\n                else {\n                    prefix = Buffer.from([0x02]);\n                }\n            }\n            else {\n                if (inputs[i].trustedInput) {\n                    prefix = Buffer.from([0x01, inputs[i].value.length]);\n                }\n                else {\n                    prefix = Buffer.from([0x00]);\n                }\n            }\n            data = Buffer.concat([\n                prefix,\n                inputValue,\n                isDecred ? Buffer.from([0x00]) : Buffer.alloc(0),\n                createVarint(input.script.length),\n            ]);\n            yield startUntrustedHashTransactionInputRaw(transport, newTransaction, false, data, bip143, overwinter, additionals);\n            const scriptBlocks = [];\n            let offset = 0;\n            if (input.script.length === 0) {\n                scriptBlocks.push(input.sequence);\n            }\n            else {\n                while (offset !== input.script.length) {\n                    const blockSize = input.script.length - offset > MAX_SCRIPT_BLOCK\n                        ? MAX_SCRIPT_BLOCK\n                        : input.script.length - offset;\n                    if (offset + blockSize !== input.script.length) {\n                        scriptBlocks.push(input.script.slice(offset, offset + blockSize));\n                    }\n                    else {\n                        scriptBlocks.push(Buffer.concat([input.script.slice(offset, offset + blockSize), input.sequence]));\n                    }\n                    offset += blockSize;\n                }\n            }\n            for (const scriptBlock of scriptBlocks) {\n                yield startUntrustedHashTransactionInputRaw(transport, newTransaction, false, scriptBlock, bip143, overwinter, additionals);\n            }\n            i++;\n        }\n    });\n}\n//# sourceMappingURL=startUntrustedHashTransactionInput.js.map",
    "import shajs from \"sha.js\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nexport function getTrustedInputBIP143(transport, indexLookup, transaction, additionals = []) {\n    if (!transaction) {\n        throw new Error(\"getTrustedInputBIP143: missing tx\");\n    }\n    const isDecred = additionals.includes(\"decred\");\n    if (isDecred) {\n        throw new Error(\"Decred does not implement BIP143\");\n    }\n    let hash = shajs(\"sha256\")\n        .update(shajs(\"sha256\").update(serializeTransaction(transaction, true)).digest())\n        .digest();\n    const data = Buffer.alloc(4);\n    data.writeUInt32LE(indexLookup, 0);\n    const { outputs, locktime } = transaction;\n    if (!outputs || !locktime) {\n        throw new Error(\"getTrustedInputBIP143: locktime & outputs is expected\");\n    }\n    if (!outputs[indexLookup]) {\n        throw new Error(\"getTrustedInputBIP143: wrong index\");\n    }\n    hash = Buffer.concat([hash, data, outputs[indexLookup].amount]);\n    return hash.toString(\"hex\");\n}\n//# sourceMappingURL=getTrustedInputBIP143.js.map",
    "export function compressPublicKey(publicKey) {\n    const prefix = (publicKey[64] & 1) !== 0 ? 0x03 : 0x02;\n    const prefixBuffer = Buffer.alloc(1);\n    prefixBuffer[0] = prefix;\n    return Buffer.concat([prefixBuffer, publicKey.slice(1, 1 + 32)]);\n}\n//# sourceMappingURL=compressPublicKey.js.map",
    "import { bip32asBuffer } from \"./bip32\";\nexport function signTransaction(transport, path, lockTime, sigHashType, expiryHeight, additionals = []) {\n    const isDecred = additionals.includes(\"decred\");\n    const pathsBuffer = bip32asBuffer(path);\n    const lockTimeBuffer = Buffer.alloc(4);\n    lockTimeBuffer.writeUInt32BE(lockTime, 0);\n    let buffer = isDecred\n        ? Buffer.concat([\n            pathsBuffer,\n            lockTimeBuffer,\n            expiryHeight || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n            Buffer.from([sigHashType]),\n        ])\n        : Buffer.concat([pathsBuffer, Buffer.from([0x00]), lockTimeBuffer, Buffer.from([sigHashType])]);\n    if (expiryHeight && !isDecred) {\n        buffer = Buffer.concat([buffer, expiryHeight]);\n    }\n    return transport.send(0xe0, 0x48, 0x00, 0x00, buffer).then(result => {\n        if (result.length > 0) {\n            result[0] = 0x30;\n            return result.slice(0, result.length - 2);\n        }\n        return result;\n    });\n}\n//# sourceMappingURL=signTransaction.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { bip32asBuffer } from \"./bip32\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport function provideOutputFullChangePath(transport, path) {\n    const buffer = bip32asBuffer(path);\n    return transport.send(0xe0, 0x4a, 0xff, 0x00, buffer);\n}\nexport function hashOutputFull(transport_1, outputScript_1) {\n    return __awaiter(this, arguments, void 0, function* (transport, outputScript, additionals = []) {\n        let offset = 0;\n        const p1 = Number(0x80);\n        const isDecred = additionals.includes(\"decred\");\n        ///WARNING: Decred works only with one call (without chunking)\n        //TODO: test without this for Decred\n        if (isDecred) {\n            return transport.send(0xe0, 0x4a, p1, 0x00, outputScript);\n        }\n        while (offset < outputScript.length) {\n            const blockSize = offset + MAX_SCRIPT_BLOCK >= outputScript.length\n                ? outputScript.length - offset\n                : MAX_SCRIPT_BLOCK;\n            const p1 = offset + blockSize === outputScript.length ? 0x80 : 0x00;\n            const data = outputScript.slice(offset, offset + blockSize);\n            yield transport.send(0xe0, 0x4a, p1, 0x00, data);\n            offset += blockSize;\n        }\n    });\n}\n//# sourceMappingURL=finalizeInput.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport invariant from \"invariant\";\nexport const getAppAndVersion = (transport) => __awaiter(void 0, void 0, void 0, function* () {\n    const r = yield transport.send(0xb0, 0x01, 0x00, 0x00);\n    let i = 0;\n    const format = r[i++];\n    invariant(format === 1, \"getAppAndVersion: format not supported\");\n    const nameLength = r[i++];\n    const name = r.slice(i, (i += nameLength)).toString(\"ascii\");\n    const versionLength = r[i++];\n    const version = r.slice(i, (i += versionLength)).toString(\"ascii\");\n    const flagLength = r[i++];\n    const flags = r.slice(i, (i += flagLength));\n    return {\n        name,\n        version,\n        flags,\n    };\n});\nexport const checkIsBtcLegacy = (transport) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        // Call old btc API, it will throw an exception with new btc app. It is a workaround to differentiate new/old btc nano app\n        yield transport.send(0xe0, 0xc4, 0, 0);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n});\n//# sourceMappingURL=getAppAndVersion.js.map",
    "import semver from \"semver\";\nexport function shouldUseTrustedInputForSegwit({ version, name, }) {\n    if (name === \"Decred\")\n        return false;\n    if (name === \"Exchange\")\n        return true;\n    return semver.gte(version, \"1.4.0\");\n}\n//# sourceMappingURL=shouldUseTrustedInputForSegwit.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { log } from \"@ledgerhq/logs\";\nimport { hashPublicKey } from \"./hashPublicKey\";\nimport { getWalletPublicKey } from \"./getWalletPublicKey\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { startUntrustedHashTransactionInput } from \"./startUntrustedHashTransactionInput\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { compressPublicKey } from \"./compressPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { hashOutputFull, provideOutputFullChangePath } from \"./finalizeInput\";\nimport { getAppAndVersion } from \"./getAppAndVersion\";\nimport { DEFAULT_LOCKTIME, DEFAULT_SEQUENCE, SIGHASH_ALL, OP_DUP, OP_HASH160, HASH_SIZE, OP_EQUALVERIFY, OP_CHECKSIG, } from \"./constants\";\nimport { shouldUseTrustedInputForSegwit } from \"./shouldUseTrustedInputForSegwit\";\nconst defaultsSignTransaction = {\n    lockTime: DEFAULT_LOCKTIME,\n    sigHashType: SIGHASH_ALL,\n    segwit: false,\n    additionals: [],\n    onDeviceStreaming: _e => { },\n    onDeviceSignatureGranted: () => { },\n    onDeviceSignatureRequested: () => { },\n};\nexport function createTransaction(transport, arg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const signTx = Object.assign(Object.assign({}, defaultsSignTransaction), arg);\n        const { inputs, associatedKeysets, changePath, outputScriptHex, lockTime, sigHashType, segwit, initialTimestamp, additionals, expiryHeight, onDeviceStreaming, onDeviceSignatureGranted, onDeviceSignatureRequested, } = signTx;\n        let useTrustedInputForSegwit = signTx.useTrustedInputForSegwit;\n        if (useTrustedInputForSegwit === undefined) {\n            try {\n                const a = yield getAppAndVersion(transport);\n                useTrustedInputForSegwit = shouldUseTrustedInputForSegwit(a);\n            }\n            catch (e) {\n                if (e.statusCode === 0x6d00) {\n                    useTrustedInputForSegwit = false;\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        // loop: 0 or 1 (before and after)\n        // i: index of the input being streamed\n        // i goes on 0...n, inluding n. in order for the progress value to go to 1\n        // we normalize the 2 loops to make a global percentage\n        const notify = (loop, i) => {\n            const { length } = inputs;\n            if (length < 3)\n                return; // there is not enough significant event to worth notifying (aka just use a spinner)\n            const index = length * loop + i;\n            const total = 2 * length;\n            const progress = index / total;\n            onDeviceStreaming({\n                progress,\n                total,\n                index,\n            });\n        };\n        const isDecred = additionals.includes(\"decred\");\n        const isZcash = additionals.includes(\"zcash\");\n        const isXST = additionals.includes(\"stealthcoin\");\n        const startTime = Date.now();\n        const sapling = additionals.includes(\"sapling\");\n        const bech32 = segwit && additionals.includes(\"bech32\");\n        const useBip143 = segwit ||\n            (!!additionals &&\n                (additionals.includes(\"abc\") ||\n                    additionals.includes(\"gold\") ||\n                    additionals.includes(\"bip143\"))) ||\n            (!!expiryHeight && !isDecred);\n        // Inputs are provided as arrays of [transaction, output_index, optional redeem script, optional sequence]\n        // associatedKeysets are provided as arrays of [path]\n        const lockTimeBuffer = Buffer.alloc(4);\n        lockTimeBuffer.writeUInt32LE(lockTime, 0);\n        const nullScript = Buffer.alloc(0);\n        const nullPrevout = Buffer.alloc(0);\n        const defaultVersion = Buffer.alloc(4);\n        !!expiryHeight && !isDecred\n            ? defaultVersion.writeUInt32LE(isZcash ? 0x80000005 : sapling ? 0x80000004 : 0x80000003, 0) // v5 format for zcash refer to https://zips.z.cash/zip-0225\n            : isXST\n                ? defaultVersion.writeUInt32LE(2, 0)\n                : defaultVersion.writeUInt32LE(1, 0);\n        // Default version to 2 for XST not to have timestamp\n        const trustedInputs = [];\n        const regularOutputs = [];\n        const signatures = [];\n        const publicKeys = [];\n        let firstRun = true;\n        const resuming = false;\n        const targetTransaction = {\n            inputs: [],\n            version: defaultVersion,\n            timestamp: Buffer.alloc(0),\n        };\n        const getTrustedInputCall = useBip143 && !useTrustedInputForSegwit ? getTrustedInputBIP143 : getTrustedInput;\n        const outputScript = Buffer.from(outputScriptHex, \"hex\");\n        notify(0, 0);\n        // first pass on inputs to get trusted inputs\n        for (const input of inputs) {\n            if (!resuming) {\n                const trustedInput = yield getTrustedInputCall(transport, input[1], input[0], additionals);\n                log(\"hw\", \"got trustedInput=\" + trustedInput);\n                const sequence = Buffer.alloc(4);\n                sequence.writeUInt32LE(input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE, 0);\n                trustedInputs.push({\n                    trustedInput: true,\n                    value: Buffer.from(trustedInput, \"hex\"),\n                    sequence,\n                });\n            }\n            const { outputs } = input[0];\n            const index = input[1];\n            if (outputs && index <= outputs.length - 1) {\n                regularOutputs.push(outputs[index]);\n            }\n            if (expiryHeight && !isDecred) {\n                targetTransaction.nVersionGroupId = Buffer.from(\n                // nVersionGroupId is 0x26A7270A for zcash NU5 upgrade\n                // refer to https://github.com/zcash/zcash/blob/master/src/primitives/transaction.h\n                isZcash\n                    ? [0x0a, 0x27, 0xa7, 0x26]\n                    : sapling\n                        ? [0x85, 0x20, 0x2f, 0x89]\n                        : [0x70, 0x82, 0xc4, 0x03]);\n                targetTransaction.nExpiryHeight = expiryHeight;\n                // For sapling : valueBalance (8), nShieldedSpend (1), nShieldedOutput (1), nJoinSplit (1)\n                // Overwinter : use nJoinSplit (1)\n                targetTransaction.extraData = Buffer.from(sapling ? [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00] : [0x00]);\n            }\n            else if (isDecred) {\n                targetTransaction.nExpiryHeight = expiryHeight;\n            }\n        }\n        targetTransaction.inputs = inputs.map((input, idx) => {\n            const sequence = Buffer.alloc(4);\n            sequence.writeUInt32LE(input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE, 0);\n            return {\n                script: isZcash ? regularOutputs[idx].script : nullScript,\n                prevout: nullPrevout,\n                sequence,\n            };\n        });\n        if (!resuming) {\n            // Collect public keys\n            const result = [];\n            for (let i = 0; i < inputs.length; i++) {\n                const r = yield getWalletPublicKey(transport, {\n                    path: associatedKeysets[i],\n                });\n                notify(0, i + 1);\n                result.push(r);\n            }\n            for (let i = 0; i < result.length; i++) {\n                publicKeys.push(compressPublicKey(Buffer.from(result[i].publicKey, \"hex\")));\n            }\n        }\n        if (initialTimestamp !== undefined) {\n            targetTransaction.timestamp = Buffer.alloc(4);\n            targetTransaction.timestamp.writeUInt32LE(Math.floor(initialTimestamp + (Date.now() - startTime) / 1000), 0);\n        }\n        onDeviceSignatureRequested();\n        if (useBip143) {\n            // Do the first run with all inputs\n            yield startUntrustedHashTransactionInput(transport, true, targetTransaction, trustedInputs, true, !!expiryHeight, additionals, useTrustedInputForSegwit);\n            if (!resuming && changePath) {\n                yield provideOutputFullChangePath(transport, changePath);\n            }\n            yield hashOutputFull(transport, outputScript);\n        }\n        if (!!expiryHeight && !isDecred) {\n            yield signTransaction(transport, \"\", lockTime, SIGHASH_ALL, expiryHeight);\n        }\n        // Do the second run with the individual transaction\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            const script = inputs[i].length >= 3 && typeof input[2] === \"string\"\n                ? Buffer.from(input[2], \"hex\")\n                : !segwit\n                    ? regularOutputs[i].script\n                    : Buffer.concat([\n                        Buffer.from([OP_DUP, OP_HASH160, HASH_SIZE]),\n                        hashPublicKey(publicKeys[i]),\n                        Buffer.from([OP_EQUALVERIFY, OP_CHECKSIG]),\n                    ]);\n            const pseudoTX = Object.assign({}, targetTransaction);\n            const pseudoTrustedInputs = useBip143 ? [trustedInputs[i]] : trustedInputs;\n            if (useBip143) {\n                pseudoTX.inputs = [Object.assign(Object.assign({}, pseudoTX.inputs[i]), { script })];\n            }\n            else {\n                pseudoTX.inputs[i].script = script;\n            }\n            yield startUntrustedHashTransactionInput(transport, !useBip143 && firstRun, pseudoTX, pseudoTrustedInputs, useBip143, !!expiryHeight && !isDecred, additionals, useTrustedInputForSegwit);\n            if (!useBip143) {\n                if (!resuming && changePath) {\n                    yield provideOutputFullChangePath(transport, changePath);\n                }\n                yield hashOutputFull(transport, outputScript, additionals);\n            }\n            if (firstRun) {\n                onDeviceSignatureGranted();\n                notify(1, 0);\n            }\n            const signature = yield signTransaction(transport, associatedKeysets[i], lockTime, sigHashType, expiryHeight, additionals);\n            notify(1, i + 1);\n            signatures.push(signature);\n            targetTransaction.inputs[i].script = nullScript;\n            if (firstRun) {\n                firstRun = false;\n            }\n        }\n        // Populate the final input scripts\n        for (let i = 0; i < inputs.length; i++) {\n            if (segwit) {\n                targetTransaction.witness = Buffer.alloc(0);\n                if (!bech32) {\n                    targetTransaction.inputs[i].script = Buffer.concat([\n                        Buffer.from(\"160014\", \"hex\"),\n                        hashPublicKey(publicKeys[i]),\n                    ]);\n                }\n            }\n            else {\n                const signatureSize = Buffer.alloc(1);\n                const keySize = Buffer.alloc(1);\n                signatureSize[0] = signatures[i].length;\n                keySize[0] = publicKeys[i].length;\n                targetTransaction.inputs[i].script = Buffer.concat([\n                    signatureSize,\n                    signatures[i],\n                    keySize,\n                    publicKeys[i],\n                ]);\n            }\n            const offset = useBip143 && !useTrustedInputForSegwit ? 0 : 4;\n            targetTransaction.inputs[i].prevout = trustedInputs[i].value.slice(offset, offset + 0x24);\n        }\n        targetTransaction.locktime = lockTimeBuffer;\n        let result = Buffer.concat([\n            serializeTransaction(targetTransaction, false, targetTransaction.timestamp, additionals),\n            outputScript,\n        ]);\n        if (segwit && !isDecred) {\n            let witness = Buffer.alloc(0);\n            for (let i = 0; i < inputs.length; i++) {\n                const tmpScriptData = Buffer.concat([\n                    Buffer.from(\"02\", \"hex\"),\n                    Buffer.from([signatures[i].length]),\n                    signatures[i],\n                    Buffer.from([publicKeys[i].length]),\n                    publicKeys[i],\n                ]);\n                witness = Buffer.concat([witness, tmpScriptData]);\n            }\n            result = Buffer.concat([result, witness]);\n        }\n        // from to https://zips.z.cash/zip-0225, zcash is different with other coins, the lock_time and nExpiryHeight fields are before the inputs and outputs\n        if (!isZcash) {\n            result = Buffer.concat([result, lockTimeBuffer]);\n            if (expiryHeight) {\n                result = Buffer.concat([\n                    result,\n                    targetTransaction.nExpiryHeight || Buffer.alloc(0),\n                    targetTransaction.extraData || Buffer.alloc(0),\n                ]);\n            }\n        }\n        if (isDecred) {\n            let decredWitness = Buffer.from([targetTransaction.inputs.length]);\n            inputs.forEach((input, inputIndex) => {\n                decredWitness = Buffer.concat([\n                    decredWitness,\n                    Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n                    Buffer.from([0x00, 0x00, 0x00, 0x00]), //Block height\n                    Buffer.from([0xff, 0xff, 0xff, 0xff]), //Block index\n                    Buffer.from([targetTransaction.inputs[inputIndex].script.length]),\n                    targetTransaction.inputs[inputIndex].script,\n                ]);\n            });\n            result = Buffer.concat([result, decredWitness]);\n        }\n        if (isZcash) {\n            result = Buffer.concat([result, Buffer.from([0x00, 0x00, 0x00])]);\n        }\n        return result.toString(\"hex\");\n    });\n}\n//# sourceMappingURL=createTransaction.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport bippath from \"bip32-path\";\nimport { MAX_SCRIPT_BLOCK } from \"./constants\";\nexport function signMessage(transport_1, _a) {\n    return __awaiter(this, arguments, void 0, function* (transport, { path, messageHex, }) {\n        const paths = bippath.fromString(path).toPathArray();\n        const message = Buffer.from(messageHex, \"hex\");\n        let offset = 0;\n        while (offset !== message.length) {\n            const maxChunkSize = offset === 0 ? MAX_SCRIPT_BLOCK - 1 - paths.length * 4 - 4 : MAX_SCRIPT_BLOCK;\n            const chunkSize = offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n            const buffer = Buffer.alloc(offset === 0 ? 1 + paths.length * 4 + 2 + chunkSize : chunkSize);\n            if (offset === 0) {\n                buffer[0] = paths.length;\n                paths.forEach((element, index) => {\n                    buffer.writeUInt32BE(element, 1 + 4 * index);\n                });\n                buffer.writeUInt16BE(message.length, 1 + 4 * paths.length);\n                message.copy(buffer, 1 + 4 * paths.length + 2, offset, offset + chunkSize);\n            }\n            else {\n                message.copy(buffer, 0, offset, offset + chunkSize);\n            }\n            yield transport.send(0xe0, 0x4e, 0x00, offset === 0 ? 0x01 : 0x80, buffer);\n            offset += chunkSize;\n        }\n        const res = yield transport.send(0xe0, 0x4e, 0x80, 0x00, Buffer.from([0x00]));\n        const v = res[0] - 0x30;\n        let r = res.slice(4, 4 + res[3]);\n        if (r[0] === 0) {\n            r = r.slice(1);\n        }\n        r = r.toString(\"hex\");\n        offset = 4 + res[3] + 2;\n        let s = res.slice(offset, offset + res[offset - 1]);\n        if (s[0] === 0) {\n            s = s.slice(1);\n        }\n        s = s.toString(\"hex\");\n        return {\n            v,\n            r,\n            s,\n        };\n    });\n}\n//# sourceMappingURL=signMessage.js.map",
    "import { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\n/**\n * This implements \"Merkelized Maps\", documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/merkle.md#merkleized-maps\n *\n * A merkelized map consist of two merkle trees, one for the keys of\n * a map and one for the values of the same map, thus the two merkle\n * trees have the same shape. The commitment is the number elements\n * in the map followed by the keys' merkle root followed by the\n * values' merkle root.\n */\nexport class MerkleMap {\n    /**\n     * @param keys Sorted list of (unhashed) keys\n     * @param values values, in corresponding order as the keys, and of equal length\n     */\n    constructor(keys, values) {\n        if (keys.length != values.length) {\n            throw new Error(\"keys and values should have the same length\");\n        }\n        // Sanity check: verify that keys are actually sorted and with no duplicates\n        for (let i = 0; i < keys.length - 1; i++) {\n            if (keys[i].toString(\"hex\") >= keys[i + 1].toString(\"hex\")) {\n                throw new Error(\"keys must be in strictly increasing order\");\n            }\n        }\n        this.keys = keys;\n        this.keysTree = new Merkle(keys.map(k => hashLeaf(k)));\n        this.values = values;\n        this.valuesTree = new Merkle(values.map(v => hashLeaf(v)));\n    }\n    commitment() {\n        // returns a buffer between 65 and 73 (included) bytes long\n        return Buffer.concat([\n            createVarint(this.keys.length),\n            this.keysTree.getRoot(),\n            this.valuesTree.getRoot(),\n        ]);\n    }\n}\n//# sourceMappingURL=merkleMap.js.map",
    "import { MerkleMap } from \"./merkleMap\";\nimport { PsbtV2 } from \"./psbtv2\";\n/**\n * This class merkelizes a PSBTv2, by merkelizing the different\n * maps of the psbt. This is used during the transaction signing process,\n * where the hardware app can request specific parts of the psbt from the\n * client code and be sure that the response data actually belong to the psbt.\n * The reason for this is the limited amount of memory available to the app,\n * so it can't always store the full psbt in memory.\n *\n * The signing process is documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md#sign_psbt\n */\nexport class MerkelizedPsbt extends PsbtV2 {\n    constructor(psbt) {\n        super();\n        this.inputMerkleMaps = [];\n        this.outputMerkleMaps = [];\n        psbt.copy(this);\n        this.globalMerkleMap = MerkelizedPsbt.createMerkleMap(this.globalMap);\n        for (let i = 0; i < this.getGlobalInputCount(); i++) {\n            this.inputMerkleMaps.push(MerkelizedPsbt.createMerkleMap(this.inputMaps[i]));\n        }\n        this.inputMapCommitments = [...this.inputMerkleMaps.values()].map(v => v.commitment());\n        for (let i = 0; i < this.getGlobalOutputCount(); i++) {\n            this.outputMerkleMaps.push(MerkelizedPsbt.createMerkleMap(this.outputMaps[i]));\n        }\n        this.outputMapCommitments = [...this.outputMerkleMaps.values()].map(v => v.commitment());\n    }\n    // These public functions are for MerkelizedPsbt.\n    getGlobalSize() {\n        return this.globalMap.size;\n    }\n    getGlobalKeysValuesRoot() {\n        return this.globalMerkleMap.commitment();\n    }\n    static createMerkleMap(map) {\n        const sortedKeysStrings = [...map.keys()].sort();\n        const values = sortedKeysStrings.map(k => {\n            const v = map.get(k);\n            if (!v) {\n                throw new Error(\"No value for key \" + k);\n            }\n            return v;\n        });\n        const sortedKeys = sortedKeysStrings.map(k => Buffer.from(k, \"hex\"));\n        const merkleMap = new MerkleMap(sortedKeys, values);\n        return merkleMap;\n    }\n}\n//# sourceMappingURL=merkelizedPsbt.js.map",
    "import { crypto } from \"bitcoinjs-lib\";\nimport { BufferReader } from \"../buffertools\";\nimport { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\nvar ClientCommandCode;\n(function (ClientCommandCode) {\n    ClientCommandCode[ClientCommandCode[\"YIELD\"] = 16] = \"YIELD\";\n    ClientCommandCode[ClientCommandCode[\"GET_PREIMAGE\"] = 64] = \"GET_PREIMAGE\";\n    ClientCommandCode[ClientCommandCode[\"GET_MERKLE_LEAF_PROOF\"] = 65] = \"GET_MERKLE_LEAF_PROOF\";\n    ClientCommandCode[ClientCommandCode[\"GET_MERKLE_LEAF_INDEX\"] = 66] = \"GET_MERKLE_LEAF_INDEX\";\n    ClientCommandCode[ClientCommandCode[\"GET_MORE_ELEMENTS\"] = 160] = \"GET_MORE_ELEMENTS\";\n})(ClientCommandCode || (ClientCommandCode = {}));\nclass ClientCommand {\n}\nexport class YieldCommand extends ClientCommand {\n    constructor(results, progressCallback) {\n        super();\n        this.progressCallback = progressCallback;\n        this.code = ClientCommandCode.YIELD;\n        this.results = results;\n    }\n    execute(request) {\n        this.results.push(Buffer.from(request.subarray(1)));\n        this.progressCallback();\n        return Buffer.from(\"\");\n    }\n}\nexport class GetPreimageCommand extends ClientCommand {\n    constructor(known_preimages, queue) {\n        super();\n        this.code = ClientCommandCode.GET_PREIMAGE;\n        this.known_preimages = known_preimages;\n        this.queue = queue;\n    }\n    execute(request) {\n        const req = Buffer.from(request.subarray(1));\n        // we expect no more data to read\n        if (req.length != 1 + 32) {\n            throw new Error(\"Invalid request, unexpected trailing data\");\n        }\n        if (req[0] != 0) {\n            throw new Error(\"Unsupported request, the first byte should be 0\");\n        }\n        // read the hash\n        const hash = Buffer.alloc(32);\n        for (let i = 0; i < 32; i++) {\n            hash[i] = req[1 + i];\n        }\n        const req_hash_hex = hash.toString(\"hex\");\n        const known_preimage = this.known_preimages.get(req_hash_hex);\n        if (known_preimage != undefined) {\n            const preimage_len_varint = createVarint(known_preimage.length);\n            // We can send at most 255 - len(preimage_len_out) - 1 bytes in a single message;\n            // the rest will be stored in the queue for GET_MORE_ELEMENTS\n            const max_payload_size = 255 - preimage_len_varint.length - 1;\n            const payload_size = Math.min(max_payload_size, known_preimage.length);\n            if (payload_size < known_preimage.length) {\n                for (let i = payload_size; i < known_preimage.length; i++) {\n                    this.queue.push(Buffer.from([known_preimage[i]]));\n                }\n            }\n            return Buffer.concat([\n                preimage_len_varint,\n                Buffer.from([payload_size]),\n                Buffer.from(known_preimage.subarray(0, payload_size)),\n            ]);\n        }\n        throw Error(`Requested unknown preimage for: ${req_hash_hex}`);\n    }\n}\nexport class GetMerkleLeafProofCommand extends ClientCommand {\n    constructor(known_trees, queue) {\n        super();\n        this.code = ClientCommandCode.GET_MERKLE_LEAF_PROOF;\n        this.known_trees = known_trees;\n        this.queue = queue;\n    }\n    execute(request) {\n        const req = Buffer.from(request.subarray(1));\n        if (req.length < 32 + 1 + 1) {\n            throw new Error(\"Invalid request, expected at least 34 bytes\");\n        }\n        const reqBuf = new BufferReader(req);\n        const hash = reqBuf.readSlice(32);\n        const hash_hex = hash.toString(\"hex\");\n        let tree_size;\n        let leaf_index;\n        try {\n            tree_size = reqBuf.readVarInt();\n            leaf_index = reqBuf.readVarInt();\n        }\n        catch (e) {\n            throw new Error(\"Invalid request, couldn't parse tree_size or leaf_index\");\n        }\n        const mt = this.known_trees.get(hash_hex);\n        if (!mt) {\n            throw Error(`Requested Merkle leaf proof for unknown tree: ${hash_hex}`);\n        }\n        if (leaf_index >= tree_size || mt.size() != tree_size) {\n            throw Error(\"Invalid index or tree size.\");\n        }\n        if (this.queue.length != 0) {\n            throw Error(\"This command should not execute when the queue is not empty.\");\n        }\n        const proof = mt.getProof(leaf_index);\n        const n_response_elements = Math.min(Math.floor((255 - 32 - 1 - 1) / 32), proof.length);\n        const n_leftover_elements = proof.length - n_response_elements;\n        // Add to the queue any proof elements that do not fit the response\n        if (n_leftover_elements > 0) {\n            this.queue.push(...proof.slice(-n_leftover_elements));\n        }\n        return Buffer.concat([\n            mt.getLeafHash(leaf_index),\n            Buffer.from([proof.length]),\n            Buffer.from([n_response_elements]),\n            ...proof.slice(0, n_response_elements),\n        ]);\n    }\n}\nexport class GetMerkleLeafIndexCommand extends ClientCommand {\n    constructor(known_trees) {\n        super();\n        this.code = ClientCommandCode.GET_MERKLE_LEAF_INDEX;\n        this.known_trees = known_trees;\n    }\n    execute(request) {\n        const req = Buffer.from(request.subarray(1));\n        if (req.length != 32 + 32) {\n            throw new Error(\"Invalid request, unexpected trailing data\");\n        }\n        // read the root hash\n        const root_hash = Buffer.alloc(32);\n        for (let i = 0; i < 32; i++) {\n            root_hash[i] = req.readUInt8(i);\n        }\n        const root_hash_hex = root_hash.toString(\"hex\");\n        // read the leaf hash\n        const leef_hash = Buffer.alloc(32);\n        for (let i = 0; i < 32; i++) {\n            leef_hash[i] = req.readUInt8(32 + i);\n        }\n        const leef_hash_hex = leef_hash.toString(\"hex\");\n        const mt = this.known_trees.get(root_hash_hex);\n        if (!mt) {\n            throw Error(`Requested Merkle leaf index for unknown root: ${root_hash_hex}`);\n        }\n        let leaf_index = 0;\n        let found = 0;\n        for (let i = 0; i < mt.size(); i++) {\n            if (mt.getLeafHash(i).toString(\"hex\") == leef_hash_hex) {\n                found = 1;\n                leaf_index = i;\n                break;\n            }\n        }\n        return Buffer.concat([Buffer.from([found]), createVarint(leaf_index)]);\n    }\n}\nexport class GetMoreElementsCommand extends ClientCommand {\n    constructor(queue) {\n        super();\n        this.code = ClientCommandCode.GET_MORE_ELEMENTS;\n        this.queue = queue;\n    }\n    execute(request) {\n        if (request.length != 1) {\n            throw new Error(\"Invalid request, unexpected trailing data\");\n        }\n        if (this.queue.length === 0) {\n            throw new Error(\"No elements to get\");\n        }\n        // all elements should have the same length\n        const element_len = this.queue[0].length;\n        if (this.queue.some(el => el.length != element_len)) {\n            throw new Error(\"The queue contains elements with different byte length, which is not expected\");\n        }\n        const max_elements = Math.floor(253 / element_len);\n        const n_returned_elements = Math.min(max_elements, this.queue.length);\n        const returned_elements = this.queue.splice(0, n_returned_elements);\n        return Buffer.concat([\n            Buffer.from([n_returned_elements]),\n            Buffer.from([element_len]),\n            ...returned_elements,\n        ]);\n    }\n}\n/**\n * This class will dispatch a client command coming from the hardware device to\n * the appropriate client command implementation. Those client commands\n * typically requests data from a merkle tree or merkelized maps.\n *\n * A ClientCommandInterpreter is prepared by adding the merkle trees and\n * merkelized maps it should be able to serve to the hardware device. This class\n * doesn't know anything about the semantics of the data it holds, it just\n * serves merkle data. It doesn't even know in what context it is being\n * executed, ie SignPsbt, getWalletAddress, etc.\n *\n * If the command yelds results to the client, as signPsbt does, the yielded\n * data will be accessible after the command completed by calling getYielded(),\n * which will return the yields in the same order as they came in.\n */\nexport class ClientCommandInterpreter {\n    constructor(progressCallback) {\n        this.roots = new Map();\n        this.preimages = new Map();\n        this.yielded = [];\n        this.queue = [];\n        this.commands = new Map();\n        const commands = [\n            new YieldCommand(this.yielded, progressCallback),\n            new GetPreimageCommand(this.preimages, this.queue),\n            new GetMerkleLeafIndexCommand(this.roots),\n            new GetMerkleLeafProofCommand(this.roots, this.queue),\n            new GetMoreElementsCommand(this.queue),\n        ];\n        for (const cmd of commands) {\n            if (this.commands.has(cmd.code)) {\n                throw new Error(`Multiple commands with code ${cmd.code}`);\n            }\n            this.commands.set(cmd.code, cmd);\n        }\n    }\n    getYielded() {\n        return this.yielded;\n    }\n    addKnownPreimage(preimage) {\n        this.preimages.set(crypto.sha256(preimage).toString(\"hex\"), preimage);\n    }\n    addKnownList(elements) {\n        for (const el of elements) {\n            const preimage = Buffer.concat([Buffer.from([0]), el]);\n            this.addKnownPreimage(preimage);\n        }\n        const mt = new Merkle(elements.map(el => hashLeaf(el)));\n        this.roots.set(mt.getRoot().toString(\"hex\"), mt);\n    }\n    addKnownMapping(mm) {\n        this.addKnownList(mm.keys);\n        this.addKnownList(mm.values);\n    }\n    execute(request) {\n        if (request.length == 0) {\n            throw new Error(\"Unexpected empty command\");\n        }\n        const cmdCode = request[0];\n        const cmd = this.commands.get(cmdCode);\n        if (!cmd) {\n            throw new Error(`Unexpected command code ${cmdCode}`);\n        }\n        return cmd.execute(request);\n    }\n}\n//# sourceMappingURL=clientCommands.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { pathElementsToBuffer } from \"../bip32\";\nimport { MerkelizedPsbt } from \"./merkelizedPsbt\";\nimport { ClientCommandInterpreter } from \"./clientCommands\";\nimport { createVarint } from \"../varint\";\nimport { hashLeaf, Merkle } from \"./merkle\";\nconst CLA_BTC = 0xe1;\nconst CLA_FRAMEWORK = 0xf8;\nvar BitcoinIns;\n(function (BitcoinIns) {\n    BitcoinIns[BitcoinIns[\"GET_PUBKEY\"] = 0] = \"GET_PUBKEY\";\n    // GET_ADDRESS = 0x01, // Removed from app\n    BitcoinIns[BitcoinIns[\"REGISTER_WALLET\"] = 2] = \"REGISTER_WALLET\";\n    BitcoinIns[BitcoinIns[\"GET_WALLET_ADDRESS\"] = 3] = \"GET_WALLET_ADDRESS\";\n    BitcoinIns[BitcoinIns[\"SIGN_PSBT\"] = 4] = \"SIGN_PSBT\";\n    BitcoinIns[BitcoinIns[\"GET_MASTER_FINGERPRINT\"] = 5] = \"GET_MASTER_FINGERPRINT\";\n    BitcoinIns[BitcoinIns[\"SIGN_MESSAGE\"] = 16] = \"SIGN_MESSAGE\";\n})(BitcoinIns || (BitcoinIns = {}));\nvar FrameworkIns;\n(function (FrameworkIns) {\n    FrameworkIns[FrameworkIns[\"CONTINUE_INTERRUPTED\"] = 1] = \"CONTINUE_INTERRUPTED\";\n})(FrameworkIns || (FrameworkIns = {}));\n/**\n * This class encapsulates the APDU protocol documented at\n * https://github.com/LedgerHQ/app-bitcoin-new/blob/master/doc/bitcoin.md\n */\nexport class AppClient {\n    constructor(transport) {\n        this.transport = transport;\n    }\n    makeRequest(ins, data, cci) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.transport.send(CLA_BTC, ins, 0, 0, data, [0x9000, 0xe000]);\n            while (response.readUInt16BE(response.length - 2) === 0xe000) {\n                if (!cci) {\n                    throw new Error(\"Unexpected SW_INTERRUPTED_EXECUTION\");\n                }\n                const hwRequest = response.slice(0, -2);\n                const commandResponse = cci.execute(hwRequest);\n                response = yield this.transport.send(CLA_FRAMEWORK, FrameworkIns.CONTINUE_INTERRUPTED, 0, 0, commandResponse, [0x9000, 0xe000]);\n            }\n            return response.slice(0, -2); // drop the status word (can only be 0x9000 at this point)\n        });\n    }\n    getExtendedPubkey(display, pathElements) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (pathElements.length > 6) {\n                throw new Error(\"Path too long. At most 6 levels allowed.\");\n            }\n            const response = yield this.makeRequest(BitcoinIns.GET_PUBKEY, Buffer.concat([Buffer.from(display ? [1] : [0]), pathElementsToBuffer(pathElements)]));\n            return response.toString(\"ascii\");\n        });\n    }\n    getWalletAddress(walletPolicy, walletHMAC, change, addressIndex, display) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (change !== 0 && change !== 1)\n                throw new Error(\"Change can only be 0 or 1\");\n            if (addressIndex < 0 || !Number.isInteger(addressIndex))\n                throw new Error(\"Invalid address index\");\n            if (walletHMAC != null && walletHMAC.length != 32) {\n                throw new Error(\"Invalid HMAC length\");\n            }\n            const clientInterpreter = new ClientCommandInterpreter(() => { });\n            clientInterpreter.addKnownList(walletPolicy.keys.map(k => Buffer.from(k, \"ascii\")));\n            clientInterpreter.addKnownPreimage(walletPolicy.serialize());\n            const addressIndexBuffer = Buffer.alloc(4);\n            addressIndexBuffer.writeUInt32BE(addressIndex, 0);\n            const response = yield this.makeRequest(BitcoinIns.GET_WALLET_ADDRESS, Buffer.concat([\n                Buffer.from(display ? [1] : [0]),\n                walletPolicy.getWalletId(),\n                walletHMAC || Buffer.alloc(32, 0),\n                Buffer.from([change]),\n                addressIndexBuffer,\n            ]), clientInterpreter);\n            return response.toString(\"ascii\");\n        });\n    }\n    signPsbt(psbt, walletPolicy, walletHMAC, progressCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const merkelizedPsbt = new MerkelizedPsbt(psbt);\n            if (walletHMAC != null && walletHMAC.length != 32) {\n                throw new Error(\"Invalid HMAC length\");\n            }\n            const clientInterpreter = new ClientCommandInterpreter(progressCallback);\n            // prepare ClientCommandInterpreter\n            clientInterpreter.addKnownList(walletPolicy.keys.map(k => Buffer.from(k, \"ascii\")));\n            clientInterpreter.addKnownPreimage(walletPolicy.serialize());\n            clientInterpreter.addKnownMapping(merkelizedPsbt.globalMerkleMap);\n            for (const map of merkelizedPsbt.inputMerkleMaps) {\n                clientInterpreter.addKnownMapping(map);\n            }\n            for (const map of merkelizedPsbt.outputMerkleMaps) {\n                clientInterpreter.addKnownMapping(map);\n            }\n            clientInterpreter.addKnownList(merkelizedPsbt.inputMapCommitments);\n            const inputMapsRoot = new Merkle(merkelizedPsbt.inputMapCommitments.map(m => hashLeaf(m))).getRoot();\n            clientInterpreter.addKnownList(merkelizedPsbt.outputMapCommitments);\n            const outputMapsRoot = new Merkle(merkelizedPsbt.outputMapCommitments.map(m => hashLeaf(m))).getRoot();\n            yield this.makeRequest(BitcoinIns.SIGN_PSBT, Buffer.concat([\n                merkelizedPsbt.getGlobalKeysValuesRoot(),\n                createVarint(merkelizedPsbt.getGlobalInputCount()),\n                inputMapsRoot,\n                createVarint(merkelizedPsbt.getGlobalOutputCount()),\n                outputMapsRoot,\n                walletPolicy.getWalletId(),\n                walletHMAC || Buffer.alloc(32, 0),\n            ]), clientInterpreter);\n            const yielded = clientInterpreter.getYielded();\n            const ret = new Map();\n            for (const inputAndSig of yielded) {\n                ret.set(inputAndSig[0], inputAndSig.slice(1));\n            }\n            return ret;\n        });\n    }\n    getMasterFingerprint() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.makeRequest(BitcoinIns.GET_MASTER_FINGERPRINT, Buffer.from([]));\n        });\n    }\n    signMessage(message, pathElements) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (pathElements.length > 6) {\n                throw new Error(\"Path too long. At most 6 levels allowed.\");\n            }\n            const clientInterpreter = new ClientCommandInterpreter(() => { });\n            // prepare ClientCommandInterpreter\n            const nChunks = Math.ceil(message.length / 64);\n            const chunks = [];\n            for (let i = 0; i < nChunks; i++) {\n                chunks.push(message.subarray(64 * i, 64 * i + 64));\n            }\n            clientInterpreter.addKnownList(chunks);\n            const chunksRoot = new Merkle(chunks.map(m => hashLeaf(m))).getRoot();\n            const response = yield this.makeRequest(BitcoinIns.SIGN_MESSAGE, Buffer.concat([pathElementsToBuffer(pathElements), createVarint(message.length), chunksRoot]), clientInterpreter);\n            return response.toString(\"base64\");\n        });\n    }\n}\n//# sourceMappingURL=appClient.js.map",
    "export function formatTransactionDebug(transaction) {\n    let str = \"TX\";\n    str += \" version \" + transaction.version.toString(\"hex\");\n    if (transaction.locktime) {\n        str += \" locktime \" + transaction.locktime.toString(\"hex\");\n    }\n    if (transaction.witness) {\n        str += \" witness \" + transaction.witness.toString(\"hex\");\n    }\n    if (transaction.timestamp) {\n        str += \" timestamp \" + transaction.timestamp.toString(\"hex\");\n    }\n    if (transaction.nVersionGroupId) {\n        str += \" nVersionGroupId \" + transaction.nVersionGroupId.toString(\"hex\");\n    }\n    if (transaction.nExpiryHeight) {\n        str += \" nExpiryHeight \" + transaction.nExpiryHeight.toString(\"hex\");\n    }\n    if (transaction.extraData) {\n        str += \" extraData \" + transaction.extraData.toString(\"hex\");\n    }\n    transaction.inputs.forEach(({ prevout, script, sequence }, i) => {\n        str += `\\ninput ${i}:`;\n        str += ` prevout ${prevout.toString(\"hex\")}`;\n        str += ` script ${script.toString(\"hex\")}`;\n        str += ` sequence ${sequence.toString(\"hex\")}`;\n    });\n    (transaction.outputs || []).forEach(({ amount, script }, i) => {\n        str += `\\noutput ${i}:`;\n        str += ` amount ${amount.toString(\"hex\")}`;\n        str += ` script ${script.toString(\"hex\")}`;\n    });\n    return str;\n}\nexport function displayTransactionDebug(transaction) {\n    console.log(formatTransactionDebug(transaction));\n}\n//# sourceMappingURL=debug.js.map",
    "import { log } from \"@ledgerhq/logs\";\nimport { getVarint } from \"./varint\";\nimport { formatTransactionDebug } from \"./debug\";\nexport function splitTransaction(transactionHex, isSegwitSupported = false, hasTimestamp = false, hasExtraData = false, additionals = []) {\n    const inputs = [];\n    const outputs = [];\n    let witness = false;\n    let offset = 0;\n    let timestamp = Buffer.alloc(0);\n    let nExpiryHeight = Buffer.alloc(0);\n    let nVersionGroupId = Buffer.alloc(0);\n    let extraData = Buffer.alloc(0);\n    let witnessScript, locktime;\n    const isDecred = additionals.includes(\"decred\");\n    const isZencash = additionals.includes(\"zencash\");\n    const isZcash = additionals.includes(\"zcash\");\n    const transaction = Buffer.from(transactionHex, \"hex\");\n    const version = transaction.slice(offset, offset + 4);\n    const overwinter = version.equals(Buffer.from([0x03, 0x00, 0x00, 0x80])) ||\n        version.equals(Buffer.from([0x04, 0x00, 0x00, 0x80])) ||\n        version.equals(Buffer.from([0x05, 0x00, 0x00, 0x80]));\n    const isZcashv5 = isZcash && version.equals(Buffer.from([0x05, 0x00, 0x00, 0x80]));\n    offset += 4;\n    if (!hasTimestamp &&\n        isSegwitSupported &&\n        transaction[offset] === 0 &&\n        transaction[offset + 1] !== 0 &&\n        !isZencash) {\n        offset += 2;\n        witness = true;\n    }\n    if (hasTimestamp) {\n        timestamp = transaction.slice(offset, 4 + offset);\n        offset += 4;\n    }\n    if (overwinter) {\n        nVersionGroupId = transaction.slice(offset, 4 + offset);\n        offset += 4;\n    }\n    if (isZcashv5) {\n        locktime = transaction.slice(offset + 4, offset + 8);\n        nExpiryHeight = transaction.slice(offset + 8, offset + 12);\n        offset += 12;\n    }\n    let varint = getVarint(transaction, offset);\n    const numberInputs = varint[0];\n    offset += varint[1];\n    for (let i = 0; i < numberInputs; i++) {\n        const prevout = transaction.slice(offset, offset + 36);\n        offset += 36;\n        let script = Buffer.alloc(0);\n        let tree = Buffer.alloc(0);\n        //No script for decred, it has a witness\n        if (!isDecred) {\n            varint = getVarint(transaction, offset);\n            offset += varint[1];\n            script = transaction.slice(offset, offset + varint[0]);\n            offset += varint[0];\n        }\n        else {\n            //Tree field\n            tree = transaction.slice(offset, offset + 1);\n            offset += 1;\n        }\n        const sequence = transaction.slice(offset, offset + 4);\n        offset += 4;\n        inputs.push({\n            prevout,\n            script,\n            sequence,\n            tree,\n        });\n    }\n    varint = getVarint(transaction, offset);\n    const numberOutputs = varint[0];\n    offset += varint[1];\n    for (let i = 0; i < numberOutputs; i++) {\n        const amount = transaction.slice(offset, offset + 8);\n        offset += 8;\n        if (isDecred) {\n            //Script version\n            offset += 2;\n        }\n        varint = getVarint(transaction, offset);\n        offset += varint[1];\n        const script = transaction.slice(offset, offset + varint[0]);\n        offset += varint[0];\n        outputs.push({\n            amount,\n            script,\n        });\n    }\n    if (witness) {\n        witnessScript = transaction.slice(offset, -4);\n        locktime = transaction.slice(transaction.length - 4);\n    }\n    else if (!isZcashv5) {\n        locktime = transaction.slice(offset, offset + 4);\n    }\n    offset += 4;\n    if ((overwinter || isDecred) && !isZcashv5) {\n        nExpiryHeight = transaction.slice(offset, offset + 4);\n        offset += 4;\n    }\n    if (hasExtraData) {\n        extraData = transaction.slice(offset);\n    }\n    //Get witnesses for Decred\n    if (isDecred) {\n        varint = getVarint(transaction, offset);\n        offset += varint[1];\n        if (varint[0] !== numberInputs) {\n            throw new Error(\"splitTransaction: incoherent number of witnesses\");\n        }\n        for (let i = 0; i < numberInputs; i++) {\n            //amount\n            offset += 8;\n            //block height\n            offset += 4;\n            //block index\n            offset += 4;\n            //Script size\n            varint = getVarint(transaction, offset);\n            offset += varint[1];\n            const script = transaction.slice(offset, offset + varint[0]);\n            offset += varint[0];\n            inputs[i].script = script;\n        }\n    }\n    const t = {\n        version,\n        inputs,\n        outputs,\n        locktime,\n        witness: witnessScript,\n        timestamp,\n        nVersionGroupId,\n        nExpiryHeight,\n        extraData,\n    };\n    log(\"btc\", `splitTransaction ${transactionHex}:\\n${formatTransactionDebug(t)}`);\n    return t;\n}\n//# sourceMappingURL=splitTransaction.js.map",
    "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { startUntrustedHashTransactionInput } from \"./startUntrustedHashTransactionInput\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { signTransaction } from \"./signTransaction\";\nimport { hashOutputFull } from \"./finalizeInput\";\nimport { DEFAULT_LOCKTIME, DEFAULT_VERSION, DEFAULT_SEQUENCE, SIGHASH_ALL } from \"./constants\";\nconst defaultArg = {\n    lockTime: DEFAULT_LOCKTIME,\n    sigHashType: SIGHASH_ALL,\n    segwit: false,\n    transactionVersion: DEFAULT_VERSION,\n};\nexport function signP2SHTransaction(transport, arg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { inputs, associatedKeysets, outputScriptHex, lockTime, sigHashType, segwit, transactionVersion, } = Object.assign(Object.assign({}, defaultArg), arg);\n        // Inputs are provided as arrays of [transaction, output_index, redeem script, optional sequence]\n        // associatedKeysets are provided as arrays of [path]\n        const nullScript = Buffer.alloc(0);\n        const nullPrevout = Buffer.alloc(0);\n        const defaultVersion = Buffer.alloc(4);\n        defaultVersion.writeUInt32LE(transactionVersion, 0);\n        const trustedInputs = [];\n        const regularOutputs = [];\n        const signatures = [];\n        let firstRun = true;\n        const resuming = false;\n        const targetTransaction = {\n            inputs: [],\n            version: defaultVersion,\n        };\n        const getTrustedInputCall = segwit ? getTrustedInputBIP143 : getTrustedInput;\n        const outputScript = Buffer.from(outputScriptHex, \"hex\");\n        for (const input of inputs) {\n            if (!resuming) {\n                const trustedInput = yield getTrustedInputCall(transport, input[1], input[0]);\n                const sequence = Buffer.alloc(4);\n                sequence.writeUInt32LE(input.length >= 4 && typeof input[3] === \"number\" ? input[3] : DEFAULT_SEQUENCE, 0);\n                trustedInputs.push({\n                    trustedInput: false,\n                    value: segwit\n                        ? Buffer.from(trustedInput, \"hex\")\n                        : Buffer.from(trustedInput, \"hex\").slice(4, 4 + 0x24),\n                    sequence,\n                });\n            }\n            const { outputs } = input[0];\n            const index = input[1];\n            if (outputs && index <= outputs.length - 1) {\n                regularOutputs.push(outputs[index]);\n            }\n        }\n        // Pre-build the target transaction\n        for (let i = 0; i < inputs.length; i++) {\n            const sequence = Buffer.alloc(4);\n            sequence.writeUInt32LE(inputs[i].length >= 4 && typeof inputs[i][3] === \"number\"\n                ? inputs[i][3]\n                : DEFAULT_SEQUENCE, 0);\n            targetTransaction.inputs.push({\n                script: nullScript,\n                prevout: nullPrevout,\n                sequence,\n            });\n        }\n        if (segwit) {\n            yield startUntrustedHashTransactionInput(transport, true, targetTransaction, trustedInputs, true);\n            yield hashOutputFull(transport, outputScript);\n        }\n        for (let i = 0; i < inputs.length; i++) {\n            const input = inputs[i];\n            const script = inputs[i].length >= 3 && typeof input[2] === \"string\"\n                ? Buffer.from(input[2], \"hex\")\n                : regularOutputs[i].script;\n            const pseudoTX = Object.assign({}, targetTransaction);\n            const pseudoTrustedInputs = segwit ? [trustedInputs[i]] : trustedInputs;\n            if (segwit) {\n                pseudoTX.inputs = [Object.assign(Object.assign({}, pseudoTX.inputs[i]), { script })];\n            }\n            else {\n                pseudoTX.inputs[i].script = script;\n            }\n            yield startUntrustedHashTransactionInput(transport, !segwit && firstRun, pseudoTX, pseudoTrustedInputs, segwit);\n            if (!segwit) {\n                yield hashOutputFull(transport, outputScript);\n            }\n            const signature = yield signTransaction(transport, associatedKeysets[i], lockTime, sigHashType);\n            signatures.push(segwit ? signature.toString(\"hex\") : signature.slice(0, signature.length - 1).toString(\"hex\"));\n            targetTransaction.inputs[i].script = nullScript;\n            if (firstRun) {\n                firstRun = false;\n            }\n        }\n        return signatures;\n    });\n}\n//# sourceMappingURL=signP2SHTransaction.js.map"
  ],
  "mappings": "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AAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACtD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SAEP,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,IAAI,IAAS,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EAsBtD,GArBA,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAQ,IAAO,EACjD,IAAO,SACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,GAAK,GACP,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACR,EAAE,IAAM,GACJ,IAAM,EACR,EAAE,IAAM,EACR,EAAI,SAEN,OAAO,GAIT,IAAK,KAAK,KACR,GAAc,EAGhB,SAAS,EAAS,CAAC,EAAM,EAAK,EAAK,CACjC,EAAI,SAAW,EAAI,SAAW,EAAK,SACnC,EAAI,OAAS,EAAK,OAAS,EAAI,OAE/B,IAAI,EAAQ,EACR,EAAU,EACd,QAAS,EAAI,EAAG,EAAI,EAAI,OAAS,EAAG,IAAK,CAGvC,IAAI,EAAS,EACb,EAAU,EACV,IAAI,EAAQ,EAAQ,SAChB,EAAO,KAAK,IAAI,EAAG,EAAI,OAAS,CAAC,EACrC,QAAS,EAAI,KAAK,IAAI,EAAG,EAAI,EAAK,OAAS,CAAC,EAAG,GAAK,EAAM,IAAK,CAC7D,IAAI,EAAI,EAAI,EACR,EAAI,EAAK,MAAM,GAAK,EACpB,EAAI,EAAI,MAAM,GAAK,EACnB,EAAI,EAAI,EAER,EAAK,EAAI,SACb,EAAU,GAAW,EAAI,SAAa,GAAM,EAC5C,EAAM,EAAK,EAAS,EACpB,EAAQ,EAAK,SACb,EAAU,GAAU,IAAO,IAAO,EAElC,GAAW,IAAW,GACtB,GAAU,SAEZ,EAAI,MAAM,GAAK,EACf,EAAQ,EACR,EAAS,EAEX,GAAI,IAAU,EACZ,EAAI,MAAM,GAAK,MAEf,GAAI,SAGN,OAAO,EAAI,MAAM,EAGnB,SAAS,EAAW,CAAC,EAAM,EAAK,EAAK,CACnC,IAAI,EAAO,IAAI,EACf,OAAO,EAAK,KAAK,EAAM,EAAK,CAAG,EAGjC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,EAAK,CAC7C,IAAI,EACA,EAAM,KAAK,OAAS,EAAI,OAC5B,GAAI,KAAK,SAAW,IAAM,EAAI,SAAW,GACvC,EAAM,GAAY,KAAM,EAAK,CAAG,UACvB,EAAM,GACf,EAAM,EAAW,KAAM,EAAK,CAAG,UACtB,EAAM,KACf,EAAM,GAAS,KAAM,EAAK,CAAG,MAE7B,GAAM,GAAW,KAAM,EAAK,CAAG,EAGjC,OAAO,GAMT,SAAS,CAAK,CAAC,EAAG,EAAG,CACnB,KAAK,EAAI,EACT,KAAK,EAAI,EAGX,EAAK,UAAU,iBAAmB,CAAQ,CAAC,EAAG,CAC5C,IAAI,EAAI,IAAI,MAAM,CAAC,EACf,EAAI,EAAG,UAAU,WAAW,CAAC,EAAI,EACrC,QAAS,EAAI,EAAG,EAAI,EAAG,IACrB,EAAE,GAAK,KAAK,OAAO,EAAG,EAAG,CAAC,EAG5B,OAAO,GAIT,EAAK,UAAU,gBAAkB,CAAO,CAAC,EAAG,EAAG,EAAG,CAChD,GAAI,IAAM,GAAK,IAAM,EAAI,EAAG,OAAO,EAEnC,IAAI,EAAK,EACT,QAAS,EAAI,EAAG,EAAI,EAAG,IACrB,IAAO,EAAI,IAAO,EAAI,EAAI,EAC1B,IAAM,EAGR,OAAO,GAKT,EAAK,UAAU,iBAAmB,CAAQ,CAAC,EAAK,EAAK,EAAK,EAAM,EAAM,EAAG,CACvE,QAAS,EAAI,EAAG,EAAI,EAAG,IACrB,EAAK,GAAK,EAAI,EAAI,IAClB,EAAK,GAAK,EAAI,EAAI,KAItB,EAAK,UAAU,mBAAqB,CAAU,CAAC,EAAK,EAAK,EAAM,EAAM,EAAG,EAAK,CAC3E,KAAK,QAAQ,EAAK,EAAK,EAAK,EAAM,EAAM,CAAC,EAEzC,QAAS,EAAI,EAAG,EAAI,EAAG,IAAM,EAAG,CAC9B,IAAI,EAAI,GAAK,EAET,EAAQ,KAAK,IAAI,EAAI,KAAK,GAAK,CAAC,EAChC,EAAQ,KAAK,IAAI,EAAI,KAAK,GAAK,CAAC,EAEpC,QAAS,EAAI,EAAG,EAAI,EAAG,GAAK,EAAG,CAC7B,IAAI,EAAS,EACT,EAAS,EAEb,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAI,EAAK,EAAK,EAAI,GACd,EAAK,EAAK,EAAI,GAEd,GAAK,EAAK,EAAI,EAAI,GAClB,EAAK,EAAK,EAAI,EAAI,GAElB,EAAK,EAAS,GAAK,EAAS,EAYhC,GAVA,EAAK,EAAS,EAAK,EAAS,GAC5B,GAAK,EAEL,EAAK,EAAI,GAAK,EAAK,GACnB,EAAK,EAAI,GAAK,EAAK,EAEnB,EAAK,EAAI,EAAI,GAAK,EAAK,GACvB,EAAK,EAAI,EAAI,GAAK,EAAK,EAGnB,IAAM,EACR,EAAK,EAAQ,EAAS,EAAQ,EAE9B,EAAS,EAAQ,EAAS,EAAQ,EAClC,EAAS,MAOnB,EAAK,UAAU,qBAAuB,CAAY,CAAC,EAAG,EAAG,CACvD,IAAI,EAAI,KAAK,IAAI,EAAG,CAAC,EAAI,EACrB,EAAM,EAAI,EACV,EAAI,EACR,IAAK,EAAI,EAAI,EAAI,EAAG,EAAG,EAAI,IAAM,EAC/B,IAGF,MAAO,IAAK,EAAI,EAAI,GAGtB,EAAK,UAAU,mBAAqB,CAAU,CAAC,EAAK,EAAK,EAAG,CAC1D,GAAI,GAAK,EAAG,OAEZ,QAAS,EAAI,EAAG,EAAI,EAAI,EAAG,IAAK,CAC9B,IAAI,EAAI,EAAI,GAEZ,EAAI,GAAK,EAAI,EAAI,EAAI,GACrB,EAAI,EAAI,EAAI,GAAK,EAEjB,EAAI,EAAI,GAER,EAAI,IAAM,EAAI,EAAI,EAAI,GACtB,EAAI,EAAI,EAAI,IAAM,IAItB,EAAK,UAAU,sBAAwB,CAAa,CAAC,EAAI,EAAG,CAC1D,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,EAAI,EAAG,IAAK,CAC9B,IAAI,EAAI,KAAK,MAAM,EAAG,EAAI,EAAI,GAAK,CAAC,EAAI,KACtC,KAAK,MAAM,EAAG,EAAI,GAAK,CAAC,EACxB,EAIF,GAFA,EAAG,GAAK,EAAI,SAER,EAAI,SACN,EAAQ,MAER,GAAQ,EAAI,SAAY,EAI5B,OAAO,GAGT,EAAK,UAAU,oBAAsB,CAAW,CAAC,EAAI,EAAK,EAAK,EAAG,CAChE,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,EAAK,IACvB,EAAQ,GAAS,EAAG,GAAK,GAEzB,EAAI,EAAI,GAAK,EAAQ,KAAQ,EAAQ,IAAU,GAC/C,EAAI,EAAI,EAAI,GAAK,EAAQ,KAAQ,EAAQ,IAAU,GAIrD,IAAK,EAAI,EAAI,EAAK,EAAI,IAAK,EACzB,EAAI,GAAK,EAGX,EAAO,IAAU,CAAC,EAClB,GAAQ,EAAQ,SAAa,CAAC,GAGhC,EAAK,UAAU,cAAgB,CAAK,CAAC,EAAG,CACtC,IAAI,EAAK,IAAI,MAAM,CAAC,EACpB,QAAS,EAAI,EAAG,EAAI,EAAG,IACrB,EAAG,GAAK,EAGV,OAAO,GAGT,EAAK,UAAU,cAAgB,CAAK,CAAC,EAAG,EAAG,EAAK,CAC9C,IAAI,EAAI,EAAI,KAAK,YAAY,EAAE,OAAQ,EAAE,MAAM,EAE3C,EAAM,KAAK,QAAQ,CAAC,EAEpB,EAAI,KAAK,KAAK,CAAC,EAEf,EAAM,IAAI,MAAM,CAAC,EACjB,EAAO,IAAI,MAAM,CAAC,EAClB,EAAO,IAAI,MAAM,CAAC,EAElB,EAAO,IAAI,MAAM,CAAC,EAClB,EAAQ,IAAI,MAAM,CAAC,EACnB,EAAQ,IAAI,MAAM,CAAC,EAEnB,EAAO,EAAI,MACf,EAAK,OAAS,EAEd,KAAK,WAAW,EAAE,MAAO,EAAE,OAAQ,EAAK,CAAC,EACzC,KAAK,WAAW,EAAE,MAAO,EAAE,OAAQ,EAAM,CAAC,EAE1C,KAAK,UAAU,EAAK,EAAG,EAAM,EAAM,EAAG,CAAG,EACzC,KAAK,UAAU,EAAM,EAAG,EAAO,EAAO,EAAG,CAAG,EAE5C,QAAS,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAI,EAAK,EAAK,GAAK,EAAM,GAAK,EAAK,GAAK,EAAM,GAC9C,EAAK,GAAK,EAAK,GAAK,EAAM,GAAK,EAAK,GAAK,EAAM,GAC/C,EAAK,GAAK,EAUZ,OAPA,KAAK,UAAU,EAAM,EAAM,CAAC,EAC5B,KAAK,UAAU,EAAM,EAAM,EAAM,EAAG,EAAG,CAAG,EAC1C,KAAK,UAAU,EAAM,EAAG,CAAC,EACzB,KAAK,aAAa,EAAM,CAAC,EAEzB,EAAI,SAAW,EAAE,SAAW,EAAE,SAC9B,EAAI,OAAS,EAAE,OAAS,EAAE,OACnB,EAAI,MAAM,GAInB,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,IAAI,EAAM,IAAI,EAAG,IAAI,EAErB,OADA,EAAI,MAAQ,IAAI,MAAM,KAAK,OAAS,EAAI,MAAM,EACvC,KAAK,MAAM,EAAK,CAAG,GAI5B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,IAAI,EAAM,IAAI,EAAG,IAAI,EAErB,OADA,EAAI,MAAQ,IAAI,MAAM,KAAK,OAAS,EAAI,MAAM,EACvC,GAAW,KAAM,EAAK,CAAG,GAIlC,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,MAAM,EAAE,MAAM,EAAK,IAAI,GAGrC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CACxC,SAAc,IAAQ,QAAQ,EAC9B,EAAO,EAAM,QAAS,EAGtB,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CACpC,IAAI,GAAK,KAAK,MAAM,GAAK,GAAK,EAC1B,GAAM,EAAI,WAAc,EAAQ,UACpC,IAAU,GACV,GAAU,EAAI,SAAa,EAE3B,GAAS,IAAO,GAChB,KAAK,MAAM,GAAK,EAAK,SAGvB,GAAI,IAAU,EACZ,KAAK,MAAM,GAAK,EAChB,KAAK,SAGP,OAAO,MAGT,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,GAI/B,EAAG,UAAU,aAAe,CAAI,EAAG,CACjC,OAAO,KAAK,IAAI,IAAI,GAItB,EAAG,UAAU,cAAgB,CAAK,EAAG,CACnC,OAAO,KAAK,KAAK,KAAK,MAAM,CAAC,GAI/B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,IAAI,EAAI,EAAW,CAAG,EACtB,GAAI,EAAE,SAAW,EAAG,OAAO,IAAI,EAAG,CAAC,EAGnC,IAAI,EAAM,KACV,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,EAAM,EAAI,IAAI,EAC/C,GAAI,EAAE,KAAO,EAAG,MAGlB,KAAM,EAAI,EAAE,OACV,QAAS,EAAI,EAAI,IAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,EAAI,EAAE,IAAI,EAAG,CACtD,GAAI,EAAE,KAAO,EAAG,SAEhB,EAAM,EAAI,IAAI,CAAC,EAInB,OAAO,GAIT,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAM,CAC3C,SAAc,IAAS,UAAY,GAAQ,CAAC,EAC5C,IAAI,EAAI,EAAO,GACX,GAAK,EAAO,GAAK,GACjB,EAAa,WAAe,GAAK,GAAQ,GAAK,EAC9C,EAEJ,GAAI,IAAM,EAAG,CACX,IAAI,EAAQ,EAEZ,IAAK,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CAChC,IAAI,EAAW,KAAK,MAAM,GAAK,EAC3B,GAAM,KAAK,MAAM,GAAK,GAAK,GAAa,EAC5C,KAAK,MAAM,GAAK,EAAI,EACpB,EAAQ,IAAc,GAAK,EAG7B,GAAI,EACF,KAAK,MAAM,GAAK,EAChB,KAAK,SAIT,GAAI,IAAM,EAAG,CACX,IAAK,EAAI,KAAK,OAAS,EAAG,GAAK,EAAG,IAChC,KAAK,MAAM,EAAI,GAAK,KAAK,MAAM,GAGjC,IAAK,EAAI,EAAG,EAAI,EAAG,IACjB,KAAK,MAAM,GAAK,EAGlB,KAAK,QAAU,EAGjB,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAM,CAGzC,OADA,EAAO,KAAK,WAAa,CAAC,EACnB,KAAK,OAAO,CAAI,GAMzB,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAM,EAAM,EAAU,CAC3D,SAAc,IAAS,UAAY,GAAQ,CAAC,EAC5C,IAAI,EACJ,GAAI,EACF,GAAK,EAAQ,EAAO,IAAO,OAE3B,GAAI,EAGN,IAAI,EAAI,EAAO,GACX,EAAI,KAAK,KAAK,EAAO,GAAK,GAAI,KAAK,MAAM,EACzC,EAAO,SAAc,WAAc,GAAM,EACzC,EAAc,EAMlB,GAJA,GAAK,EACL,EAAI,KAAK,IAAI,EAAG,CAAC,EAGb,EAAa,CACf,QAAS,EAAI,EAAG,EAAI,EAAG,IACrB,EAAY,MAAM,GAAK,KAAK,MAAM,GAEpC,EAAY,OAAS,EAGvB,GAAI,IAAM,EAAG,SAEF,KAAK,OAAS,EAAG,CAC1B,KAAK,QAAU,EACf,IAAK,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC3B,KAAK,MAAM,GAAK,KAAK,MAAM,EAAI,OAGjC,MAAK,MAAM,GAAK,EAChB,KAAK,OAAS,EAGhB,IAAI,EAAQ,EACZ,IAAK,EAAI,KAAK,OAAS,EAAG,GAAK,IAAM,IAAU,GAAK,GAAK,GAAI,IAAK,CAChE,IAAI,EAAO,KAAK,MAAM,GAAK,EAC3B,KAAK,MAAM,GAAM,GAAU,GAAK,EAAO,IAAS,EAChD,EAAQ,EAAO,EAIjB,GAAI,GAAe,IAAU,EAC3B,EAAY,MAAM,EAAY,UAAY,EAG5C,GAAI,KAAK,SAAW,EAClB,KAAK,MAAM,GAAK,EAChB,KAAK,OAAS,EAGhB,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAM,EAAM,EAAU,CAGzD,OADA,EAAO,KAAK,WAAa,CAAC,EACnB,KAAK,OAAO,EAAM,EAAM,CAAQ,GAIzC,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAM,CACvC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAI,GAGhC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAM,CACzC,OAAO,KAAK,MAAM,EAAE,OAAO,CAAI,GAIjC,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAM,CACvC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAI,GAGhC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAM,CACzC,OAAO,KAAK,MAAM,EAAE,OAAO,CAAI,GAIjC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CACxC,SAAc,IAAQ,UAAY,GAAO,CAAC,EAC1C,IAAI,EAAI,EAAM,GACV,GAAK,EAAM,GAAK,GAChB,EAAI,GAAK,EAGb,GAAI,KAAK,QAAU,EAAG,MAAO,GAG7B,IAAI,EAAI,KAAK,MAAM,GAEnB,SAAU,EAAI,IAIhB,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAM,CAC3C,SAAc,IAAS,UAAY,GAAQ,CAAC,EAC5C,IAAI,EAAI,EAAO,GACX,GAAK,EAAO,GAAK,GAIrB,GAFA,EAAO,KAAK,WAAa,EAAG,yCAAyC,EAEjE,KAAK,QAAU,EACjB,OAAO,KAGT,GAAI,IAAM,EACR,IAIF,GAFA,KAAK,OAAS,KAAK,IAAI,EAAG,KAAK,MAAM,EAEjC,IAAM,EAAG,CACX,IAAI,EAAO,SAAc,WAAc,GAAM,EAC7C,KAAK,MAAM,KAAK,OAAS,IAAM,EAGjC,OAAO,KAAK,MAAM,GAIpB,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAM,CACzC,OAAO,KAAK,MAAM,EAAE,OAAO,CAAI,GAIjC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CAGxC,GAFA,SAAc,IAAQ,QAAQ,EAC9B,EAAO,EAAM,QAAS,EAClB,EAAM,EAAG,OAAO,KAAK,OAAO,CAAG,EAGnC,GAAI,KAAK,WAAa,EAAG,CACvB,GAAI,KAAK,SAAW,IAAM,KAAK,MAAM,GAAK,GAAK,EAG7C,OAFA,KAAK,MAAM,GAAK,GAAO,KAAK,MAAM,GAAK,GACvC,KAAK,SAAW,EACT,KAMT,OAHA,KAAK,SAAW,EAChB,KAAK,MAAM,CAAG,EACd,KAAK,SAAW,EACT,KAIT,OAAO,KAAK,OAAO,CAAG,GAGxB,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAC1C,KAAK,MAAM,IAAM,EAGjB,QAAS,EAAI,EAAG,EAAI,KAAK,QAAU,KAAK,MAAM,IAAM,SAAW,IAE7D,GADA,KAAK,MAAM,IAAM,SACb,IAAM,KAAK,OAAS,EACtB,KAAK,MAAM,EAAI,GAAK,MAEpB,MAAK,MAAM,EAAI,KAKnB,OAFA,KAAK,OAAS,KAAK,IAAI,KAAK,OAAQ,EAAI,CAAC,EAElC,MAIT,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CAGxC,GAFA,SAAc,IAAQ,QAAQ,EAC9B,EAAO,EAAM,QAAS,EAClB,EAAM,EAAG,OAAO,KAAK,OAAO,CAAG,EAEnC,GAAI,KAAK,WAAa,EAIpB,OAHA,KAAK,SAAW,EAChB,KAAK,MAAM,CAAG,EACd,KAAK,SAAW,EACT,KAKT,GAFA,KAAK,MAAM,IAAM,EAEb,KAAK,SAAW,GAAK,KAAK,MAAM,GAAK,EACvC,KAAK,MAAM,IAAM,KAAK,MAAM,GAC5B,KAAK,SAAW,MAGhB,SAAS,EAAI,EAAG,EAAI,KAAK,QAAU,KAAK,MAAM,GAAK,EAAG,IACpD,KAAK,MAAM,IAAM,SACjB,KAAK,MAAM,EAAI,IAAM,EAIzB,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,GAG/B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,GAG/B,EAAG,UAAU,cAAgB,CAAK,EAAG,CAGnC,OAFA,KAAK,SAAW,EAET,MAGT,EAAG,UAAU,aAAe,CAAI,EAAG,CACjC,OAAO,KAAK,MAAM,EAAE,KAAK,GAG3B,EAAG,UAAU,sBAAwB,CAAa,CAAC,EAAK,EAAK,EAAO,CAClE,IAAI,EAAM,EAAI,OAAS,EACnB,EAEJ,KAAK,QAAQ,CAAG,EAEhB,IAAI,EACA,EAAQ,EACZ,IAAK,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CAC/B,GAAK,KAAK,MAAM,EAAI,GAAS,GAAK,EAClC,IAAI,GAAS,EAAI,MAAM,GAAK,GAAK,EACjC,GAAK,EAAQ,SACb,GAAS,GAAK,KAAQ,EAAQ,SAAa,GAC3C,KAAK,MAAM,EAAI,GAAS,EAAI,SAE9B,KAAO,EAAI,KAAK,OAAS,EAAO,IAC9B,GAAK,KAAK,MAAM,EAAI,GAAS,GAAK,EAClC,EAAQ,GAAK,GACb,KAAK,MAAM,EAAI,GAAS,EAAI,SAG9B,GAAI,IAAU,EAAG,OAAO,KAAK,MAAM,EAGnC,EAAO,IAAU,EAAE,EACnB,EAAQ,EACR,IAAK,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC3B,IAAM,KAAK,MAAM,GAAK,GAAK,EAC3B,EAAQ,GAAK,GACb,KAAK,MAAM,GAAK,EAAI,SAItB,OAFA,KAAK,SAAW,EAET,KAAK,MAAM,GAGpB,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAK,EAAM,CACpD,IAAI,EAAQ,KAAK,OAAS,EAAI,OAE1B,EAAI,KAAK,MAAM,EACf,EAAI,EAGJ,EAAM,EAAE,MAAM,EAAE,OAAS,GAAK,EAC9B,EAAU,KAAK,WAAW,CAAG,EAEjC,GADA,EAAQ,GAAK,EACT,IAAU,EACZ,EAAI,EAAE,MAAM,CAAK,EACjB,EAAE,OAAO,CAAK,EACd,EAAM,EAAE,MAAM,EAAE,OAAS,GAAK,EAIhC,IAAI,EAAI,EAAE,OAAS,EAAE,OACjB,EAEJ,GAAI,IAAS,MAAO,CAClB,EAAI,IAAI,EAAG,IAAI,EACf,EAAE,OAAS,EAAI,EACf,EAAE,MAAQ,IAAI,MAAM,EAAE,MAAM,EAC5B,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,EAAE,MAAM,GAAK,EAIjB,IAAI,EAAO,EAAE,MAAM,EAAE,aAAa,EAAG,EAAG,CAAC,EACzC,GAAI,EAAK,WAAa,GAEpB,GADA,EAAI,EACA,EACF,EAAE,MAAM,GAAK,EAIjB,QAAS,EAAI,EAAI,EAAG,GAAK,EAAG,IAAK,CAC/B,IAAI,GAAM,EAAE,MAAM,EAAE,OAAS,GAAK,GAAK,UACpC,EAAE,MAAM,EAAE,OAAS,EAAI,GAAK,GAI/B,EAAK,KAAK,IAAK,EAAK,EAAO,EAAG,QAAS,EAEvC,EAAE,aAAa,EAAG,EAAI,CAAC,EACvB,MAAO,EAAE,WAAa,EAIpB,GAHA,IACA,EAAE,SAAW,EACb,EAAE,aAAa,EAAG,EAAG,CAAC,GACjB,EAAE,OAAO,EACZ,EAAE,UAAY,EAGlB,GAAI,EACF,EAAE,MAAM,GAAK,EAGjB,GAAI,EACF,EAAE,MAAM,EAKV,GAHA,EAAE,MAAM,EAGJ,IAAS,OAAS,IAAU,EAC9B,EAAE,OAAO,CAAK,EAGhB,MAAO,CACL,IAAK,GAAK,KACV,IAAK,CACP,GAOF,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,EAAM,EAAU,CAG1D,GAFA,GAAQ,EAAI,OAAO,CAAC,EAEhB,KAAK,OAAO,EACd,MAAO,CACL,IAAK,IAAI,EAAG,CAAC,EACb,IAAK,IAAI,EAAG,CAAC,CACf,EAGF,IAAI,EAAK,EAAK,EACd,GAAI,KAAK,WAAa,GAAK,EAAI,WAAa,EAAG,CAG7C,GAFA,EAAM,KAAK,IAAI,EAAE,OAAO,EAAK,CAAI,EAE7B,IAAS,MACX,EAAM,EAAI,IAAI,IAAI,EAGpB,GAAI,IAAS,OAEX,GADA,EAAM,EAAI,IAAI,IAAI,EACd,GAAY,EAAI,WAAa,EAC/B,EAAI,KAAK,CAAG,EAIhB,MAAO,CACL,IAAK,EACL,IAAK,CACP,EAGF,GAAI,KAAK,WAAa,GAAK,EAAI,WAAa,EAAG,CAG7C,GAFA,EAAM,KAAK,OAAO,EAAI,IAAI,EAAG,CAAI,EAE7B,IAAS,MACX,EAAM,EAAI,IAAI,IAAI,EAGpB,MAAO,CACL,IAAK,EACL,IAAK,EAAI,GACX,EAGF,IAAK,KAAK,SAAW,EAAI,YAAc,EAAG,CAGxC,GAFA,EAAM,KAAK,IAAI,EAAE,OAAO,EAAI,IAAI,EAAG,CAAI,EAEnC,IAAS,OAEX,GADA,EAAM,EAAI,IAAI,IAAI,EACd,GAAY,EAAI,WAAa,EAC/B,EAAI,KAAK,CAAG,EAIhB,MAAO,CACL,IAAK,EAAI,IACT,IAAK,CACP,EAMF,GAAI,EAAI,OAAS,KAAK,QAAU,KAAK,IAAI,CAAG,EAAI,EAC9C,MAAO,CACL,IAAK,IAAI,EAAG,CAAC,EACb,IAAK,IACP,EAIF,GAAI,EAAI,SAAW,EAAG,CACpB,GAAI,IAAS,MACX,MAAO,CACL,IAAK,KAAK,KAAK,EAAI,MAAM,EAAE,EAC3B,IAAK,IACP,EAGF,GAAI,IAAS,MACX,MAAO,CACL,IAAK,KACL,IAAK,IAAI,EAAG,KAAK,KAAK,EAAI,MAAM,EAAE,CAAC,CACrC,EAGF,MAAO,CACL,IAAK,KAAK,KAAK,EAAI,MAAM,EAAE,EAC3B,IAAK,IAAI,EAAG,KAAK,KAAK,EAAI,MAAM,EAAE,CAAC,CACrC,EAGF,OAAO,KAAK,SAAS,EAAK,CAAI,GAIhC,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,OAAO,EAAK,MAAO,EAAK,EAAE,KAIxC,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,OAAO,EAAK,MAAO,EAAK,EAAE,KAGxC,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,OAAO,EAAK,MAAO,EAAI,EAAE,KAIvC,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAK,CAC9C,IAAI,EAAK,KAAK,OAAO,CAAG,EAGxB,GAAI,EAAG,IAAI,OAAO,EAAG,OAAO,EAAG,IAE/B,IAAI,EAAM,EAAG,IAAI,WAAa,EAAI,EAAG,IAAI,KAAK,CAAG,EAAI,EAAG,IAEpD,EAAO,EAAI,MAAM,CAAC,EAClB,EAAK,EAAI,MAAM,CAAC,EAChB,EAAM,EAAI,IAAI,CAAI,EAGtB,GAAI,EAAM,GAAK,IAAO,GAAK,IAAQ,EAAG,OAAO,EAAG,IAGhD,OAAO,EAAG,IAAI,WAAa,EAAI,EAAG,IAAI,MAAM,CAAC,EAAI,EAAG,IAAI,MAAM,CAAC,GAGjE,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,EAAO,GAAO,QAAS,EACvB,IAAI,EAAK,SAAW,EAEhB,EAAM,EACV,QAAS,EAAI,KAAK,OAAS,EAAG,GAAK,EAAG,IACpC,GAAO,EAAI,GAAO,KAAK,MAAM,GAAK,IAAM,EAG1C,OAAO,GAIT,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CACxC,EAAO,GAAO,QAAS,EAEvB,IAAI,EAAQ,EACZ,QAAS,EAAI,KAAK,OAAS,EAAG,GAAK,EAAG,IAAK,CACzC,IAAI,GAAK,KAAK,MAAM,GAAK,GAAK,EAAQ,SACtC,KAAK,MAAM,GAAM,EAAI,EAAO,EAC5B,EAAQ,EAAI,EAGd,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,GAG/B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAG,CACpC,EAAO,EAAE,WAAa,CAAC,EACvB,GAAQ,EAAE,OAAO,CAAC,EAElB,IAAI,EAAI,KACJ,EAAI,EAAE,MAAM,EAEhB,GAAI,EAAE,WAAa,EACjB,EAAI,EAAE,KAAK,CAAC,MAEZ,GAAI,EAAE,MAAM,EAId,IAAI,EAAI,IAAI,EAAG,CAAC,EACZ,EAAI,IAAI,EAAG,CAAC,EAGZ,EAAI,IAAI,EAAG,CAAC,EACZ,EAAI,IAAI,EAAG,CAAC,EAEZ,EAAI,EAER,MAAO,EAAE,OAAO,GAAK,EAAE,OAAO,EAC5B,EAAE,OAAO,CAAC,EACV,EAAE,OAAO,CAAC,IACR,EAGJ,IAAI,EAAK,EAAE,MAAM,EACb,EAAK,EAAE,MAAM,EAEjB,OAAQ,EAAE,OAAO,EAAG,CAClB,QAAS,EAAI,EAAG,EAAK,GAAI,EAAE,MAAM,GAAK,KAAQ,GAAK,EAAI,KAAM,EAAG,IAAO,GACvE,GAAI,EAAI,EAAG,CACT,EAAE,OAAO,CAAC,EACV,MAAO,KAAM,EAAG,CACd,GAAI,EAAE,MAAM,GAAK,EAAE,MAAM,EACvB,EAAE,KAAK,CAAE,EACT,EAAE,KAAK,CAAE,EAGX,EAAE,OAAO,CAAC,EACV,EAAE,OAAO,CAAC,GAId,QAAS,EAAI,EAAG,EAAK,GAAI,EAAE,MAAM,GAAK,KAAQ,GAAK,EAAI,KAAM,EAAG,IAAO,GACvE,GAAI,EAAI,EAAG,CACT,EAAE,OAAO,CAAC,EACV,MAAO,KAAM,EAAG,CACd,GAAI,EAAE,MAAM,GAAK,EAAE,MAAM,EACvB,EAAE,KAAK,CAAE,EACT,EAAE,KAAK,CAAE,EAGX,EAAE,OAAO,CAAC,EACV,EAAE,OAAO,CAAC,GAId,GAAI,EAAE,IAAI,CAAC,GAAK,EACd,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,MAER,GAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,EACR,EAAE,KAAK,CAAC,EAIZ,MAAO,CACL,EAAG,EACH,EAAG,EACH,IAAK,EAAE,OAAO,CAAC,CACjB,GAMF,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAG,CACxC,EAAO,EAAE,WAAa,CAAC,EACvB,GAAQ,EAAE,OAAO,CAAC,EAElB,IAAI,EAAI,KACJ,EAAI,EAAE,MAAM,EAEhB,GAAI,EAAE,WAAa,EACjB,EAAI,EAAE,KAAK,CAAC,MAEZ,GAAI,EAAE,MAAM,EAGd,IAAI,EAAK,IAAI,EAAG,CAAC,EACb,EAAK,IAAI,EAAG,CAAC,EAEb,EAAQ,EAAE,MAAM,EAEpB,MAAO,EAAE,KAAK,CAAC,EAAI,GAAK,EAAE,KAAK,CAAC,EAAI,EAAG,CACrC,QAAS,EAAI,EAAG,EAAK,GAAI,EAAE,MAAM,GAAK,KAAQ,GAAK,EAAI,KAAM,EAAG,IAAO,GACvE,GAAI,EAAI,EAAG,CACT,EAAE,OAAO,CAAC,EACV,MAAO,KAAM,EAAG,CACd,GAAI,EAAG,MAAM,EACX,EAAG,KAAK,CAAK,EAGf,EAAG,OAAO,CAAC,GAIf,QAAS,EAAI,EAAG,EAAK,GAAI,EAAE,MAAM,GAAK,KAAQ,GAAK,EAAI,KAAM,EAAG,IAAO,GACvE,GAAI,EAAI,EAAG,CACT,EAAE,OAAO,CAAC,EACV,MAAO,KAAM,EAAG,CACd,GAAI,EAAG,MAAM,EACX,EAAG,KAAK,CAAK,EAGf,EAAG,OAAO,CAAC,GAIf,GAAI,EAAE,IAAI,CAAC,GAAK,EACd,EAAE,KAAK,CAAC,EACR,EAAG,KAAK,CAAE,MAEV,GAAE,KAAK,CAAC,EACR,EAAG,KAAK,CAAE,EAId,IAAI,EACJ,GAAI,EAAE,KAAK,CAAC,IAAM,EAChB,EAAM,MAEN,GAAM,EAGR,GAAI,EAAI,KAAK,CAAC,EAAI,EAChB,EAAI,KAAK,CAAC,EAGZ,OAAO,GAGT,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,GAAI,KAAK,OAAO,EAAG,OAAO,EAAI,IAAI,EAClC,GAAI,EAAI,OAAO,EAAG,OAAO,KAAK,IAAI,EAElC,IAAI,EAAI,KAAK,MAAM,EACf,EAAI,EAAI,MAAM,EAClB,EAAE,SAAW,EACb,EAAE,SAAW,EAGb,QAAS,EAAQ,EAAG,EAAE,OAAO,GAAK,EAAE,OAAO,EAAG,IAC5C,EAAE,OAAO,CAAC,EACV,EAAE,OAAO,CAAC,EAGZ,EAAG,CACD,MAAO,EAAE,OAAO,EACd,EAAE,OAAO,CAAC,EAEZ,MAAO,EAAE,OAAO,EACd,EAAE,OAAO,CAAC,EAGZ,IAAI,EAAI,EAAE,IAAI,CAAC,EACf,GAAI,EAAI,EAAG,CAET,IAAI,EAAI,EACR,EAAI,EACJ,EAAI,UACK,IAAM,GAAK,EAAE,KAAK,CAAC,IAAM,EAClC,MAGF,EAAE,KAAK,CAAC,QACD,IAET,OAAO,EAAE,OAAO,CAAK,GAIvB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,KAAK,CAAG,EAAE,EAAE,KAAK,CAAG,GAGlC,EAAG,UAAU,gBAAkB,CAAO,EAAG,CACvC,OAAQ,KAAK,MAAM,GAAK,KAAO,GAGjC,EAAG,UAAU,eAAiB,CAAM,EAAG,CACrC,OAAQ,KAAK,MAAM,GAAK,KAAO,GAIjC,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CACxC,OAAO,KAAK,MAAM,GAAK,GAIzB,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CACxC,SAAc,IAAQ,QAAQ,EAC9B,IAAI,EAAI,EAAM,GACV,GAAK,EAAM,GAAK,GAChB,EAAI,GAAK,EAGb,GAAI,KAAK,QAAU,EAGjB,OAFA,KAAK,QAAQ,EAAI,CAAC,EAClB,KAAK,MAAM,IAAM,EACV,KAIT,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,IAAU,GAAK,EAAI,KAAK,OAAQ,IAAK,CACnD,IAAI,EAAI,KAAK,MAAM,GAAK,EACxB,GAAK,EACL,EAAQ,IAAM,GACd,GAAK,SACL,KAAK,MAAM,GAAK,EAElB,GAAI,IAAU,EACZ,KAAK,MAAM,GAAK,EAChB,KAAK,SAEP,OAAO,MAGT,EAAG,UAAU,gBAAkB,CAAO,EAAG,CACvC,OAAO,KAAK,SAAW,GAAK,KAAK,MAAM,KAAO,GAGhD,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,IAAI,EAAW,EAAM,EAErB,GAAI,KAAK,WAAa,IAAM,EAAU,MAAO,GAC7C,GAAI,KAAK,WAAa,GAAK,EAAU,MAAO,GAE5C,KAAK,MAAM,EAEX,IAAI,EACJ,GAAI,KAAK,OAAS,EAChB,EAAM,MACD,CACL,GAAI,EACF,GAAO,EAGT,EAAO,GAAO,SAAW,mBAAmB,EAE5C,IAAI,EAAI,KAAK,MAAM,GAAK,EACxB,EAAM,IAAM,EAAM,EAAI,EAAI,EAAM,GAAK,EAEvC,GAAI,KAAK,WAAa,EAAG,OAAQ,EAAM,EACvC,OAAO,GAOT,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,GAAI,KAAK,WAAa,GAAK,EAAI,WAAa,EAAG,MAAO,GACtD,GAAI,KAAK,WAAa,GAAK,EAAI,WAAa,EAAG,MAAO,GAEtD,IAAI,EAAM,KAAK,KAAK,CAAG,EACvB,GAAI,KAAK,WAAa,EAAG,OAAQ,EAAM,EACvC,OAAO,GAIT,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CAEtC,GAAI,KAAK,OAAS,EAAI,OAAQ,MAAO,GACrC,GAAI,KAAK,OAAS,EAAI,OAAQ,MAAO,GAErC,IAAI,EAAM,EACV,QAAS,EAAI,KAAK,OAAS,EAAG,GAAK,EAAG,IAAK,CACzC,IAAI,EAAI,KAAK,MAAM,GAAK,EACpB,EAAI,EAAI,MAAM,GAAK,EAEvB,GAAI,IAAM,EAAG,SACb,GAAI,EAAI,EACN,EAAM,WACG,EAAI,EACb,EAAM,EAER,MAEF,OAAO,GAGT,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,KAAK,CAAG,IAAM,GAG5B,EAAG,UAAU,YAAc,CAAG,CAAC,EAAK,CAClC,OAAO,KAAK,IAAI,CAAG,IAAM,GAG3B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,KAAK,CAAG,GAAK,GAG3B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,IAAI,CAAG,GAAK,GAG1B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,KAAK,CAAG,IAAM,IAG5B,EAAG,UAAU,YAAc,CAAG,CAAC,EAAK,CAClC,OAAO,KAAK,IAAI,CAAG,IAAM,IAG3B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,OAAO,KAAK,KAAK,CAAG,GAAK,GAG3B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,IAAI,CAAG,GAAK,GAG1B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,KAAK,CAAG,IAAM,GAG5B,EAAG,UAAU,YAAc,CAAG,CAAC,EAAK,CAClC,OAAO,KAAK,IAAI,CAAG,IAAM,GAO3B,EAAG,aAAe,CAAI,CAAC,EAAK,CAC1B,OAAO,IAAI,EAAI,CAAG,GAGpB,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CAGxC,OAFA,GAAQ,KAAK,IAAK,uCAAuC,EACzD,EAAO,KAAK,WAAa,EAAG,+BAA+B,EACpD,EAAI,UAAU,IAAI,EAAE,UAAU,CAAG,GAG1C,EAAG,UAAU,iBAAmB,CAAQ,EAAG,CAEzC,OADA,EAAO,KAAK,IAAK,sDAAsD,EAChE,KAAK,IAAI,YAAY,IAAI,GAGlC,EAAG,UAAU,mBAAqB,CAAU,CAAC,EAAK,CAEhD,OADA,KAAK,IAAM,EACJ,MAGT,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAK,CAE9C,OADA,GAAQ,KAAK,IAAK,uCAAuC,EAClD,KAAK,UAAU,CAAG,GAG3B,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAE1C,OADA,EAAO,KAAK,IAAK,oCAAoC,EAC9C,KAAK,IAAI,IAAI,KAAM,CAAG,GAG/B,EAAG,UAAU,iBAAmB,CAAQ,CAAC,EAAK,CAE5C,OADA,EAAO,KAAK,IAAK,qCAAqC,EAC/C,KAAK,IAAI,KAAK,KAAM,CAAG,GAGhC,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAE1C,OADA,EAAO,KAAK,IAAK,oCAAoC,EAC9C,KAAK,IAAI,IAAI,KAAM,CAAG,GAG/B,EAAG,UAAU,iBAAmB,CAAQ,CAAC,EAAK,CAE5C,OADA,EAAO,KAAK,IAAK,qCAAqC,EAC/C,KAAK,IAAI,KAAK,KAAM,CAAG,GAGhC,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAE1C,OADA,EAAO,KAAK,IAAK,oCAAoC,EAC9C,KAAK,IAAI,IAAI,KAAM,CAAG,GAG/B,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAG1C,OAFA,EAAO,KAAK,IAAK,oCAAoC,EACrD,KAAK,IAAI,SAAS,KAAM,CAAG,EACpB,KAAK,IAAI,IAAI,KAAM,CAAG,GAG/B,EAAG,UAAU,iBAAmB,CAAQ,CAAC,EAAK,CAG5C,OAFA,EAAO,KAAK,IAAK,oCAAoC,EACrD,KAAK,IAAI,SAAS,KAAM,CAAG,EACpB,KAAK,IAAI,KAAK,KAAM,CAAG,GAGhC,EAAG,UAAU,gBAAkB,CAAO,EAAG,CAGvC,OAFA,EAAO,KAAK,IAAK,oCAAoC,EACrD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,IAAI,IAAI,GAG1B,EAAG,UAAU,iBAAmB,CAAQ,EAAG,CAGzC,OAFA,EAAO,KAAK,IAAK,qCAAqC,EACtD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,KAAK,IAAI,GAI3B,EAAG,UAAU,iBAAmB,CAAQ,EAAG,CAGzC,OAFA,EAAO,KAAK,IAAK,qCAAqC,EACtD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,KAAK,IAAI,GAG3B,EAAG,UAAU,iBAAmB,CAAQ,EAAG,CAGzC,OAFA,EAAO,KAAK,IAAK,qCAAqC,EACtD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,KAAK,IAAI,GAI3B,EAAG,UAAU,gBAAkB,CAAO,EAAG,CAGvC,OAFA,EAAO,KAAK,IAAK,oCAAoC,EACrD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,IAAI,IAAI,GAG1B,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAK,CAG1C,OAFA,EAAO,KAAK,MAAQ,EAAI,IAAK,mBAAmB,EAChD,KAAK,IAAI,SAAS,IAAI,EACf,KAAK,IAAI,IAAI,KAAM,CAAG,GAI/B,IAAI,EAAS,CACX,KAAM,KACN,KAAM,KACN,KAAM,KACN,OAAQ,IACV,EAGA,SAAS,CAAO,CAAC,EAAM,EAAG,CAExB,KAAK,KAAO,EACZ,KAAK,EAAI,IAAI,EAAG,EAAG,EAAE,EACrB,KAAK,EAAI,KAAK,EAAE,UAAU,EAC1B,KAAK,EAAI,IAAI,EAAG,CAAC,EAAE,OAAO,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAE7C,KAAK,IAAM,KAAK,KAAK,EAGvB,EAAO,UAAU,cAAgB,CAAK,EAAG,CACvC,IAAI,EAAM,IAAI,EAAG,IAAI,EAErB,OADA,EAAI,MAAQ,IAAI,MAAM,KAAK,KAAK,KAAK,EAAI,EAAE,CAAC,EACrC,GAGT,EAAO,UAAU,iBAAmB,CAAQ,CAAC,EAAK,CAGhD,IAAI,EAAI,EACJ,EAEJ,EACE,MAAK,MAAM,EAAG,KAAK,GAAG,EACtB,EAAI,KAAK,MAAM,CAAC,EAChB,EAAI,EAAE,KAAK,KAAK,GAAG,EACnB,EAAO,EAAE,UAAU,QACZ,EAAO,KAAK,GAErB,IAAI,EAAM,EAAO,KAAK,EAAI,GAAK,EAAE,KAAK,KAAK,CAAC,EAC5C,GAAI,IAAQ,EACV,EAAE,MAAM,GAAK,EACb,EAAE,OAAS,UACF,EAAM,EACf,EAAE,KAAK,KAAK,CAAC,UAET,EAAE,QAAU,OAEd,EAAE,MAAM,MAGR,GAAE,OAAO,EAIb,OAAO,GAGT,EAAO,UAAU,eAAiB,CAAM,CAAC,EAAO,EAAK,CACnD,EAAM,OAAO,KAAK,EAAG,EAAG,CAAG,GAG7B,EAAO,UAAU,eAAiB,CAAM,CAAC,EAAK,CAC5C,OAAO,EAAI,KAAK,KAAK,CAAC,GAGxB,SAAS,CAAK,EAAG,CACf,EAAO,KACL,KACA,OACA,yEAAyE,EAE7E,EAAS,EAAM,CAAM,EAErB,EAAK,UAAU,eAAiB,CAAM,CAAC,EAAO,EAAQ,CAEpD,IAAI,EAAO,QAEP,EAAS,KAAK,IAAI,EAAM,OAAQ,CAAC,EACrC,QAAS,EAAI,EAAG,EAAI,EAAQ,IAC1B,EAAO,MAAM,GAAK,EAAM,MAAM,GAIhC,GAFA,EAAO,OAAS,EAEZ,EAAM,QAAU,EAAG,CACrB,EAAM,MAAM,GAAK,EACjB,EAAM,OAAS,EACf,OAIF,IAAI,EAAO,EAAM,MAAM,GACvB,EAAO,MAAM,EAAO,UAAY,EAAO,EAEvC,IAAK,EAAI,GAAI,EAAI,EAAM,OAAQ,IAAK,CAClC,IAAI,EAAO,EAAM,MAAM,GAAK,EAC5B,EAAM,MAAM,EAAI,KAAQ,EAAO,IAAS,EAAM,IAAS,GACvD,EAAO,EAIT,GAFA,KAAU,GACV,EAAM,MAAM,EAAI,IAAM,EAClB,IAAS,GAAK,EAAM,OAAS,GAC/B,EAAM,QAAU,OAEhB,GAAM,QAAU,GAIpB,EAAK,UAAU,eAAiB,CAAM,CAAC,EAAK,CAE1C,EAAI,MAAM,EAAI,QAAU,EACxB,EAAI,MAAM,EAAI,OAAS,GAAK,EAC5B,EAAI,QAAU,EAGd,IAAI,EAAK,EACT,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACnC,IAAI,EAAI,EAAI,MAAM,GAAK,EACvB,GAAM,EAAI,IACV,EAAI,MAAM,GAAK,EAAK,SACpB,EAAK,EAAI,IAAS,EAAK,SAAa,GAItC,GAAI,EAAI,MAAM,EAAI,OAAS,KAAO,GAEhC,GADA,EAAI,SACA,EAAI,MAAM,EAAI,OAAS,KAAO,EAChC,EAAI,SAGR,OAAO,GAGT,SAAS,EAAK,EAAG,CACf,EAAO,KACL,KACA,OACA,gEAAgE,EAEpE,EAAS,GAAM,CAAM,EAErB,SAAS,CAAK,EAAG,CACf,EAAO,KACL,KACA,OACA,uDAAuD,EAE3D,EAAS,EAAM,CAAM,EAErB,SAAS,EAAO,EAAG,CAEjB,EAAO,KACL,KACA,QACA,qEAAqE,EAEzE,EAAS,GAAQ,CAAM,EAEvB,GAAO,UAAU,eAAiB,CAAM,CAAC,EAAK,CAE5C,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CACnC,IAAI,GAAM,EAAI,MAAM,GAAK,GAAK,GAAO,EACjC,EAAK,EAAK,SACd,KAAQ,GAER,EAAI,MAAM,GAAK,EACf,EAAQ,EAEV,GAAI,IAAU,EACZ,EAAI,MAAM,EAAI,UAAY,EAE5B,OAAO,GAIT,EAAG,gBAAkB,CAAM,CAAC,EAAM,CAEhC,GAAI,EAAO,GAAO,OAAO,EAAO,GAEhC,IAAI,EACJ,GAAI,IAAS,OACX,EAAQ,IAAI,UACH,IAAS,OAClB,EAAQ,IAAI,WACH,IAAS,OAClB,EAAQ,IAAI,UACH,IAAS,SAClB,EAAQ,IAAI,OAEZ,OAAM,IAAI,MAAM,iBAAmB,CAAI,EAIzC,OAFA,EAAO,GAAQ,EAER,GAMT,SAAS,CAAI,CAAC,EAAG,CACf,UAAW,IAAM,SAAU,CACzB,IAAI,EAAQ,EAAG,OAAO,CAAC,EACvB,KAAK,EAAI,EAAM,EACf,KAAK,MAAQ,MAEb,GAAO,EAAE,IAAI,CAAC,EAAG,gCAAgC,EACjD,KAAK,EAAI,EACT,KAAK,MAAQ,KAIjB,EAAI,UAAU,kBAAoB,CAAS,CAAC,EAAG,CAC7C,EAAO,EAAE,WAAa,EAAG,+BAA+B,EACxD,EAAO,EAAE,IAAK,iCAAiC,GAGjD,EAAI,UAAU,kBAAoB,CAAS,CAAC,EAAG,EAAG,CAChD,GAAQ,EAAE,SAAW,EAAE,YAAc,EAAG,+BAA+B,EACvE,EAAO,EAAE,KAAO,EAAE,MAAQ,EAAE,IAC1B,iCAAiC,GAGrC,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,CACrC,GAAI,KAAK,MAAO,OAAO,KAAK,MAAM,QAAQ,CAAC,EAAE,UAAU,IAAI,EAC3D,OAAO,EAAE,KAAK,KAAK,CAAC,EAAE,UAAU,IAAI,GAGtC,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,CACnC,GAAI,EAAE,OAAO,EACX,OAAO,EAAE,MAAM,EAGjB,OAAO,KAAK,EAAE,IAAI,CAAC,EAAE,UAAU,IAAI,GAGrC,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,EAAG,CACtC,KAAK,SAAS,EAAG,CAAC,EAElB,IAAI,EAAM,EAAE,IAAI,CAAC,EACjB,GAAI,EAAI,IAAI,KAAK,CAAC,GAAK,EACrB,EAAI,KAAK,KAAK,CAAC,EAEjB,OAAO,EAAI,UAAU,IAAI,GAG3B,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,EAAG,CACxC,KAAK,SAAS,EAAG,CAAC,EAElB,IAAI,EAAM,EAAE,KAAK,CAAC,EAClB,GAAI,EAAI,IAAI,KAAK,CAAC,GAAK,EACrB,EAAI,KAAK,KAAK,CAAC,EAEjB,OAAO,GAGT,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,EAAG,CACtC,KAAK,SAAS,EAAG,CAAC,EAElB,IAAI,EAAM,EAAE,IAAI,CAAC,EACjB,GAAI,EAAI,KAAK,CAAC,EAAI,EAChB,EAAI,KAAK,KAAK,CAAC,EAEjB,OAAO,EAAI,UAAU,IAAI,GAG3B,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,EAAG,CACxC,KAAK,SAAS,EAAG,CAAC,EAElB,IAAI,EAAM,EAAE,KAAK,CAAC,EAClB,GAAI,EAAI,KAAK,CAAC,EAAI,EAChB,EAAI,KAAK,KAAK,CAAC,EAEjB,OAAO,GAGT,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,EAAK,CAExC,OADA,KAAK,SAAS,CAAC,EACR,KAAK,KAAK,EAAE,MAAM,CAAG,CAAC,GAG/B,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,EAAG,CAExC,OADA,KAAK,SAAS,EAAG,CAAC,EACX,KAAK,KAAK,EAAE,KAAK,CAAC,CAAC,GAG5B,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,EAAG,CAEtC,OADA,KAAK,SAAS,EAAG,CAAC,EACX,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,GAG3B,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,CACrC,OAAO,KAAK,KAAK,EAAG,EAAE,MAAM,CAAC,GAG/B,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,CACnC,OAAO,KAAK,IAAI,EAAG,CAAC,GAGtB,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,CACrC,GAAI,EAAE,OAAO,EAAG,OAAO,EAAE,MAAM,EAE/B,IAAI,EAAO,KAAK,EAAE,MAAM,CAAC,EAIzB,GAHA,EAAO,EAAO,IAAM,CAAC,EAGjB,IAAS,EAAG,CACd,IAAI,EAAM,KAAK,EAAE,IAAI,IAAI,EAAG,CAAC,CAAC,EAAE,OAAO,CAAC,EACxC,OAAO,KAAK,IAAI,EAAG,CAAG,EAMxB,IAAI,EAAI,KAAK,EAAE,KAAK,CAAC,EACjB,EAAI,EACR,OAAQ,EAAE,OAAO,GAAK,EAAE,MAAM,CAAC,IAAM,EACnC,IACA,EAAE,OAAO,CAAC,EAEZ,GAAQ,EAAE,OAAO,CAAC,EAElB,IAAI,EAAM,IAAI,EAAG,CAAC,EAAE,MAAM,IAAI,EAC1B,EAAO,EAAI,OAAO,EAIlB,EAAO,KAAK,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,EAC9B,EAAI,KAAK,EAAE,UAAU,EACzB,EAAI,IAAI,EAAG,EAAI,EAAI,CAAC,EAAE,MAAM,IAAI,EAEhC,MAAO,KAAK,IAAI,EAAG,CAAI,EAAE,IAAI,CAAI,IAAM,EACrC,EAAE,QAAQ,CAAI,EAGhB,IAAI,EAAI,KAAK,IAAI,EAAG,CAAC,EACjB,EAAI,KAAK,IAAI,EAAG,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,EACnC,EAAI,KAAK,IAAI,EAAG,CAAC,EACjB,EAAI,EACR,MAAO,EAAE,IAAI,CAAG,IAAM,EAAG,CACvB,IAAI,EAAM,EACV,QAAS,EAAI,EAAG,EAAI,IAAI,CAAG,IAAM,EAAG,IAClC,EAAM,EAAI,OAAO,EAEnB,EAAO,EAAI,CAAC,EACZ,IAAI,EAAI,KAAK,IAAI,EAAG,IAAI,EAAG,CAAC,EAAE,OAAO,EAAI,EAAI,CAAC,CAAC,EAE/C,EAAI,EAAE,OAAO,CAAC,EACd,EAAI,EAAE,OAAO,EACb,EAAI,EAAE,OAAO,CAAC,EACd,EAAI,EAGN,OAAO,GAGT,EAAI,UAAU,cAAgB,CAAK,CAAC,EAAG,CACrC,IAAI,EAAM,EAAE,OAAO,KAAK,CAAC,EACzB,GAAI,EAAI,WAAa,EAEnB,OADA,EAAI,SAAW,EACR,KAAK,KAAK,CAAG,EAAE,OAAO,MAE7B,QAAO,KAAK,KAAK,CAAG,GAIxB,EAAI,UAAU,aAAe,CAAI,CAAC,EAAG,EAAK,CACxC,GAAI,EAAI,OAAO,EAAG,OAAO,IAAI,EAAG,CAAC,EAAE,MAAM,IAAI,EAC7C,GAAI,EAAI,KAAK,CAAC,IAAM,EAAG,OAAO,EAAE,MAAM,EAEtC,IAAI,EAAa,EACb,EAAM,IAAI,MAAM,GAAK,CAAU,EACnC,EAAI,GAAK,IAAI,EAAG,CAAC,EAAE,MAAM,IAAI,EAC7B,EAAI,GAAK,EACT,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC9B,EAAI,GAAK,KAAK,IAAI,EAAI,EAAI,GAAI,CAAC,EAGjC,IAAI,EAAM,EAAI,GACV,EAAU,EACV,EAAa,EACb,EAAQ,EAAI,UAAU,EAAI,GAC9B,GAAI,IAAU,EACZ,EAAQ,GAGV,IAAK,EAAI,EAAI,OAAS,EAAG,GAAK,EAAG,IAAK,CACpC,IAAI,EAAO,EAAI,MAAM,GACrB,QAAS,EAAI,EAAQ,EAAG,GAAK,EAAG,IAAK,CACnC,IAAI,EAAO,GAAQ,EAAK,EACxB,GAAI,IAAQ,EAAI,GACd,EAAM,KAAK,IAAI,CAAG,EAGpB,GAAI,IAAQ,GAAK,IAAY,EAAG,CAC9B,EAAa,EACb,SAMF,GAHA,IAAY,EACZ,GAAW,EACX,IACI,IAAe,IAAe,IAAM,GAAK,IAAM,GAAI,SAEvD,EAAM,KAAK,IAAI,EAAK,EAAI,EAAQ,EAChC,EAAa,EACb,EAAU,EAEZ,EAAQ,GAGV,OAAO,GAGT,EAAI,UAAU,mBAAqB,CAAU,CAAC,EAAK,CACjD,IAAI,EAAI,EAAI,KAAK,KAAK,CAAC,EAEvB,OAAO,IAAM,EAAM,EAAE,MAAM,EAAI,GAGjC,EAAI,UAAU,qBAAuB,CAAY,CAAC,EAAK,CACrD,IAAI,EAAM,EAAI,MAAM,EAEpB,OADA,EAAI,IAAM,KACH,GAOT,EAAG,cAAgB,CAAK,CAAC,EAAK,CAC5B,OAAO,IAAI,GAAK,CAAG,GAGrB,SAAS,EAAK,CAAC,EAAG,CAIhB,GAHA,EAAI,KAAK,KAAM,CAAC,EAEhB,KAAK,MAAQ,KAAK,EAAE,UAAU,EAC1B,KAAK,MAAQ,KAAO,EACtB,KAAK,OAAS,GAAM,KAAK,MAAQ,GAGnC,KAAK,EAAI,IAAI,EAAG,CAAC,EAAE,OAAO,KAAK,KAAK,EACpC,KAAK,GAAK,KAAK,KAAK,KAAK,EAAE,IAAI,CAAC,EAChC,KAAK,KAAO,KAAK,EAAE,OAAO,KAAK,CAAC,EAEhC,KAAK,KAAO,KAAK,KAAK,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,EACrD,KAAK,KAAO,KAAK,KAAK,KAAK,KAAK,CAAC,EACjC,KAAK,KAAO,KAAK,EAAE,IAAI,KAAK,IAAI,EAElC,EAAS,GAAM,CAAG,EAElB,GAAK,UAAU,mBAAqB,CAAU,CAAC,EAAK,CAClD,OAAO,KAAK,KAAK,EAAI,MAAM,KAAK,KAAK,CAAC,GAGxC,GAAK,UAAU,qBAAuB,CAAY,CAAC,EAAK,CACtD,IAAI,EAAI,KAAK,KAAK,EAAI,IAAI,KAAK,IAAI,CAAC,EAEpC,OADA,EAAE,IAAM,KACD,GAGT,GAAK,UAAU,cAAgB,CAAK,CAAC,EAAG,EAAG,CACzC,GAAI,EAAE,OAAO,GAAK,EAAE,OAAO,EAGzB,OAFA,EAAE,MAAM,GAAK,EACb,EAAE,OAAS,EACJ,EAGT,IAAI,EAAI,EAAE,KAAK,CAAC,EACZ,EAAI,EAAE,MAAM,KAAK,KAAK,EAAE,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,EACpE,EAAI,EAAE,KAAK,CAAC,EAAE,OAAO,KAAK,KAAK,EAC/B,EAAM,EAEV,GAAI,EAAE,IAAI,KAAK,CAAC,GAAK,EACnB,EAAM,EAAE,KAAK,KAAK,CAAC,UACV,EAAE,KAAK,CAAC,EAAI,EACrB,EAAM,EAAE,KAAK,KAAK,CAAC,EAGrB,OAAO,EAAI,UAAU,IAAI,GAG3B,GAAK,UAAU,aAAe,CAAI,CAAC,EAAG,EAAG,CACvC,GAAI,EAAE,OAAO,GAAK,EAAE,OAAO,EAAG,OAAO,IAAI,EAAG,CAAC,EAAE,UAAU,IAAI,EAE7D,IAAI,EAAI,EAAE,IAAI,CAAC,EACX,EAAI,EAAE,MAAM,KAAK,KAAK,EAAE,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,EACpE,EAAI,EAAE,KAAK,CAAC,EAAE,OAAO,KAAK,KAAK,EAC/B,EAAM,EACV,GAAI,EAAE,IAAI,KAAK,CAAC,GAAK,EACnB,EAAM,EAAE,KAAK,KAAK,CAAC,UACV,EAAE,KAAK,CAAC,EAAI,EACrB,EAAM,EAAE,KAAK,KAAK,CAAC,EAGrB,OAAO,EAAI,UAAU,IAAI,GAG3B,GAAK,UAAU,cAAgB,CAAK,CAAC,EAAG,CAEtC,IAAI,EAAM,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC,EACjD,OAAO,EAAI,UAAU,IAAI,YAEnB,KAAW,aAAe,GAAQ,EAAI,uBCr3GhD,IAAM,QAEA,GAAO,OAAO,MAAM,EAAG,CAAC,EACxB,GAAQ,OAAO,MAAM,EAAG,CAAC,EAG/B,SAAS,EAAuB,CAAC,EAAM,EAAG,EAAU,EAAW,EAAc,CAI3E,IAAI,EAAI,OAAO,MAAM,GAAI,CAAC,EACtB,EAAI,OAAO,MAAM,GAAI,CAAC,EAG1B,EAAI,GAAW,SAAU,CAAC,EACvB,OAAO,CAAC,EACR,OAAO,EAAK,EACZ,OAAO,CAAC,EACR,OAAO,CAAI,EACX,OAAO,GAAgB,EAAE,EACzB,OAAO,EAGV,EAAI,GAAW,SAAU,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,EAG7C,EAAI,GAAW,SAAU,CAAC,EACvB,OAAO,CAAC,EACR,OAAO,EAAI,EACX,OAAO,CAAC,EACR,OAAO,CAAI,EACX,OAAO,GAAgB,EAAE,EACzB,OAAO,EAGV,EAAI,GAAW,SAAU,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,EAI7C,EAAI,GAAW,SAAU,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,EAE7C,IAAI,EAAI,EAGR,OAAQ,EAAU,CAAC,IAAM,EAAS,CAAC,EACjC,EAAI,GAAW,SAAU,CAAC,EACvB,OAAO,CAAC,EACR,OAAO,EAAK,EACZ,OAAO,EAEV,EAAI,GAAW,SAAU,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,EAI7C,EAAI,GAAW,SAAU,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,EAC7C,EAAI,EAGN,OAAO,EAGT,GAAO,QAAU,wBC7DjB,IAAM,QACA,QAAyB,GACzB,GAAY,IAAI,GAAG,WAAW,EAC9B,QAEA,GAAS,OAAO,MAAM,GAAI,CAAC,EAC3B,GAAiB,OAAO,KAAK,mEAAoE,KAAK,EACtG,GAAO,OAAO,KAAK,mEAAoE,KAAK,EAE5F,GAAI,GAAU,MAAM,EACpB,GAAQ,GAAE,KAAK,CAAC,EAChB,GAAI,GAAU,MAAM,EAS1B,SAAS,EAAS,CAAC,EAAG,CACpB,OAAQ,aAAa,YAAe,EAAE,SAAW,GAGnD,SAAS,EAAc,CAAC,EAAG,CACzB,IAAK,GAAS,CAAC,EAAG,MAAO,GACzB,OAAO,GAAe,QAAQ,CAAC,EAAI,EAGrC,SAAS,EAAQ,CAAC,EAAG,CACnB,KAAM,aAAa,YAAa,MAAO,GACvC,GAAI,EAAE,OAAS,GAAI,MAAO,GAE1B,IAAM,EAAI,EAAE,GACN,EAAI,EAAE,SAAS,EAAG,EAAE,EAC1B,GAAI,GAAO,QAAQ,CAAC,IAAM,EAAG,MAAO,GACpC,GAAI,GAAK,QAAQ,CAAC,GAAK,EAAG,MAAO,GACjC,IAAK,IAAM,GAAQ,IAAM,IAAS,EAAE,SAAW,GAAI,CACjD,GAAI,CAAE,GAAW,CAAC,QAAW,EAAP,CAAY,MAAO,GACzC,MAAO,GAGT,IAAM,EAAI,EAAE,SAAS,EAAE,EACvB,GAAI,GAAO,QAAQ,CAAC,IAAM,EAAG,MAAO,GACpC,GAAI,GAAK,QAAQ,CAAC,GAAK,EAAG,MAAO,GACjC,GAAI,IAAM,GAAQ,EAAE,SAAW,GAAI,MAAO,GAC1C,MAAO,GAGT,SAAS,EAAoB,CAAC,EAAG,CAC/B,OAAO,EAAE,KAAO,EAGlB,SAAS,EAAkB,CAAC,EAAG,CAC7B,IAAK,GAAQ,CAAC,EAAG,MAAO,GACxB,OAAO,GAAoB,CAAC,EAG9B,SAAS,EAAU,CAAC,EAAG,CACrB,IAAK,GAAS,CAAC,EAAG,MAAO,GACzB,OAAO,GAAO,QAAQ,CAAC,EAAI,GACzB,GAAe,QAAQ,CAAC,EAAI,EAGhC,SAAS,EAAY,CAAC,EAAO,CAC3B,IAAM,EAAI,EAAM,SAAS,EAAG,EAAE,EACxB,EAAI,EAAM,SAAS,GAAI,EAAE,EAC/B,OAAQ,aAAiB,YAAe,EAAM,SAAW,IACvD,GAAe,QAAQ,CAAC,EAAI,GAC5B,GAAe,QAAQ,CAAC,EAAI,EAGhC,SAAS,EAAkB,CAAC,EAAO,EAAQ,CACzC,GAAI,IAAU,QAAa,IAAW,OAAW,OAAO,GAAoB,CAAM,EAClF,GAAI,IAAU,OAAW,MAAO,GAChC,OAAO,EAGT,SAAS,EAAW,CAAC,EAAG,CAAE,OAAO,IAAI,GAAG,CAAC,EACzC,SAAS,EAAS,CAAC,EAAG,CAAE,OAAO,EAAE,YAAY,OAAQ,KAAM,EAAE,EAC7D,SAAS,EAAW,CAAC,EAAG,CAAE,OAAO,GAAU,MAAM,YAAY,CAAC,EAC9D,SAAS,EAAW,CAAC,EAAG,EAAY,CAAE,OAAO,OAAO,KAAK,EAAE,QAAQ,CAAU,CAAC,EAE9E,SAAS,EAAS,CAAC,EAAI,EAAI,EAAc,CACvC,IAAK,GAAQ,CAAE,EAAG,MAAM,IAAI,UAtEN,gBAsE+B,EACrD,IAAK,GAAQ,CAAE,EAAG,MAAM,IAAI,UAvEN,gBAuE+B,EAErD,IAAM,EAAI,GAAW,CAAE,EACjB,EAAI,GAAW,CAAE,EACjB,EAAK,EAAE,IAAI,CAAC,EAClB,GAAI,EAAG,WAAW,EAAG,OAAO,KAE5B,IAAM,EAAa,GAAkB,EAAc,CAAE,EACrD,OAAO,GAAW,EAAI,CAAU,EAGlC,SAAS,EAAe,CAAC,EAAG,EAAO,EAAc,CAC/C,IAAK,GAAQ,CAAC,EAAG,MAAM,IAAI,UAnFL,gBAmF8B,EACpD,IAAK,GAAc,CAAK,EAAG,MAAM,IAAI,UAnFf,gBAmFwC,EAE9D,IAAM,EAAa,GAAkB,EAAc,CAAC,EAC9C,EAAK,GAAW,CAAC,EACvB,GAAI,GAAO,QAAQ,CAAK,IAAM,EAAG,OAAO,GAAW,EAAI,CAAU,EAEjE,IAAM,EAAK,GAAW,CAAK,EACrB,EAAK,GAAE,IAAI,CAAE,EACb,EAAK,EAAG,IAAI,CAAE,EACpB,GAAI,EAAG,WAAW,EAAG,OAAO,KAE5B,OAAO,GAAW,EAAI,CAAU,EAGlC,SAAS,EAAc,CAAC,EAAG,EAAc,CACvC,IAAK,GAAQ,CAAC,EAAG,MAAM,IAAI,UAnGL,gBAmG8B,EAEpD,IAAM,EAAK,GAAW,CAAC,EACvB,GAAI,EAAG,WAAW,EAAG,MAAM,IAAI,UAtGT,gBAsGkC,EAExD,IAAM,EAAa,GAAkB,EAAc,CAAC,EAEpD,OAAO,GAAW,EAAI,CAAU,EAGlC,SAAS,EAAgB,CAAC,EAAG,EAAc,CACzC,IAAK,GAAU,CAAC,EAAG,MAAM,IAAI,UA/GL,kBA+GgC,EAExD,IAAM,EAAK,GAAW,CAAC,EACjB,EAAK,GAAE,IAAI,CAAE,EACnB,GAAI,EAAG,WAAW,EAAG,OAAO,KAE5B,IAAM,EAAa,GAAkB,CAAY,EACjD,OAAO,GAAW,EAAI,CAAU,EAGlC,SAAS,EAAc,CAAC,EAAG,EAAO,EAAc,CAC9C,IAAK,GAAQ,CAAC,EAAG,MAAM,IAAI,UAzHL,gBAyH8B,EACpD,IAAK,GAAc,CAAK,EAAG,MAAM,IAAI,UAzHf,gBAyHwC,EAE9D,IAAM,EAAa,GAAkB,EAAc,CAAC,EAC9C,EAAK,GAAW,CAAC,EACjB,EAAK,GAAW,CAAK,EACrB,EAAK,EAAG,IAAI,CAAE,EACpB,GAAI,EAAG,WAAW,EAAG,OAAO,KAE5B,OAAO,GAAW,EAAI,CAAU,EAGlC,SAAS,EAAW,CAAC,EAAG,EAAO,CAC7B,IAAK,GAAU,CAAC,EAAG,MAAM,IAAI,UAvIL,kBAuIgC,EACxD,IAAK,GAAc,CAAK,EAAG,MAAM,IAAI,UAtIf,gBAsIwC,EAE9D,IAAM,EAAK,GAAW,CAAC,EACjB,EAAK,GAAW,CAAK,EACrB,EAAK,GAAS,EAAG,IAAI,CAAE,EAAE,KAAK,EAAC,CAAC,EACtC,IAAK,GAAU,CAAE,EAAG,OAAO,KAE3B,OAAO,EAGT,SAAS,EAAW,CAAC,EAAG,EAAO,CAC7B,IAAK,GAAU,CAAC,EAAG,MAAM,IAAI,UAnJL,kBAmJgC,EACxD,IAAK,GAAc,CAAK,EAAG,MAAM,IAAI,UAlJf,gBAkJwC,EAE9D,IAAM,EAAK,GAAW,CAAC,EACjB,EAAK,GAAW,CAAK,EACrB,EAAK,GAAS,EAAG,IAAI,CAAE,EAAE,KAAK,EAAC,CAAC,EACtC,IAAK,GAAU,CAAE,EAAG,OAAO,KAE3B,OAAO,EAGT,SAAS,EAAK,CAAC,EAAM,EAAG,CACtB,OAAO,GAAO,EAAM,CAAC,EAGvB,SAAS,EAAgB,CAAC,EAAM,EAAG,EAAS,CAC1C,OAAO,GAAO,EAAM,EAAG,CAAO,EAGhC,SAAS,EAAO,CAAC,EAAM,EAAG,EAAS,CACjC,IAAK,GAAS,CAAI,EAAG,MAAM,IAAI,UApKV,eAoKkC,EACvD,IAAK,GAAU,CAAC,EAAG,MAAM,IAAI,UAxKL,kBAwKgC,EACxD,GAAI,IAAY,SAAc,GAAS,CAAO,EAAG,MAAM,IAAI,UApKhC,gCAoK8D,EAEzF,IAAM,EAAI,GAAW,CAAC,EAChB,EAAI,GAAW,CAAI,EAErB,EAAG,EAsBP,GAHA,GAAuB,EAAM,UAlBH,CAAC,EAAG,CAC5B,IAAM,EAAK,GAAW,CAAC,EACjB,EAAI,GAAE,IAAI,CAAE,EAElB,GAAI,EAAE,WAAW,EAAG,MAAO,GAG3B,GADA,EAAI,EAAE,EAAE,KAAK,EAAC,EACV,EAAE,OAAO,IAAM,EAAG,MAAO,GAM7B,GAJA,EAAI,EACD,KAAK,EAAC,EACN,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EACnB,KAAK,EAAC,EACL,EAAE,OAAO,IAAM,EAAG,MAAO,GAE7B,MAAO,IAGiC,GAAW,CAAO,EAGxD,EAAE,IAAI,EAAK,EAAI,EACjB,EAAI,GAAE,IAAI,CAAC,EAGb,IAAM,EAAS,OAAO,YAAY,EAAE,EAGpC,OAFA,GAAS,CAAC,EAAE,KAAK,EAAQ,CAAC,EAC1B,GAAS,CAAC,EAAE,KAAK,EAAQ,EAAE,EACpB,EAGT,SAAS,EAAO,CAAC,EAAM,EAAG,EAAW,EAAQ,CAC3C,IAAK,GAAS,CAAI,EAAG,MAAM,IAAI,UA5MV,eA4MkC,EACvD,IAAK,GAAQ,CAAC,EAAG,MAAM,IAAI,UA/ML,gBA+M8B,EAGpD,IAAK,GAAY,CAAS,EAAG,MAAM,IAAI,UA/Mb,oBA+M0C,EAEpE,IAAM,EAAI,GAAW,CAAC,EAChB,EAAI,GAAW,EAAU,SAAS,EAAG,EAAE,CAAC,EACxC,EAAI,GAAW,EAAU,SAAS,GAAI,EAAE,CAAC,EAE/C,GAAI,GAAU,EAAE,IAAI,EAAK,EAAI,EAC3B,MAAO,GAIT,GAAI,EAAE,IAAI,CAAC,GAAK,EAAgC,MAAO,GACvD,GAAI,EAAE,IAAI,CAAC,GAAK,EAAgC,MAAO,GAIvD,IAAM,EAAI,GAAW,CAAI,EAGnB,EAAO,EAAE,KAAK,EAAC,EAIf,EAAK,EAAE,IAAI,CAAI,EAAE,KAAK,EAAC,EACvB,EAAK,EAAE,IAAI,CAAI,EAAE,KAAK,EAAC,EAIvB,EAAI,GAAE,OAAO,EAAI,EAAG,CAAE,EAG5B,GAAI,EAAE,WAAW,EAAG,MAAO,GAS3B,OANW,EAAE,EAGA,KAAK,EAAC,EAGV,GAAG,CAAC,EAGf,GAAO,QAAU,CACf,WACA,qBACA,aACA,YACA,kBACA,iBACA,mBACA,iBACA,cACA,cACA,QACA,mBACA,SACF,oBCxRA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAM,QACA,QACA,QACA,QACA,QACA,GAAe,GAAU,QAAQ,EAAE,EACnC,GAAe,GAAU,QAAQ,CACnC,IAAK,GAAU,MACf,MAAO,CACH,OAAQ,GAAU,OAClB,QAAS,GAAU,MACvB,CACJ,CAAC,EACK,GAAU,CACZ,cAAe;AAAA,EACf,OAAQ,KACR,MAAO,CACH,OAAQ,SACR,QAAS,QACb,EACA,WAAY,EACZ,WAAY,EACZ,IAAK,GACT,EACM,GAAc,WACd,GAAa,KAAK,IAAI,EAAG,EAAE,EAAI,EACrC,SAAS,EAAS,CAAC,EAAO,CACtB,OAAQ,GAAU,OAAO,CAAK,GAAK,EAAM,MAAM,yBAAyB,IAAM,KAElF,SAAS,EAAM,CAAC,EAAO,CACnB,OAAO,GAAU,OAAO,CAAK,GAAK,GAAS,GAE/C,MAAM,EAAM,CACR,WAAW,CAAC,EAAK,EAAK,EAAW,EAAS,EAAU,EAAG,EAAU,EAAG,EAAuB,EAAY,CACnG,KAAK,IAAM,EACX,KAAK,IAAM,EACX,KAAK,UAAY,EACjB,KAAK,QAAU,EACf,KAAK,QAAU,EACf,KAAK,QAAU,EACf,KAAK,qBAAuB,EAC5B,GAAU,GAAc,CAAO,EAC/B,KAAK,KAAO,MAEZ,MAAK,EAAG,CACR,OAAO,KAAK,WAEZ,MAAK,EAAG,CACR,OAAO,KAAK,WAEZ,kBAAiB,EAAG,CACpB,OAAO,KAAK,wBAEZ,UAAS,EAAG,CACZ,GAAI,KAAK,MAAQ,OACb,KAAK,IAAM,GAAI,gBAAgB,KAAK,IAAK,EAAI,EACjD,OAAO,KAAK,OAEZ,WAAU,EAAG,CACb,OAAO,KAAK,OAEZ,WAAU,EAAG,CACb,OAAO,GAAO,QAAQ,KAAK,SAAS,KAEpC,YAAW,EAAG,CACd,OAAO,KAAK,WAAW,MAAM,EAAG,CAAC,EAIrC,UAAU,EAAG,CACT,OAAO,KAAK,MAAQ,OAExB,QAAQ,EAAG,CACP,OAAO,GAAmB,KAAK,UAAW,KAAK,UAAW,KAAK,QAAS,KAAK,MAAO,KAAK,MAAO,KAAK,iBAAiB,EAE1H,QAAQ,EAAG,CACP,IAAM,EAAU,KAAK,QACf,GAAW,KAAK,WAAW,EAC3B,EAAQ,MAAM,QACd,EAAQ,MAAM,OACd,EAAS,OAAO,YAAY,EAAE,EAapC,GAXA,EAAO,cAAc,EAAS,CAAC,EAE/B,EAAO,WAAW,KAAK,MAAO,CAAC,EAE/B,EAAO,cAAc,KAAK,kBAAmB,CAAC,EAG9C,EAAO,cAAc,KAAK,MAAO,CAAC,EAElC,KAAK,UAAU,KAAK,EAAQ,EAAE,GAEzB,KAAK,WAAW,EAEjB,EAAO,WAAW,EAAG,EAAE,EACvB,KAAK,WAAW,KAAK,EAAQ,EAAE,MAK/B,MAAK,UAAU,KAAK,EAAQ,EAAE,EAElC,OAAO,GAAU,OAAO,CAAM,EAElC,KAAK,EAAG,CACJ,IAAK,KAAK,WACN,MAAM,IAAI,UAAU,qBAAqB,EAC7C,OAAO,GAAI,OAAO,KAAK,QAAQ,IAAK,KAAK,WAAY,EAAI,EAG7D,MAAM,CAAC,EAAO,CACV,GAAU,GAAU,OAAQ,CAAK,EACjC,IAAM,EAAa,GAAS,GACtB,EAAO,OAAO,YAAY,EAAE,EAElC,GAAI,EAAY,CACZ,GAAI,KAAK,WAAW,EAChB,MAAM,IAAI,UAAU,4CAA4C,EAEpE,EAAK,GAAK,EACV,KAAK,WAAW,KAAK,EAAM,CAAC,EAC5B,EAAK,cAAc,EAAO,EAAE,MAM5B,MAAK,UAAU,KAAK,EAAM,CAAC,EAC3B,EAAK,cAAc,EAAO,EAAE,EAEhC,IAAM,EAAI,GAAO,WAAW,KAAK,UAAW,CAAI,EAC1C,EAAK,EAAE,MAAM,EAAG,EAAE,EAClB,EAAK,EAAE,MAAM,EAAE,EAErB,IAAK,GAAI,UAAU,CAAE,EACjB,OAAO,KAAK,OAAO,EAAQ,CAAC,EAEhC,IAAI,EACJ,IAAK,KAAK,WAAW,EAAG,CAEpB,IAAM,EAAK,GAAI,WAAW,KAAK,WAAY,CAAE,EAE7C,GAAI,GAAM,KACN,OAAO,KAAK,OAAO,EAAQ,CAAC,EAChC,EAAK,GAAoB,EAAI,EAAI,KAAK,QAAS,KAAK,MAAQ,EAAG,EAAO,KAAK,YAAY,aAAa,CAAC,CAAC,MAGrG,CAGD,IAAM,EAAK,GAAI,eAAe,KAAK,UAAW,EAAI,EAAI,EAEtD,GAAI,IAAO,KACP,OAAO,KAAK,OAAO,EAAQ,CAAC,EAChC,EAAK,GAAmB,EAAI,EAAI,KAAK,QAAS,KAAK,MAAQ,EAAG,EAAO,KAAK,YAAY,aAAa,CAAC,CAAC,EAEzG,OAAO,EAEX,cAAc,CAAC,EAAO,CAGlB,OAFA,GAAU,GAAQ,CAAK,EAEhB,KAAK,OAAO,EAAQ,EAAW,EAE1C,UAAU,CAAC,EAAM,CACb,GAAU,GAAW,CAAI,EACzB,IAAI,EAAY,EAAK,MAAM,GAAG,EAC9B,GAAI,EAAU,KAAO,IAAK,CACtB,GAAI,KAAK,kBACL,MAAM,IAAI,UAAU,4BAA4B,EACpD,EAAY,EAAU,MAAM,CAAC,EAEjC,OAAO,EAAU,OAAO,CAAC,EAAQ,IAAa,CAC1C,IAAI,EACJ,GAAI,EAAS,MAAM,EAAE,IAAM,IAEvB,OADA,EAAQ,SAAS,EAAS,MAAM,EAAG,EAAE,EAAG,EAAE,EACnC,EAAO,eAAe,CAAK,MAIlC,QADA,EAAQ,SAAS,EAAU,EAAE,EACtB,EAAO,OAAO,CAAK,GAE/B,IAAI,EAEX,IAAI,CAAC,EAAM,EAAM,CACb,IAAK,KAAK,WACN,MAAM,IAAI,MAAM,qBAAqB,EACzC,GAAI,IAAS,OACT,EAAO,KAAK,KAChB,GAAI,IAAS,GACT,OAAO,GAAI,KAAK,EAAM,KAAK,UAAU,MAEpC,CACD,IAAI,EAAM,GAAI,KAAK,EAAM,KAAK,UAAU,EAClC,EAAY,OAAO,MAAM,GAAI,CAAC,EAChC,EAAU,EAGd,MAAO,EAAI,GAAK,IACZ,IACA,EAAU,YAAY,EAAS,EAAG,CAAC,EACnC,EAAM,GAAI,gBAAgB,EAAM,KAAK,WAAY,CAAS,EAE9D,OAAO,GAGf,MAAM,CAAC,EAAM,EAAW,CACpB,OAAO,GAAI,OAAO,EAAM,KAAK,UAAW,CAAS,EAEzD,CACA,SAAS,EAAU,CAAC,EAAU,EAAS,CACnC,IAAM,EAAS,GAAU,OAAO,CAAQ,EACxC,GAAI,EAAO,SAAW,GAClB,MAAM,IAAI,UAAU,uBAAuB,EAC/C,EAAU,GAAW,GAErB,IAAM,EAAU,EAAO,aAAa,CAAC,EACrC,GAAI,IAAY,EAAQ,MAAM,SAAW,IAAY,EAAQ,MAAM,OAC/D,MAAM,IAAI,UAAU,yBAAyB,EAEjD,IAAM,EAAQ,EAAO,GAEf,EAAoB,EAAO,aAAa,CAAC,EAC/C,GAAI,IAAU,GACV,GAAI,IAAsB,EACtB,MAAM,IAAI,UAAU,4BAA4B,EAIxD,IAAM,EAAQ,EAAO,aAAa,CAAC,EACnC,GAAI,IAAU,GAAK,IAAU,EACzB,MAAM,IAAI,UAAU,eAAe,EAEvC,IAAM,EAAY,EAAO,MAAM,GAAI,EAAE,EACjC,EAEJ,GAAI,IAAY,EAAQ,MAAM,QAAS,CACnC,GAAI,EAAO,UAAU,EAAE,IAAM,EACzB,MAAM,IAAI,UAAU,qBAAqB,EAC7C,IAAM,EAAI,EAAO,MAAM,GAAI,EAAE,EAC7B,EAAK,GAAoB,EAAG,EAAW,EAAS,EAAO,EAAO,CAAiB,MAG9E,CACD,IAAM,EAAI,EAAO,MAAM,GAAI,EAAE,EAC7B,EAAK,GAAmB,EAAG,EAAW,EAAS,EAAO,EAAO,CAAiB,EAElF,OAAO,EAEX,AAAQ,cAAa,GACrB,SAAS,EAAc,CAAC,EAAY,EAAW,EAAS,CACpD,OAAO,GAAoB,EAAY,EAAW,CAAO,EAE7D,AAAQ,kBAAiB,GACzB,SAAS,EAAmB,CAAC,EAAY,EAAW,EAAS,EAAO,EAAO,EAAmB,CAM1F,GALA,GAAU,CACN,WAAY,GACZ,UAAW,EACf,EAAG,CAAE,aAAY,WAAU,CAAC,EAC5B,EAAU,GAAW,IAChB,GAAI,UAAU,CAAU,EACzB,MAAM,IAAI,UAAU,iCAAiC,EACzD,OAAO,IAAI,GAAM,EAAY,OAAW,EAAW,EAAS,EAAO,EAAO,CAAiB,EAE/F,SAAS,EAAa,CAAC,EAAW,EAAW,EAAS,CAClD,OAAO,GAAmB,EAAW,EAAW,CAAO,EAE3D,AAAQ,iBAAgB,GACxB,SAAS,EAAkB,CAAC,EAAW,EAAW,EAAS,EAAO,EAAO,EAAmB,CAOxF,GANA,GAAU,CACN,UAAW,GAAU,QAAQ,EAAE,EAC/B,UAAW,EACf,EAAG,CAAE,YAAW,WAAU,CAAC,EAC3B,EAAU,GAAW,IAEhB,GAAI,QAAQ,CAAS,EACtB,MAAM,IAAI,UAAU,2BAA2B,EACnD,OAAO,IAAI,GAAM,OAAW,EAAW,EAAW,EAAS,EAAO,EAAO,CAAiB,EAE9F,SAAS,EAAQ,CAAC,EAAM,EAAS,CAE7B,GADA,GAAU,GAAU,OAAQ,CAAI,EAC5B,EAAK,OAAS,GACd,MAAM,IAAI,UAAU,kCAAkC,EAC1D,GAAI,EAAK,OAAS,GACd,MAAM,IAAI,UAAU,iCAAiC,EACzD,EAAU,GAAW,GACrB,IAAM,EAAI,GAAO,WAAW,OAAO,KAAK,eAAgB,MAAM,EAAG,CAAI,EAC/D,EAAK,EAAE,MAAM,EAAG,EAAE,EAClB,EAAK,EAAE,MAAM,EAAE,EACrB,OAAO,GAAe,EAAI,EAAI,CAAO,EAEzC,AAAQ,YAAW,qBCpSnB,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAI,QACJ,AAAQ,YAAW,GAAQ,SAC3B,AAAQ,cAAa,GAAQ,WAC7B,AAAQ,iBAAgB,GAAQ,cAChC,AAAQ,kBAAiB,GAAQ,iCCLjC,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,AAAQ,WAAU,CAChB,cAAe;AAAA,EACf,OAAQ,KACR,MAAO,CACL,OAAQ,SACR,QAAS,QACX,EACA,WAAY,EACZ,WAAY,EACZ,IAAK,GACP,EACA,AAAQ,WAAU,CAChB,cAAe;AAAA,EACf,OAAQ,OACR,MAAO,CACL,OAAQ,SACR,QAAS,QACX,EACA,WAAY,IACZ,WAAY,IACZ,IAAK,GACP,EACA,AAAQ,WAAU,CAChB,cAAe;AAAA,EACf,OAAQ,KACR,MAAO,CACL,OAAQ,SACR,QAAS,QACX,EACA,WAAY,IACZ,WAAY,IACZ,IAAK,GACP,oBCjCA,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,SAAS,EAAM,CAAC,EAAQ,EAAW,EAAS,CAC1C,EAAY,GAAa,EACzB,EAAU,IAAY,OAAY,GAAO,EACzC,IAAM,EAAS,EAAO,OACtB,GAAI,IAAW,EAAG,MAAO,GACzB,GAAI,EAAS,EAAW,MAAM,IAAI,UAAU,wBAAwB,EACpE,GAAI,GACF,IAAK,EAAO,EAAS,GAAK,OAAU,GAClC,GAAI,GAAU,IAAM,EAAO,EAAS,GAAK,OAAU,EACjD,MAAM,IAAI,MAAM,qCAAqC,GAI3D,GAAI,IAAW,EAAG,CAChB,IAAM,EAAI,EAAO,aAAa,CAAC,EACzB,EAAI,EAAO,UAAU,CAAC,EAC5B,GAAI,EAAI,IAAM,SAAU,EAAI,MAAS,WAAc,GACnD,OAAO,EAAI,WAAc,EAG3B,IAAI,EAAS,EACb,QAAS,EAAI,EAAG,EAAI,IAAU,EAC5B,GAAU,EAAO,IAAO,EAAI,EAE9B,GAAI,EAAO,EAAS,GAAK,IACvB,QAAS,IAAW,KAAS,GAAK,EAAS,KAC7C,OAAO,EAET,AAAQ,UAAS,GACjB,SAAS,EAAa,CAAC,EAAG,CACxB,OAAO,EAAI,WACP,EACA,EAAI,QACJ,EACA,EAAI,MACJ,EACA,EAAI,IACJ,EACA,EAAI,EACJ,EACA,EAEN,SAAS,EAAM,CAAC,EAAS,CACvB,IAAI,EAAQ,KAAK,IAAI,CAAO,EACtB,EAAO,GAAc,CAAK,EAC1B,EAAS,OAAO,YAAY,CAAI,EAChC,EAAW,EAAU,EAC3B,QAAS,EAAI,EAAG,EAAI,IAAQ,EAC1B,EAAO,WAAW,EAAQ,IAAM,CAAC,EACjC,IAAU,EAEZ,GAAI,EAAO,EAAO,GAAK,IACrB,EAAO,WAAW,EAAW,IAAO,EAAM,EAAO,CAAC,UACzC,EACT,EAAO,EAAO,IAAM,IAEtB,OAAO,EAET,AAAQ,UAAS,qBC3DjB,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAM,QACA,GAAa,KAAK,IAAI,EAAG,EAAE,EAAI,EACrC,SAAS,EAAM,CAAC,EAAO,CACrB,OAAO,GAAU,OAAO,CAAK,GAAK,GAAS,GAE7C,AAAQ,UAAS,GACjB,SAAS,EAAS,CAAC,EAAO,CACxB,OAAO,GAAU,OAAO,CAAK,KAAO,EAAM,MAAM,yBAAyB,EAE3E,AAAQ,aAAY,GACpB,GAAU,OAAS,IAAM,CACvB,MAAO,yBAET,SAAS,EAAM,CAAC,EAAK,CACnB,OACG,GAAU,OAAO,EAAI,SAAS,UACtB,EAAI,eAAiB,oBACvB,EAAI,OAAS,WAGxB,AAAQ,UAAS,GACjB,IAAM,GAAc,iBACpB,SAAS,EAAO,CAAC,EAAO,CACtB,OAAO,GAAU,OAAO,CAAK,GAAK,GAAS,GAE7C,AAAQ,WAAU,GAElB,AAAQ,WAAU,GAAU,WAAW,OAAO,EAE9C,AAAQ,WAAU,GAAU,QAAQ,CAClC,cAAe,GAAU,MAAM,GAAU,OAAQ,GAAU,MAAM,EACjE,MAAO,CACL,OAAQ,GAAU,OAClB,QAAS,GAAU,MACrB,EACA,WAAY,GAAU,MACtB,WAAY,GAAU,MACtB,IAAK,GAAU,KACjB,CAAC,EACD,AAAQ,gBAAe,GAAU,QAAQ,EAAE,EAC3C,AAAQ,cAAa,GAAU,QAAQ,EAAE,EACzC,AAAQ,cAAa,GAAU,QAAQ,EAAE,EACzC,AAAQ,UAAS,GAAU,OAC3B,AAAQ,SAAQ,GAAU,MAC1B,AAAQ,WAAU,GAAU,QAC5B,AAAQ,UAAS,GAAU,OAC3B,AAAQ,UAAS,GAAU,OAC3B,AAAQ,OAAM,GAAU,IACxB,AAAQ,SAAQ,GAAU,MAC1B,AAAQ,SAAQ,GAAU,MAC1B,AAAQ,SAAQ,GAAU,MAC1B,AAAQ,UAAS,GAAU,OAC3B,AAAQ,YAAW,GAAU,SAC7B,AAAQ,WAAU,GAAU,QAC5B,AAAQ,QAAO,GAAU,KACzB,AAAQ,SAAQ,GAAU,wBCxD1B,OAAO,eAAe,GAAS,aAAc,CAAE,MAAO,EAAK,CAAC,EAC5D,IAAM,QACA,QACA,QACA,GAAO,OAAO,MAAM,EAAG,CAAC,EAC9B,SAAS,EAAK,CAAC,EAAG,CAChB,IAAI,EAAI,EACR,MAAO,EAAE,KAAO,EAAG,EAAE,EACrB,GAAI,IAAM,EAAE,OAAQ,OAAO,GAE3B,GADA,EAAI,EAAE,MAAM,CAAC,EACT,EAAE,GAAK,IAAM,OAAO,OAAO,OAAO,CAAC,GAAM,CAAC,EAAG,EAAI,EAAE,MAAM,EAC7D,OAAO,EAET,SAAS,EAAO,CAAC,EAAG,CAClB,GAAI,EAAE,KAAO,EAAM,EAAI,EAAE,MAAM,CAAC,EAChC,IAAM,EAAS,OAAO,MAAM,GAAI,CAAC,EAC3B,EAAS,KAAK,IAAI,EAAG,GAAK,EAAE,MAAM,EAExC,OADA,EAAE,KAAK,EAAQ,CAAM,EACd,EAGT,SAAS,EAAM,CAAC,EAAQ,CACtB,IAAM,EAAW,EAAO,UAAU,EAAO,OAAS,CAAC,EAC7C,EAAc,EAAW,KAC/B,GAAI,GAAe,GAAK,GAAe,EACrC,MAAM,IAAI,MAAM,oBAAsB,CAAQ,EAChD,IAAM,EAAU,GAAM,OAAO,EAAO,MAAM,EAAG,EAAE,CAAC,EAC1C,EAAI,GAAQ,EAAQ,CAAC,EACrB,EAAI,GAAQ,EAAQ,CAAC,EAE3B,MAAO,CAAE,UADS,OAAO,OAAO,CAAC,EAAG,CAAC,EAAG,EAAE,EACtB,UAAS,EAE/B,AAAQ,UAAS,GACjB,SAAS,EAAM,CAAC,EAAW,EAAU,CACnC,GACE,CACE,UAAW,GAAM,QAAQ,EAAE,EAC3B,SAAU,GAAM,KAClB,EACA,CAAE,YAAW,UAAS,CACxB,EACA,IAAM,EAAc,EAAW,KAC/B,GAAI,GAAe,GAAK,GAAe,EACrC,MAAM,IAAI,MAAM,oBAAsB,CAAQ,EAChD,IAAM,EAAiB,OAAO,YAAY,CAAC,EAC3C,EAAe,WAAW,EAAU,CAAC,EACrC,IAAM,EAAI,GAAM,EAAU,MAAM,EAAG,EAAE,CAAC,EAChC,EAAI,GAAM,EAAU,MAAM,GAAI,EAAE,CAAC,EACvC,OAAO,OAAO,OAAO,CAAC,GAAM,OAAO,EAAG,CAAC,EAAG,CAAc,CAAC,EAE3D,AAAQ,UAAS,wBCnDjB,SAAU,CAAC,EAAQ,EAAS,CAI1B,SAAS,CAAO,CAAC,EAAK,EAAK,CACzB,IAAK,EAAK,MAAM,IAAI,MAAM,GAAO,kBAAkB,EAKrD,SAAS,CAAS,CAAC,EAAM,EAAW,CAClC,EAAK,OAAS,EACd,IAAI,UAAoB,EAAG,GAC3B,EAAS,UAAY,EAAU,UAC/B,EAAK,UAAY,IAAI,EACrB,EAAK,UAAU,YAAc,EAK/B,SAAS,CAAG,CAAC,EAAQ,EAAM,EAAQ,CACjC,GAAI,EAAG,KAAK,CAAM,EAChB,OAAO,EAUT,GAPA,KAAK,SAAW,EAChB,KAAK,MAAQ,KACb,KAAK,OAAS,EAGd,KAAK,IAAM,KAEP,IAAW,KAAM,CACnB,GAAI,IAAS,MAAQ,IAAS,KAC5B,EAAS,EACT,EAAO,GAGT,KAAK,MAAM,GAAU,EAAG,GAAQ,GAAI,GAAU,IAAI,GAGtD,UAAW,IAAW,SACpB,EAAO,QAAU,MAEjB,GAAQ,GAAK,EAGf,EAAG,GAAK,EACR,EAAG,SAAW,GAEd,IAAI,EACJ,GAAI,CACF,UAAW,SAAW,oBAAsB,OAAO,SAAW,YAC5D,EAAS,OAAO,WAEhB,iBAA2B,aAEtB,EAAP,EAGF,EAAG,cAAgB,CAAK,CAAC,EAAK,CAC5B,GAAI,aAAe,EACjB,MAAO,GAGT,OAAO,IAAQ,aAAe,IAAQ,UACpC,EAAI,YAAY,WAAa,EAAG,UAAY,MAAM,QAAQ,EAAI,KAAK,GAGvE,EAAG,aAAe,CAAI,CAAC,EAAM,EAAO,CAClC,GAAI,EAAK,IAAI,CAAK,EAAI,EAAG,OAAO,EAChC,OAAO,GAGT,EAAG,aAAe,CAAI,CAAC,EAAM,EAAO,CAClC,GAAI,EAAK,IAAI,CAAK,EAAI,EAAG,OAAO,EAChC,OAAO,GAGT,EAAG,UAAU,eAAiB,CAAK,CAAC,EAAQ,EAAM,EAAQ,CACxD,UAAW,IAAW,SACpB,OAAO,KAAK,YAAY,EAAQ,EAAM,CAAM,EAG9C,UAAW,IAAW,SACpB,OAAO,KAAK,WAAW,EAAQ,EAAM,CAAM,EAG7C,GAAI,IAAS,MACX,EAAO,GAET,EAAO,KAAU,EAAO,IAAM,GAAQ,GAAK,GAAQ,EAAE,EAErD,EAAS,EAAO,SAAS,EAAE,QAAQ,OAAQ,EAAE,EAC7C,IAAI,EAAQ,EACZ,GAAI,EAAO,KAAO,IAChB,IACA,KAAK,SAAW,EAGlB,GAAI,EAAQ,EAAO,QACjB,GAAI,IAAS,GACX,KAAK,UAAU,EAAQ,EAAO,CAAM,UAEpC,KAAK,WAAW,EAAQ,EAAM,CAAK,EAC/B,IAAW,KACb,KAAK,WAAW,KAAK,QAAQ,EAAG,EAAM,CAAM,IAMpD,EAAG,UAAU,qBAAuB,CAAY,CAAC,EAAQ,EAAM,EAAQ,CACrE,GAAI,EAAS,EACX,KAAK,SAAW,EAChB,GAAU,EAEZ,GAAI,EAAS,SACX,KAAK,MAAQ,CAAE,EAAS,QAAU,EAClC,KAAK,OAAS,UACL,EAAS,iBAClB,KAAK,MAAQ,CACX,EAAS,SACR,EAAS,SAAa,QACzB,EACA,KAAK,OAAS,MAEd,GAAO,EAAS,gBAAgB,EAChC,KAAK,MAAQ,CACX,EAAS,SACR,EAAS,SAAa,SACvB,CACF,EACA,KAAK,OAAS,EAGhB,GAAI,IAAW,KAAM,OAGrB,KAAK,WAAW,KAAK,QAAQ,EAAG,EAAM,CAAM,GAG9C,EAAG,UAAU,oBAAsB,CAAW,CAAC,EAAQ,EAAM,EAAQ,CAGnE,GADA,SAAc,EAAO,SAAW,QAAQ,EACpC,EAAO,QAAU,EAGnB,OAFA,KAAK,MAAQ,CAAE,CAAE,EACjB,KAAK,OAAS,EACP,KAGT,KAAK,OAAS,KAAK,KAAK,EAAO,OAAS,CAAC,EACzC,KAAK,MAAQ,IAAI,MAAM,KAAK,MAAM,EAClC,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC/B,KAAK,MAAM,GAAK,EAGlB,IAAI,EAAG,EACH,EAAM,EACV,GAAI,IAAW,MACb,IAAK,EAAI,EAAO,OAAS,EAAG,EAAI,EAAG,GAAK,EAAG,GAAK,EAK9C,GAJA,EAAI,EAAO,GAAM,EAAO,EAAI,IAAM,EAAM,EAAO,EAAI,IAAM,GACzD,KAAK,MAAM,IAAO,GAAK,EAAO,SAC9B,KAAK,MAAM,EAAI,GAAM,IAAO,GAAK,EAAQ,SACzC,GAAO,GACH,GAAO,GACT,GAAO,GACP,YAGK,IAAW,MACpB,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,EAAO,OAAQ,GAAK,EAKzC,GAJA,EAAI,EAAO,GAAM,EAAO,EAAI,IAAM,EAAM,EAAO,EAAI,IAAM,GACzD,KAAK,MAAM,IAAO,GAAK,EAAO,SAC9B,KAAK,MAAM,EAAI,GAAM,IAAO,GAAK,EAAQ,SACzC,GAAO,GACH,GAAO,GACT,GAAO,GACP,IAIN,OAAO,KAAK,MAAM,GAGpB,SAAS,CAAc,CAAC,EAAQ,EAAO,CACrC,IAAI,EAAI,EAAO,WAAW,CAAK,EAE/B,GAAI,GAAK,IAAM,GAAK,GAClB,OAAO,EAAI,WAEF,GAAK,IAAM,GAAK,IACzB,OAAO,EAAI,OAGX,QAAQ,EAAI,GAAM,GAItB,SAAS,CAAa,CAAC,EAAQ,EAAY,EAAO,CAChD,IAAI,EAAI,EAAc,EAAQ,CAAK,EACnC,GAAI,EAAQ,GAAK,EACf,GAAK,EAAc,EAAQ,EAAQ,CAAC,GAAK,EAE3C,OAAO,EAGT,EAAG,UAAU,mBAAqB,CAAU,CAAC,EAAQ,EAAO,EAAQ,CAElE,KAAK,OAAS,KAAK,MAAM,EAAO,OAAS,GAAS,CAAC,EACnD,KAAK,MAAQ,IAAI,MAAM,KAAK,MAAM,EAClC,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC/B,KAAK,MAAM,GAAK,EAIlB,IAAI,EAAM,EACN,EAAI,EAEJ,EACJ,GAAI,IAAW,KACb,IAAK,EAAI,EAAO,OAAS,EAAG,GAAK,EAAO,GAAK,EAG3C,GAFA,EAAI,EAAa,EAAQ,EAAO,CAAC,GAAK,EACtC,KAAK,MAAM,IAAM,EAAI,SACjB,GAAO,GACT,GAAO,GACP,GAAK,EACL,KAAK,MAAM,IAAM,IAAM,OAEvB,IAAO,MAGN,CACL,IAAI,EAAc,EAAO,OAAS,EAClC,IAAK,EAAI,EAAc,IAAM,EAAI,EAAQ,EAAI,EAAO,EAAI,EAAO,OAAQ,GAAK,EAG1E,GAFA,EAAI,EAAa,EAAQ,EAAO,CAAC,GAAK,EACtC,KAAK,MAAM,IAAM,EAAI,SACjB,GAAO,GACT,GAAO,GACP,GAAK,EACL,KAAK,MAAM,IAAM,IAAM,OAEvB,IAAO,EAKb,KAAK,MAAM,GAGb,SAAS,CAAU,CAAC,EAAK,EAAO,EAAK,EAAK,CACxC,IAAI,EAAI,EACJ,EAAM,KAAK,IAAI,EAAI,OAAQ,CAAG,EAClC,QAAS,EAAI,EAAO,EAAI,EAAK,IAAK,CAChC,IAAI,EAAI,EAAI,WAAW,CAAC,EAAI,GAK5B,GAHA,GAAK,EAGD,GAAK,GACP,GAAK,EAAI,GAAK,WAGL,GAAK,GACd,GAAK,EAAI,GAAK,OAId,IAAK,EAGT,OAAO,EAGT,EAAG,UAAU,oBAAsB,CAAW,CAAC,EAAQ,EAAM,EAAO,CAElE,KAAK,MAAQ,CAAE,CAAE,EACjB,KAAK,OAAS,EAGd,QAAS,EAAU,EAAG,EAAU,EAAG,GAAW,SAAW,GAAW,EAClE,IAEF,IACA,EAAW,EAAU,EAAQ,EAE7B,IAAI,EAAQ,EAAO,OAAS,EACxB,EAAM,EAAQ,EACd,EAAM,KAAK,IAAI,EAAO,EAAQ,CAAG,EAAI,EAErC,EAAO,EACX,QAAS,EAAI,EAAO,EAAI,EAAK,GAAK,EAIhC,GAHA,EAAO,EAAU,EAAQ,EAAG,EAAI,EAAS,CAAI,EAE7C,KAAK,MAAM,CAAO,EACd,KAAK,MAAM,GAAK,EAAO,SACzB,KAAK,MAAM,IAAM,MAEjB,MAAK,OAAO,CAAI,EAIpB,GAAI,IAAQ,EAAG,CACb,IAAI,EAAM,EACV,EAAO,EAAU,EAAQ,EAAG,EAAO,OAAQ,CAAI,EAE/C,IAAK,EAAI,EAAG,EAAI,EAAK,IACnB,GAAO,EAIT,GADA,KAAK,MAAM,CAAG,EACV,KAAK,MAAM,GAAK,EAAO,SACzB,KAAK,MAAM,IAAM,MAEjB,MAAK,OAAO,CAAI,EAIpB,KAAK,MAAM,GAGb,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAM,CACvC,EAAK,MAAQ,IAAI,MAAM,KAAK,MAAM,EAClC,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAC/B,EAAK,MAAM,GAAK,KAAK,MAAM,GAE7B,EAAK,OAAS,KAAK,OACnB,EAAK,SAAW,KAAK,SACrB,EAAK,IAAM,KAAK,KAGlB,EAAG,UAAU,eAAiB,CAAM,EAAG,CACrC,IAAI,EAAI,IAAI,EAAG,IAAI,EAEnB,OADA,KAAK,KAAK,CAAC,EACJ,GAGT,EAAG,UAAU,iBAAmB,CAAQ,CAAC,EAAM,CAC7C,MAAO,KAAK,OAAS,EACnB,KAAK,MAAM,KAAK,UAAY,EAE9B,OAAO,MAIT,EAAG,UAAU,eAAiB,CAAM,EAAG,CACrC,MAAO,KAAK,OAAS,GAAK,KAAK,MAAM,KAAK,OAAS,KAAO,EACxD,KAAK,SAEP,OAAO,KAAK,UAAU,GAGxB,EAAG,UAAU,mBAAqB,CAAU,EAAG,CAE7C,GAAI,KAAK,SAAW,GAAK,KAAK,MAAM,KAAO,EACzC,KAAK,SAAW,EAElB,OAAO,MAGT,EAAG,UAAU,iBAAmB,CAAQ,EAAG,CACzC,OAAQ,KAAK,IAAM,UAAY,SAAW,KAAK,SAAS,EAAE,EAAI,KAiChE,IAAI,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,2BACF,EAEI,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CACpB,EAEI,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAC9D,EAyIA,GAvIA,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAM,EAAS,CACxD,EAAO,GAAQ,GACf,EAAU,EAAU,GAAK,EAEzB,IAAI,EACJ,GAAI,IAAS,IAAM,IAAS,MAAO,CACjC,EAAM,GACN,IAAI,EAAM,EACN,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CACpC,IAAI,EAAI,KAAK,MAAM,GACf,IAAU,GAAK,EAAO,GAAS,UAAU,SAAS,EAAE,EAGxD,GAFA,EAAS,IAAO,GAAK,EAAQ,SAC7B,GAAO,EACH,GAAO,GACT,GAAO,GACP,IAEF,GAAI,IAAU,GAAK,IAAM,KAAK,OAAS,EACrC,EAAM,EAAM,EAAI,EAAK,QAAU,EAAO,MAEtC,GAAM,EAAO,EAGjB,GAAI,IAAU,EACZ,EAAM,EAAM,SAAS,EAAE,EAAI,EAE7B,MAAO,EAAI,OAAS,IAAY,EAC9B,EAAM,IAAM,EAEd,GAAI,KAAK,WAAa,EACpB,EAAM,IAAM,EAEd,OAAO,EAGT,GAAI,KAAU,EAAO,IAAM,GAAQ,GAAK,GAAQ,GAAI,CAElD,IAAI,EAAY,EAAW,GAEvB,EAAY,EAAW,GAC3B,EAAM,GACN,IAAI,EAAI,KAAK,MAAM,EACnB,EAAE,SAAW,EACb,OAAQ,EAAE,OAAO,EAAG,CAClB,IAAI,EAAI,EAAE,KAAK,CAAS,EAAE,SAAS,CAAI,EAGvC,GAFA,EAAI,EAAE,MAAM,CAAS,GAEhB,EAAE,OAAO,EACZ,EAAM,EAAM,EAAY,EAAE,QAAU,EAAI,MAExC,GAAM,EAAI,EAGd,GAAI,KAAK,OAAO,EACd,EAAM,IAAM,EAEd,MAAO,EAAI,OAAS,IAAY,EAC9B,EAAM,IAAM,EAEd,GAAI,KAAK,WAAa,EACpB,EAAM,IAAM,EAEd,OAAO,EAGT,EAAO,GAAO,iCAAiC,GAGjD,EAAG,UAAU,kBAAoB,CAAS,EAAG,CAC3C,IAAI,EAAM,KAAK,MAAM,GACrB,GAAI,KAAK,SAAW,EAClB,GAAO,KAAK,MAAM,GAAK,iBACd,KAAK,SAAW,GAAK,KAAK,MAAM,KAAO,EAEhD,GAAO,iBAAoB,KAAK,MAAM,GAAK,iBAClC,KAAK,OAAS,EACvB,EAAO,GAAO,4CAA4C,EAE5D,OAAQ,KAAK,WAAa,GAAM,EAAM,GAGxC,EAAG,UAAU,gBAAkB,CAAO,EAAG,CACvC,OAAO,KAAK,SAAS,EAAE,GAGzB,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAQ,EAAQ,CAEzD,OADA,SAAc,IAAW,WAAW,EAC7B,KAAK,YAAY,EAAQ,EAAQ,CAAM,GAGhD,EAAG,UAAU,iBAAmB,CAAQ,CAAC,EAAQ,EAAQ,CACvD,OAAO,KAAK,YAAY,MAAO,EAAQ,CAAM,GAG/C,EAAG,UAAU,qBAAuB,CAAY,CAAC,EAAW,EAAQ,EAAQ,CAC1E,IAAI,EAAa,KAAK,WAAW,EAC7B,EAAY,GAAU,KAAK,IAAI,EAAG,CAAU,EAChD,EAAO,GAAc,EAAW,uCAAuC,EACvE,EAAO,EAAY,EAAG,6BAA6B,EAEnD,KAAK,MAAM,EACX,IAAI,EAAe,IAAW,KAC1B,EAAM,IAAI,EAAU,CAAS,EAE7B,EAAG,EACH,EAAI,KAAK,MAAM,EACnB,IAAK,EAAc,CAEjB,IAAK,EAAI,EAAG,EAAI,EAAY,EAAY,IACtC,EAAI,GAAK,EAGX,IAAK,EAAI,GAAI,EAAE,OAAO,EAAG,IACvB,EAAI,EAAE,MAAM,GAAI,EAChB,EAAE,OAAO,CAAC,EAEV,EAAI,EAAY,EAAI,GAAK,MAEtB,CACL,IAAK,EAAI,GAAI,EAAE,OAAO,EAAG,IACvB,EAAI,EAAE,MAAM,GAAI,EAChB,EAAE,OAAO,CAAC,EAEV,EAAI,GAAK,EAGX,KAAO,EAAI,EAAW,IACpB,EAAI,GAAK,EAIb,OAAO,GAGL,KAAK,MACP,EAAG,UAAU,oBAAsB,CAAW,CAAC,EAAG,CAChD,MAAO,IAAK,KAAK,MAAM,CAAC,OAG1B,GAAG,UAAU,oBAAsB,CAAW,CAAC,EAAG,CAChD,IAAI,EAAI,EACJ,EAAI,EACR,GAAI,GAAK,KACP,GAAK,GACL,KAAO,GAET,GAAI,GAAK,GACP,GAAK,EACL,KAAO,EAET,GAAI,GAAK,EACP,GAAK,EACL,KAAO,EAET,GAAI,GAAK,EACP,GAAK,EACL,KAAO,EAET,OAAO,EAAI,GAIf,EAAG,UAAU,mBAAqB,CAAU,CAAC,EAAG,CAE9C,GAAI,IAAM,EAAG,MAAO,IAEpB,IAAI,EAAI,EACJ,EAAI,EACR,IAAK,EAAI,QAAY,EACnB,GAAK,GACL,KAAO,GAET,IAAK,EAAI,OAAU,EACjB,GAAK,EACL,KAAO,EAET,IAAK,EAAI,MAAS,EAChB,GAAK,EACL,KAAO,EAET,IAAK,EAAI,KAAS,EAChB,GAAK,EACL,KAAO,EAET,IAAK,EAAI,KAAS,EAChB,IAEF,OAAO,GAIT,EAAG,UAAU,mBAAqB,CAAU,EAAG,CAC7C,IAAI,EAAI,KAAK,MAAM,KAAK,OAAS,GAC7B,EAAK,KAAK,WAAW,CAAC,EAC1B,OAAQ,KAAK,OAAS,GAAK,GAAK,GAGlC,SAAS,CAAW,CAAC,EAAK,CACxB,IAAI,EAAI,IAAI,MAAM,EAAI,UAAU,CAAC,EAEjC,QAAS,EAAM,EAAG,EAAM,EAAE,OAAQ,IAAO,CACvC,IAAI,EAAO,EAAM,GAAM,EACnB,EAAO,EAAM,GAEjB,EAAE,IAAQ,EAAI,MAAM,GAAQ,GAAK,KAAW,EAG9C,OAAO,EAIT,EAAG,UAAU,kBAAoB,CAAS,EAAG,CAC3C,GAAI,KAAK,OAAO,EAAG,MAAO,GAE1B,IAAI,EAAI,EACR,QAAS,EAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CACpC,IAAI,EAAI,KAAK,UAAU,KAAK,MAAM,EAAE,EAEpC,GADA,GAAK,EACD,IAAM,GAAI,MAEhB,OAAO,GAGT,EAAG,UAAU,oBAAsB,CAAW,EAAG,CAC/C,OAAO,KAAK,KAAK,KAAK,UAAU,EAAI,CAAC,GAGvC,EAAG,UAAU,gBAAkB,CAAO,CAAC,EAAO,CAC5C,GAAI,KAAK,WAAa,EACpB,OAAO,KAAK,IAAI,EAAE,MAAM,CAAK,EAAE,MAAM,CAAC,EAExC,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,kBAAoB,CAAS,CAAC,EAAO,CAChD,GAAI,KAAK,MAAM,EAAQ,CAAC,EACtB,OAAO,KAAK,KAAK,CAAK,EAAE,MAAM,CAAC,EAAE,KAAK,EAExC,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,eAAiB,CAAM,EAAG,CACrC,OAAO,KAAK,WAAa,GAI3B,EAAG,UAAU,aAAe,CAAI,EAAG,CACjC,OAAO,KAAK,MAAM,EAAE,KAAK,GAG3B,EAAG,UAAU,cAAgB,CAAK,EAAG,CACnC,IAAK,KAAK,OAAO,EACf,KAAK,UAAY,EAGnB,OAAO,MAIT,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,MAAO,KAAK,OAAS,EAAI,OACvB,KAAK,MAAM,KAAK,UAAY,EAG9B,QAAS,EAAI,EAAG,EAAI,EAAI,OAAQ,IAC9B,KAAK,MAAM,GAAK,KAAK,MAAM,GAAK,EAAI,MAAM,GAG5C,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CAEpC,OADA,GAAQ,KAAK,SAAW,EAAI,YAAc,CAAC,EACpC,KAAK,KAAK,CAAG,GAItB,EAAG,UAAU,YAAc,CAAG,CAAC,EAAK,CAClC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,IAAI,CAAG,EACzD,OAAO,EAAI,MAAM,EAAE,IAAI,IAAI,GAG7B,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,CAAG,EAC1D,OAAO,EAAI,MAAM,EAAE,KAAK,IAAI,GAI9B,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CAExC,IAAI,EACJ,GAAI,KAAK,OAAS,EAAI,OACpB,EAAI,MAEJ,GAAI,KAGN,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,KAAK,MAAM,GAAK,KAAK,MAAM,GAAK,EAAI,MAAM,GAK5C,OAFA,KAAK,OAAS,EAAE,OAET,KAAK,MAAM,GAGpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CAEtC,OADA,GAAQ,KAAK,SAAW,EAAI,YAAc,CAAC,EACpC,KAAK,MAAM,CAAG,GAIvB,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,CAAG,EAC1D,OAAO,EAAI,MAAM,EAAE,KAAK,IAAI,GAG9B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,EAC3D,OAAO,EAAI,MAAM,EAAE,MAAM,IAAI,GAI/B,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAK,CAExC,IAAI,EACA,EACJ,GAAI,KAAK,OAAS,EAAI,OACpB,EAAI,KACJ,EAAI,MAEJ,GAAI,EACJ,EAAI,KAGN,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,KAAK,MAAM,GAAK,EAAE,MAAM,GAAK,EAAE,MAAM,GAGvC,GAAI,OAAS,EACX,KAAO,EAAI,EAAE,OAAQ,IACnB,KAAK,MAAM,GAAK,EAAE,MAAM,GAM5B,OAFA,KAAK,OAAS,EAAE,OAET,KAAK,MAAM,GAGpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CAEtC,OADA,GAAQ,KAAK,SAAW,EAAI,YAAc,CAAC,EACpC,KAAK,MAAM,CAAG,GAIvB,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,CAAG,EAC1D,OAAO,EAAI,MAAM,EAAE,KAAK,IAAI,GAG9B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,MAAM,CAAG,EAC3D,OAAO,EAAI,MAAM,EAAE,MAAM,IAAI,GAI/B,EAAG,UAAU,eAAiB,CAAM,CAAC,EAAO,CAC1C,SAAc,IAAU,UAAY,GAAS,CAAC,EAE9C,IAAI,EAAc,KAAK,KAAK,EAAQ,EAAE,EAAI,EACtC,EAAW,EAAQ,GAKvB,GAFA,KAAK,QAAQ,CAAW,EAEpB,EAAW,EACb,IAIF,QAAS,EAAI,EAAG,EAAI,EAAa,IAC/B,KAAK,MAAM,IAAM,KAAK,MAAM,GAAK,SAInC,GAAI,EAAW,EACb,KAAK,MAAM,IAAM,KAAK,MAAM,GAAM,UAAc,GAAK,EAIvD,OAAO,KAAK,MAAM,GAGpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAO,CACxC,OAAO,KAAK,MAAM,EAAE,MAAM,CAAK,GAIjC,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,EAAK,CAC3C,SAAc,IAAQ,UAAY,GAAO,CAAC,EAE1C,IAAI,EAAO,EAAM,GAAM,EACnB,EAAO,EAAM,GAIjB,GAFA,KAAK,QAAQ,EAAM,CAAC,EAEhB,EACF,KAAK,MAAM,GAAO,KAAK,MAAM,GAAQ,GAAK,MAE1C,MAAK,MAAM,GAAO,KAAK,MAAM,KAAS,GAAK,GAG7C,OAAO,KAAK,MAAM,GAIpB,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CACtC,IAAI,EAGJ,GAAI,KAAK,WAAa,GAAK,EAAI,WAAa,EAI1C,OAHA,KAAK,SAAW,EAChB,EAAI,KAAK,KAAK,CAAG,EACjB,KAAK,UAAY,EACV,KAAK,UAAU,UAGb,KAAK,WAAa,GAAK,EAAI,WAAa,EAIjD,OAHA,EAAI,SAAW,EACf,EAAI,KAAK,KAAK,CAAG,EACjB,EAAI,SAAW,EACR,EAAE,UAAU,EAIrB,IAAI,EAAG,EACP,GAAI,KAAK,OAAS,EAAI,OACpB,EAAI,KACJ,EAAI,MAEJ,GAAI,EACJ,EAAI,KAGN,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,GAAK,EAAE,MAAM,GAAK,IAAM,EAAE,MAAM,GAAK,GAAK,EAC1C,KAAK,MAAM,GAAK,EAAI,SACpB,EAAQ,IAAM,GAEhB,KAAO,IAAU,GAAK,EAAI,EAAE,OAAQ,IAClC,GAAK,EAAE,MAAM,GAAK,GAAK,EACvB,KAAK,MAAM,GAAK,EAAI,SACpB,EAAQ,IAAM,GAIhB,GADA,KAAK,OAAS,EAAE,OACZ,IAAU,EACZ,KAAK,MAAM,KAAK,QAAU,EAC1B,KAAK,iBAEI,IAAM,KACf,KAAO,EAAI,EAAE,OAAQ,IACnB,KAAK,MAAM,GAAK,EAAE,MAAM,GAI5B,OAAO,MAIT,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,IAAI,EACJ,GAAI,EAAI,WAAa,GAAK,KAAK,WAAa,EAI1C,OAHA,EAAI,SAAW,EACf,EAAM,KAAK,IAAI,CAAG,EAClB,EAAI,UAAY,EACT,UACE,EAAI,WAAa,GAAK,KAAK,WAAa,EAIjD,OAHA,KAAK,SAAW,EAChB,EAAM,EAAI,IAAI,IAAI,EAClB,KAAK,SAAW,EACT,EAGT,GAAI,KAAK,OAAS,EAAI,OAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,CAAG,EAE1D,OAAO,EAAI,MAAM,EAAE,KAAK,IAAI,GAI9B,EAAG,UAAU,cAAgB,CAAK,CAAC,EAAK,CAEtC,GAAI,EAAI,WAAa,EAAG,CACtB,EAAI,SAAW,EACf,IAAI,EAAI,KAAK,KAAK,CAAG,EAErB,OADA,EAAI,SAAW,EACR,EAAE,UAAU,UAGV,KAAK,WAAa,EAI3B,OAHA,KAAK,SAAW,EAChB,KAAK,KAAK,CAAG,EACb,KAAK,SAAW,EACT,KAAK,UAAU,EAIxB,IAAI,EAAM,KAAK,IAAI,CAAG,EAGtB,GAAI,IAAQ,EAIV,OAHA,KAAK,SAAW,EAChB,KAAK,OAAS,EACd,KAAK,MAAM,GAAK,EACT,KAIT,IAAI,EAAG,EACP,GAAI,EAAM,EACR,EAAI,KACJ,EAAI,MAEJ,GAAI,EACJ,EAAI,KAGN,IAAI,EAAQ,EACZ,QAAS,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,GAAK,EAAE,MAAM,GAAK,IAAM,EAAE,MAAM,GAAK,GAAK,EAC1C,EAAQ,GAAK,GACb,KAAK,MAAM,GAAK,EAAI,SAEtB,KAAO,IAAU,GAAK,EAAI,EAAE,OAAQ,IAClC,GAAK,EAAE,MAAM,GAAK,GAAK,EACvB,EAAQ,GAAK,GACb,KAAK,MAAM,GAAK,EAAI,SAItB,GAAI,IAAU,GAAK,EAAI,EAAE,QAAU,IAAM,KACvC,KAAO,EAAI,EAAE,OAAQ,IACnB,KAAK,MAAM,GAAK,EAAE,MAAM,GAM5B,GAFA,KAAK,OAAS,KAAK,IAAI,KAAK,OAAQ,CAAC,EAEjC,IAAM,KACR,KAAK,SAAW,EAGlB,OAAO,KAAK,MAAM,GAIpB,EAAG,UAAU,aAAe,CAAI,CAAC,EAAK,CACpC,OAAO,KAAK,MAAM,EAAE,KAAK,CAAG,GAG9B,SAAS,CAAW,CAAC,EAAM,EAAK,EAAK,CACnC,EAAI,SAAW,EAAI,SAAW,EAAK,SACnC,IAAI,EAAO,EAAK,OAAS,EAAI,OAAU,EACvC,EAAI,OAAS,EACb,EAAO,EAAM,EAAK,EAGlB,IAAI,EAAI,EAAK,MAAM,GAAK,EACpB,EAAI,EAAI,MAAM,GAAK,EACnB,EAAI,EAAI,EAER,EAAK,EAAI,SACT,EAAS,EAAI,SAAa,EAC9B,EAAI,MAAM,GAAK,EAEf,QAAS,EAAI,EAAG,EAAI,EAAK,IAAK,CAG5B,IAAI,EAAS,IAAU,GACnB,EAAQ,EAAQ,SAChB,EAAO,KAAK,IAAI,EAAG,EAAI,OAAS,CAAC,EACrC,QAAS,EAAI,KAAK,IAAI,EAAG,EAAI,EAAK,OAAS,CAAC,EAAG,GAAK,EAAM,IAAK,CAC7D,IAAI,EAAK,EAAI,EAAK,EAClB,EAAI,EAAK,MAAM,GAAK,EACpB,EAAI,EAAI,MAAM,GAAK,EACnB,EAAI,EAAI,EAAI,EACZ,GAAW,EAAI,SAAa,EAC5B,EAAQ,EAAI,SAEd,EAAI,MAAM,GAAK,EAAQ,EACvB,EAAQ,EAAS,EAEnB,GAAI,IAAU,EACZ,EAAI,MAAM,GAAK,EAAQ,MAEvB,GAAI,SAGN,OAAO,EAAI,MAAM,EAMnB,IAAI,YAAuB,CAAY,CAAC,EAAM,EAAK,EAAK,CACtD,IAAI,EAAI,EAAK,MACT,EAAI,EAAI,MACR,EAAI,EAAI,MACR,EAAI,EACJ,EACA,EACA,EACA,EAAK,EAAE,GAAK,EACZ,EAAM,EAAK,KACX,EAAM,IAAO,GACb,EAAK,EAAE,GAAK,EACZ,EAAM,EAAK,KACX,EAAM,IAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,EAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,EAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GACb,GAAK,EAAE,GAAK,EACZ,GAAM,GAAK,KACX,GAAM,KAAO,GAEjB,EAAI,SAAW,EAAK,SAAW,EAAI,SACnC,EAAI,OAAS,GAEb,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,IAAI,IAAQ,EAAI,EAAM,KAAO,EAAM,OAAW,IAAO,EACrD,GAAO,GAAM,IAAQ,IAAO,IAAM,KAAO,IAAO,EAChD,IAAM,SAEN,EAAK,KAAK,KAAK,EAAK,EAAG,EACvB,EAAM,KAAK,KAAK,EAAK,EAAG,EACxB,EAAO,EAAM,KAAK,KAAK,GAAK,EAAG,EAAK,EACpC,EAAK,KAAK,KAAK,GAAK,EAAG,EACvB,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAM,EAAK,KAAK,KAAK,EAAK,EAAG,EAAK,EAClC,EAAO,EAAM,KAAK,KAAK,EAAK,EAAG,EAAK,EACpC,EAAO,EAAM,KAAK,KAAK,EAAK,E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",
  "debugId": "26DB57D3831C907C64756E2164756E21",
  "names": []
}