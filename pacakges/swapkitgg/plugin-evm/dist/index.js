import{ApproveMode as Y,AssetValue as x,EVMChains as Z,ProviderName as b,SwapKitError as Q}from"@swapkit/helpers";function G({getWallet:R}){async function _({route:j,feeOptionKey:H}){let{tx:z,sellAsset:B}=j,D=(await x.from({asset:B,asyncTokenLookup:!0})).chain,J=R(D);if(!(Z.includes(D)&&z))throw new Q("core_swap_invalid_params");let{from:F,to:U,data:q,value:L}=z;return J.sendTransaction({from:F,to:U,data:q,value:BigInt(L)},H)}function T({assetValue:j,spenderAddress:H,type:z="checkOnly"}){let{address:B,chain:I,isGasAsset:D,isSynthetic:J}=j,F=Z.includes(I);if(F&&D||!F||J)return Promise.resolve(z==="checkOnly"?!0:"approved");let q=R(I);if(!q)throw new Q("core_wallet_connection_not_found");let L=z==="checkOnly"?q.isApproved:q.approve,X=q.address;if(!(B&&X))throw new Q("core_approve_asset_address_or_from_not_found");return L({amount:j.getBaseValue("bigint"),assetAddress:B,from:X,spenderAddress:H})}function $(j){return T({...j,type:Y.Approve})}function k(j){return T({...j,type:Y.CheckOnly})}return{swap:_,approveAssetValue:$,isAssetValueApproved:k,supportedSwapkitProviders:[b.CAMELOT_V3,b.OPENOCEAN_V2,b.ONEINCH,b.PANCAKESWAP,b.PANGOLIN_V1,b.SUSHISWAP_V2,b.TRADERJOE_V2,b.UNISWAP_V2,b.UNISWAP_V3]}}var f={evm:{plugin:G}};export{f as EVMPlugin};

//# debugId=8A2D08D8C1168F4C64756E2164756E21
