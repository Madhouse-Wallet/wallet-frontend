{
  "version": 3,
  "sources": ["../src/polkadot.ts", "../src/helpers.ts"],
  "sourcesContent": [
    "import {\n  Chain,\n  type ConnectWalletParams,\n  WalletOption,\n  filterSupportedChains,\n  setRequestClientConfig,\n} from \"@swapkit/helpers\";\nimport { getWalletForChain } from \"./helpers\";\n\nconst POLKADOT_SUPPORTED_CHAINS = [Chain.Polkadot] as const;\n\nfunction connectPolkadotJs({ addChain, config: { thorswapApiKey } }: ConnectWalletParams) {\n  return async function connectPolkadotJs(chains: Chain[]) {\n    setRequestClientConfig({ apiKey: thorswapApiKey });\n\n    const supportedChains = filterSupportedChains(\n      chains,\n      POLKADOT_SUPPORTED_CHAINS,\n      WalletOption.POLKADOT_JS,\n    );\n\n    const promises = supportedChains.map(async (chain) => {\n      const { address, walletMethods } = await getWalletForChain({\n        chain,\n      });\n\n      addChain({\n        ...walletMethods,\n        address,\n        chain,\n        balance: [],\n        walletType: WalletOption.POLKADOT_JS,\n      });\n    });\n\n    await Promise.all(promises);\n\n    return true;\n  };\n}\n\nexport const polkadotWallet = { connectPolkadotJs } as const;\n",
    "import { Chain, SwapKitError, WalletOption } from \"@swapkit/helpers\";\n\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\n\nimport type { InjectedWindow } from \"@swapkit/toolbox-substrate\";\n\nexport const convertAddress = (inputAddress: string, newPrefix: number): string => {\n  const decodedAddress = decodeAddress(inputAddress);\n  const convertedAddress = encodeAddress(decodedAddress, newPrefix);\n  return convertedAddress;\n};\n\nexport const getWalletForChain = async ({\n  chain,\n}: {\n  chain: Chain;\n}) => {\n  switch (chain) {\n    case Chain.Polkadot: {\n      const { getToolboxByChain } = await import(\"@swapkit/toolbox-substrate\");\n      const injectedWindow = window as Window & InjectedWindow;\n      const injectedExtension = injectedWindow?.injectedWeb3?.[\"polkadot-js\"];\n\n      const rawExtension = await injectedExtension?.enable?.(\"polkadot-js\");\n      if (!rawExtension) {\n        throw new SwapKitError({\n          errorKey: \"wallet_polkadot_not_found\",\n          info: { chain },\n        });\n      }\n\n      const toolbox = await getToolboxByChain(chain, { signer: rawExtension.signer });\n      const accounts = await rawExtension.accounts.get();\n      if (!accounts[0]?.address) {\n        throw new SwapKitError({\n          errorKey: \"wallet_missing_params\",\n          info: { wallet: WalletOption.POLKADOT_JS, accounts, address: accounts[0]?.address },\n        });\n      }\n      const subAddress: string = accounts[0].address;\n      const newPrefix = 0;\n      const address = convertAddress(subAddress, newPrefix);\n      return {\n        walletMethods: { ...toolbox, getAddress: () => address },\n        address,\n      };\n    }\n\n    default:\n      throw new SwapKitError({\n        errorKey: \"wallet_chain_not_supported\",\n        info: { chain, wallet: WalletOption.POLKADOT_JS },\n      });\n  }\n};\n"
  ],
  "mappings": "0lBAAA,gBACE,kBAEA,2BACA,4BACA,yBCLF,gBAAS,kBAAO,kBAAc,yBAE9B,wBAAS,mBAAe,8BAIjB,IAAM,EAAiB,CAAC,EAAsB,IAA8B,CACjF,IAAM,EAAiB,EAAc,CAAY,EAEjD,OADyB,EAAc,EAAgB,CAAS,GAIrD,EAAoB,OAC/B,WAGI,CACJ,OAAQ,QACD,EAAM,SAAU,CACnB,IAAQ,qBAAsB,KAAa,sCAIrC,EAAe,MAHE,QACmB,eAAe,gBAEX,SAAS,aAAa,EACpE,IAAK,EACH,MAAM,IAAI,EAAa,CACrB,SAAU,4BACV,KAAM,CAAE,OAAM,CAChB,CAAC,EAGH,IAAM,EAAU,MAAM,EAAkB,EAAO,CAAE,OAAQ,EAAa,MAAO,CAAC,EACxE,EAAW,MAAM,EAAa,SAAS,IAAI,EACjD,IAAK,EAAS,IAAI,QAChB,MAAM,IAAI,EAAa,CACrB,SAAU,wBACV,KAAM,CAAE,OAAQ,EAAa,YAAa,WAAU,QAAS,EAAS,IAAI,OAAQ,CACpF,CAAC,EAEH,IAAM,EAAqB,EAAS,GAAG,QAEjC,EAAU,EAAe,EADb,CACkC,EACpD,MAAO,CACL,cAAe,IAAK,EAAS,WAAY,IAAM,CAAQ,EACvD,SACF,CACF,SAGE,MAAM,IAAI,EAAa,CACrB,SAAU,6BACV,KAAM,CAAE,QAAO,OAAQ,EAAa,WAAY,CAClD,CAAC,ID3CP,IAAM,EAA4B,CAAC,EAAM,QAAQ,EAEjD,SAAS,CAAiB,EAAG,WAAU,QAAU,mBAAyC,CACxF,OAAO,eAAe,CAAiB,CAAC,EAAiB,CACvD,EAAuB,CAAE,OAAQ,CAAe,CAAC,EAQjD,IAAM,EANkB,EACtB,EACA,EACA,EAAa,WACf,EAEiC,IAAI,MAAO,IAAU,CACpD,IAAQ,UAAS,iBAAkB,MAAM,EAAkB,CACzD,OACF,CAAC,EAED,EAAS,IACJ,EACH,UACA,QACA,QAAS,CAAC,EACV,WAAY,EAAa,WAC3B,CAAC,EACF,EAID,OAFA,MAAM,QAAQ,IAAI,CAAQ,EAEnB,IAIJ,IAAM,EAAiB,CAAE,mBAAkB",
  "debugId": "0EFD2E72819EF5EC64756E2164756E21",
  "names": []
}