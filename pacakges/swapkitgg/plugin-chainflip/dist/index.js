import{SwapKitError as P}from"@swapkit/helpers";import{Assets as i,Chains as u}from"@chainflip/sdk/swap";import{AssetValue as S,SwapKitError as m,wrapWithThrow as F}from"@swapkit/helpers";import{Chain as s}from"@swapkit/helpers";import{decodeAddress as I}from"@polkadot/keyring";import{isHex as v,u8aToHex as E}from"@polkadot/util";var D=[{inputs:[{internalType:"contract IKeyManager",name:"keyManager",type:"address"},{internalType:"uint256",name:"minFunding",type:"uint256"},{internalType:"uint48",name:"redemptionDelay",type:"uint48"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"communityGuardDisabled",type:"bool"}],name:"CommunityGuardDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"flip",type:"address"}],name:"FLIPSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stateChainBlockNumber",type:"uint256"}],name:"FlipSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"funder",type:"address"}],name:"Funded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"GovernanceWithdrawal",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMinFunding",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMinFunding",type:"uint256"}],name:"MinFundingChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedemptionExecuted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedemptionExpired",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"address",name:"redeemAddress",type:"address"},{indexed:!1,internalType:"uint48",name:"startTime",type:"uint48"},{indexed:!1,internalType:"uint48",name:"expiryTime",type:"uint48"},{indexed:!1,internalType:"address",name:"executor",type:"address"}],name:"RedemptionRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"suspended",type:"bool"}],name:"Suspended",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"keyManager",type:"address"}],name:"UpdatedKeyManager",type:"event"},{inputs:[],name:"REDEMPTION_DELAY",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[],name:"disableCommunityGuard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableCommunityGuard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"}],name:"executeRedemption",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundStateChainAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCommunityGuardDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCommunityKey",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFLIP",outputs:[{internalType:"contract IFLIP",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getKeyManager",outputs:[{internalType:"contract IKeyManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastSupplyUpdateBlockNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumFunding",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"}],name:"getPendingRedemption",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"redeemAddress",type:"address"},{internalType:"uint48",name:"startTime",type:"uint48"},{internalType:"uint48",name:"expiryTime",type:"uint48"},{internalType:"address",name:"executor",type:"address"}],internalType:"struct IStateChainGateway.Redemption",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSuspendedState",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"govUpdateFlipIssuer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"govWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"bytes32",name:"nodeID",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"redeemAddress",type:"address"},{internalType:"uint48",name:"expiryTime",type:"uint48"},{internalType:"address",name:"executor",type:"address"}],name:"registerRedemption",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"resume",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFLIP",name:"flip",type:"address"}],name:"setFlip",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newMinFunding",type:"uint256"}],name:"setMinFunding",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"suspend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"address",name:"newIssuer",type:"address"},{internalType:"bool",name:"omitChecks",type:"bool"}],name:"updateFlipIssuer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"uint256",name:"newTotalSupply",type:"uint256"},{internalType:"uint256",name:"stateChainBlockNumber",type:"uint256"}],name:"updateFlipSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"contract IKeyManager",name:"keyManager",type:"address"},{internalType:"bool",name:"omitChecks",type:"bool"}],name:"updateKeyManager",outputs:[],stateMutability:"nonpayable",type:"function"}];var K=new Map([[s.Arbitrum,u.Arbitrum],[s.Bitcoin,u.Bitcoin],[s.Ethereum,u.Ethereum],[s.Polkadot,u.Polkadot],[s.Solana,u.Solana],[s.Polkadot,u.Polkadot]]),Y=new Map([["FLIP",i.FLIP],["BTC",i.BTC],["ETH",i.ETH],["USDC",i.USDC],["USDT",i.USDT],["DOT",i.DOT],["SOL",i.SOL]]),C=new Map([["ARB.ETH","ArbEth"],["ARB.USDC-0XAF88D065E77C8CC2239327C5EDB3A432268E5831","ArbUsdc"],["BTC.BTC","Btc"],["DOT.DOT","Dot"],["ETH.ETH","Eth"],["ETH.FLIP-0X826180541412D574CF1336D22C0C0A287822678A","Flip"],["ETH.USDC-0XA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48","Usdc"],["ETH.USDT-0XDAC17F958D2EE523A2206206994597C13D831EC7","Usdt"],["SOL.SOL","Sol"],["SOL.USDC-EPJFWDD5AUFQSSQEM2QN1XZYBAPC8G4WEGGKZWYTDT1V","SolUsdc"]]),R=(e)=>()=>{let t=e.api.tx.swapping?.registerAsBroker?.();if(!t)throw new m("chainflip_broker_register");return e.signAndBroadcast({tx:t,address:e.getAddress()})},B=(e)=>({feeAsset:t,recipient:n})=>{let p=t.chain===s.Polkadot,o=F(()=>{return p?e.encodeAddress(e.decodeAddress(n),"hex"):n},"chainflip_broker_recipient_error");return new Promise((y)=>{let a=e.api.tx?.swapping?.withdraw?.(t.ticker.toLowerCase(),{[t.chain.toLowerCase()]:o});if(!a)throw new m("chainflip_broker_withdraw");e.signAndBroadcast({tx:a,callback:async(l)=>{if(!l.status?.isFinalized)return;let r=l.events.find((g)=>g.event.method==="WithdrawalRequested");if(!r)throw new m("chainflip_channel_error","Could not find 'WithdrawalRequested' event");let{event:{data:{egressId:c,egressAsset:T,egressAmount:f,egressFee:b,destinationAddress:d}}}=r.toHuman();y({egressId:c,egressAsset:T,egressAmount:f,egressFee:b,destinationAddress:d})}})})},k=(e)=>({evmToolbox:t,stateChainAccount:n,assetValue:p})=>{let o=S.from({asset:"ETH.FLIP-0x826180541412D574cf1336d22c0C0a287822678A"});if(!p.eqAsset(o))throw new m("chainflip_broker_fund_only_flip_supported");if(!e.validateAddress(n))throw new m("chainflip_broker_fund_invalid_address");let y=v(n)?n:E(I(n));return t.call({abi:D,contractAddress:"0x6995ab7c4d7f4b03f467cf4c8e920427d9621dbd",funcName:"fundStateChainAccount",funcParams:[y,p.getBaseValue("string")]})},Z=(e)=>({registerAsBroker:R(e),fundStateChainAccount:k(e),withdrawFee:B(e)});var $=(e)=>{let t=C.get(e.toString().toUpperCase());if(!t)throw new P("chainflip_unknown_asset");return t};import{swapkitApiEndpoints as _}from"@swapkit/api";import{AssetValue as G,ProviderName as M,SwapKitError as A}from"@swapkit/helpers";function L({getWallet:e,config:{chainflipBrokerUrl:t,chainflipBrokerConfig:n,swapkitConfig:p,swapkitApiKey:o}}){async function y(a){let{chainflipBrokerUrl:l}=n||{},r=l||t;if(!(a?.route?.buyAsset&&r&&a.route.meta.chainflip))throw new A("core_swap_invalid_params",{...a,chainflipBrokerUrl:r});let{route:{buyAsset:c,sellAsset:T,sellAmount:f,destinationAddress:b,meta:{chainflip:d}},maxBoostFeeBps:g=0}=a;if(!(T&&c))throw new A("core_swap_asset_not_recognized");let h=await G.from({asyncTokenLookup:!0,asset:T,value:f}),x=e(h.chain);if(!x)throw new A("core_wallet_connection_not_found");let{depositAddress:w}=await _.getChainflipDepositChannel({baseUrl:r,body:{...d,destinationAddress:b||d.destinationAddress,maxBoostFeeBps:g||d.maxBoostFeeBps},apiKey:o||p?.swapkitApiKey});return await x.transfer({assetValue:h,from:x.address,recipient:w,isProgramDerivedAddress:!0})}return{swap:y,supportedSwapkitProviders:[M.CHAINFLIP,M.CHAINFLIP_STREAMING]}}var H={chainflip:{plugin:L}},ae=H;export{$ as toCFTicker,K as chainToChainflipChain,Y as assetTickerToChainflipAsset,C as assetIdentifierToChainflipTicker,ae as ChainflipProvider,H as ChainflipPlugin,Z as ChainflipBroker};

//# debugId=9EAECAA8CF8E146464756E2164756E21
