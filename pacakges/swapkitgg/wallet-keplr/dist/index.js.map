{
  "version": 3,
  "sources": ["../src/index.ts", "../src/chainRegistry.ts"],
  "sourcesContent": [
    "import type { Keplr } from \"@keplr-wallet/types\";\nimport {\n  type AssetValue,\n  Chain,\n  ChainId,\n  ChainToChainId,\n  type ConnectWalletParams,\n  WalletOption,\n  type WalletTxParams,\n  filterSupportedChains,\n  setRequestClientConfig,\n} from \"@swapkit/helpers\";\nimport type { ThorchainToolboxType } from \"@swapkit/toolbox-cosmos\";\nimport { chainRegistry } from \"./chainRegistry\";\n\ndeclare global {\n  interface Window {\n    keplr: Keplr;\n    leap: Keplr;\n  }\n}\n\nconst keplrSupportedChainIds = [ChainId.Cosmos, ChainId.Kujira, ChainId.THORChain] as const;\nconst KEPLR_SUPPORTED_CHAINS = [Chain.Cosmos, Chain.Kujira, Chain.THORChain] as const;\n\ntype TransferParams = WalletTxParams & { assetValue: AssetValue };\n\nfunction connectKeplr({\n  addChain,\n  config: { thorswapApiKey },\n}: ConnectWalletParams<{\n  transfer: (params: TransferParams) => Promise<string>;\n}>) {\n  return async function connectKeplr(chains: Chain[], extensionKey: \"keplr\" | \"leap\" = \"keplr\") {\n    const walletType = extensionKey === \"keplr\" ? WalletOption.KEPLR : WalletOption.LEAP;\n    const supportedChains = filterSupportedChains(chains, KEPLR_SUPPORTED_CHAINS, walletType);\n\n    setRequestClientConfig({ apiKey: thorswapApiKey });\n    const keplrClient = window[extensionKey];\n\n    const toolboxPromises = supportedChains.map(async (chain) => {\n      const chainId = ChainToChainId[chain] as (typeof keplrSupportedChainIds)[number];\n\n      if (!keplrSupportedChainIds.includes(chainId)) {\n        const chainConfig = chainRegistry.get(chainId);\n        if (!chainConfig) throw new Error(`Unsupported chain ${chain}`);\n        await keplrClient.experimentalSuggestChain(chainConfig);\n      }\n\n      keplrClient?.enable(chainId);\n      const offlineSigner = keplrClient?.getOfflineSignerOnlyAmino(chainId, {\n        preferNoSetFee: chain === Chain.THORChain,\n      });\n      if (!offlineSigner) throw new Error(\"Could not load offlineSigner\");\n      const { getToolboxByChain } = await import(\"@swapkit/toolbox-cosmos\");\n\n      const accounts = await offlineSigner.getAccounts();\n\n      if (!accounts?.[0]?.address) throw new Error(\"No accounts found\");\n      const [{ address }] = accounts;\n\n      const toolbox = getToolboxByChain(chain)();\n\n      const transfer = (params: {\n        from?: string;\n        recipient: string;\n        assetValue: AssetValue;\n        memo?: string;\n      }) =>\n        toolbox.transfer({\n          ...params,\n          signer: offlineSigner,\n          fee: 2,\n          from: params.from || address,\n        });\n\n      const deposit =\n        chain === Chain.THORChain\n          ? {\n              deposit: (params: {\n                from?: string;\n                assetValue: AssetValue;\n                memo?: string;\n              }) =>\n                (toolbox as ThorchainToolboxType).deposit({\n                  ...params,\n                  signer: offlineSigner,\n                  from: params.from || address,\n                  memo: params.memo || \"\",\n                }),\n            }\n          : {};\n\n      addChain({\n        ...toolbox,\n        ...deposit,\n        chain,\n        transfer,\n        address,\n        balance: [],\n        walletType,\n      });\n    });\n\n    await Promise.all(toolboxPromises);\n\n    return true;\n  };\n}\n\nexport const keplrWallet = { connectKeplr } as const;\n",
    "import type { ChainInfo } from \"@keplr-wallet/types\";\nimport { ChainId } from \"@swapkit/helpers\";\n\nexport const chainRegistry = new Map<ChainId, ChainInfo>([\n  [\n    ChainId.Kujira,\n    {\n      chainId: \"kaiyo-1\",\n      chainName: \"Kujira\",\n      chainSymbolImageUrl:\n        \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/chain.png\",\n      rpc: \"https://kujira-rpc.nodes.defiantlabs.net\",\n      rest: \"https://rest.cosmos.directory/kujira/\",\n      nodeProvider: {\n        name: \"PFC\",\n        email: \"pfc-validator@protonmail.com\",\n        website: \"https://pfc.zone/\",\n      },\n      bip44: {\n        coinType: 118,\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"kujira\",\n        bech32PrefixAccPub: \"kujirapub\",\n        bech32PrefixValAddr: \"kujiravaloper\",\n        bech32PrefixValPub: \"kujiravaloperpub\",\n        bech32PrefixConsAddr: \"kujiravalcons\",\n        bech32PrefixConsPub: \"kujiravalconspub\",\n      },\n      currencies: [\n        {\n          coinDenom: \"KUJI\",\n          coinMinimalDenom: \"ukuji\",\n          coinDecimals: 6,\n          coinGeckoId: \"kujira\",\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/ukuji.png\",\n        },\n        {\n          coinDenom: \"USK\",\n          coinMinimalDenom:\n            \"factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk\",\n          coinDecimals: 6,\n          coinGeckoId: \"usk\",\n        },\n        {\n          coinDenom: \"MNTA\",\n          coinMinimalDenom: \"factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta\",\n          coinDecimals: 6,\n          coinGeckoId: \"mantadao\",\n        },\n        {\n          coinDenom: \"bKUJI\",\n          coinMinimalDenom:\n            \"factory/kujira15e8q5wzlk5k38gjxlhse3vu6vqnafysncx2ltexd6y9gx50vuj2qpt7dgv/boneKuji\",\n          coinDecimals: 6,\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/factory/kujira15e8q5wzlk5k38gjxlhse3vu6vqnafysncx2ltexd6y9gx50vuj2qpt7dgv/bKUJI.png\",\n        },\n        {\n          coinDenom: \"AQLA\",\n          coinMinimalDenom: \"factory/kujira1xe0awk5planmtsmjel5xtx2hzhqdw5p8z66yqd/uaqla\",\n          coinDecimals: 6,\n          coinGeckoId: \"aqualibre\",\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/factory/kujira1xe0awk5planmtsmjel5xtx2hzhqdw5p8z66yqd/AQLA.png\",\n        },\n      ],\n      feeCurrencies: [\n        {\n          coinDenom: \"KUJI\",\n          coinMinimalDenom: \"ukuji\",\n          coinDecimals: 6,\n          coinGeckoId: \"kujira\",\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/ukuji.png\",\n        },\n        {\n          coinDenom: \"USK\",\n          coinMinimalDenom:\n            \"factory/kujira1qk00h5atutpsv900x202pxx42npjr9thg58dnqpa72f2p7m2luase444a7/uusk\",\n          coinDecimals: 6,\n          coinGeckoId: \"usk\",\n        },\n        {\n          coinDenom: \"axlUSDC\",\n          coinMinimalDenom: \"ibc/295548A78785A1007F232DE286149A6FF512F180AF5657780FC89C009E2C348F\",\n          coinDecimals: 6,\n          coinGeckoId: \"usd-coin\",\n        },\n        {\n          coinDenom: \"ATOM\",\n          coinMinimalDenom: \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\",\n          coinDecimals: 6,\n          coinGeckoId: \"cosmos\",\n        },\n        {\n          coinDenom: \"OSMO\",\n          coinMinimalDenom: \"ibc/47BD209179859CDE4A2806763D7189B6E6FE13A17880FE2B42DE1E6C1E329E23\",\n          coinDecimals: 6,\n          coinGeckoId: \"osmosis\",\n        },\n        {\n          coinDenom: \"CMDX\",\n          coinMinimalDenom: \"ibc/3607EB5B5E64DD1C0E12E07F077FF470D5BC4706AFCBC98FE1BA960E5AE4CE07\",\n          coinDecimals: 6,\n          coinGeckoId: \"comdex\",\n        },\n        {\n          coinDenom: \"EVMOS\",\n          coinMinimalDenom: \"ibc/F3AA7EF362EC5E791FE78A0F4CCC69FEE1F9A7485EB1A8CAB3F6601C00522F10\",\n          coinDecimals: 6,\n          coinGeckoId: \"evmos\",\n        },\n        {\n          coinDenom: \"JUNO\",\n          coinMinimalDenom: \"ibc/EFF323CC632EC4F747C61BCE238A758EFDB7699C3226565F7C20DA06509D59A5\",\n          coinDecimals: 6,\n          coinGeckoId: \"juno-network\",\n        },\n        {\n          coinDenom: \"MNTA\",\n          coinMinimalDenom: \"factory/kujira1643jxg8wasy5cfcn7xm8rd742yeazcksqlg4d7/umnta\",\n          coinDecimals: 6,\n          coinGeckoId: \"mantadao\",\n        },\n        {\n          coinDenom: \"SCRT\",\n          coinMinimalDenom: \"ibc/A358D7F19237777AF6D8AD0E0F53268F8B18AE8A53ED318095C14D6D7F3B2DB5\",\n          coinDecimals: 6,\n          coinGeckoId: \"secret\",\n        },\n        {\n          coinDenom: \"STARS\",\n          coinMinimalDenom: \"ibc/4F393C3FCA4190C0A6756CE7F6D897D5D1BE57D6CCB80D0BC87393566A7B6602\",\n          coinDecimals: 6,\n          coinGeckoId: \"stargaze\",\n        },\n        {\n          coinDenom: \"wAVAX\",\n          coinMinimalDenom: \"ibc/004EBF085BBED1029326D56BE8A2E67C08CECE670A94AC1947DF413EF5130EB2\",\n          coinDecimals: 18,\n          coinGeckoId: \"avalanche-2\",\n        },\n        {\n          coinDenom: \"wETH\",\n          coinMinimalDenom: \"ibc/1B38805B1C75352B28169284F96DF56BDEBD9E8FAC005BDCC8CF0378C82AA8E7\",\n          coinDecimals: 18,\n          coinGeckoId: \"ethereum\",\n        },\n      ],\n      stakeCurrency: {\n        coinDenom: \"KUJI\",\n        coinMinimalDenom: \"ukuji\",\n        coinDecimals: 6,\n        coinGeckoId: \"kujira\",\n        coinImageUrl:\n          \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/kaiyo/ukuji.png\",\n      },\n      features: [\"cosmwasm\"],\n    },\n  ],\n  [\n    ChainId.THORChain,\n    {\n      chainId: \"thorchain-1\",\n      chainName: \"THORChain\",\n      chainSymbolImageUrl:\n        \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/thorchain/chain.png\",\n      rpc: \"https://rpc-thorchain.keplr.app\",\n      rest: \"https://lcd-thorchain.keplr.app\",\n      bip44: {\n        coinType: 931,\n      },\n      bech32Config: {\n        bech32PrefixAccAddr: \"thor\",\n        bech32PrefixAccPub: \"thorpub\",\n        bech32PrefixValAddr: \"thorvaloper\",\n        bech32PrefixValPub: \"thorvaloperpub\",\n        bech32PrefixConsAddr: \"thorvalcons\",\n        bech32PrefixConsPub: \"thorvalconspub\",\n      },\n      currencies: [\n        {\n          coinDenom: \"RUNE\",\n          coinMinimalDenom: \"rune\",\n          coinDecimals: 8,\n          coinGeckoId: \"thorchain\",\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/thorchain/rune.png\",\n        },\n      ],\n      feeCurrencies: [\n        {\n          coinDenom: \"RUNE\",\n          coinMinimalDenom: \"rune\",\n          coinDecimals: 8,\n          coinGeckoId: \"thorchain\",\n          coinImageUrl:\n            \"https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/thorchain/rune.png\",\n          gasPriceStep: {\n            low: 0.02,\n            average: 0.02,\n            high: 0.03,\n          },\n        },\n      ],\n      features: [],\n    },\n  ],\n]);\n"
  ],
  "mappings": "0lBACA,gBAEE,aACA,oBACA,kBAEA,2BAEA,4BACA,yBCTF,kBAAS,yBAEF,IAAM,EAAgB,IAAI,IAAwB,CACvD,CACE,EAAQ,OACR,CACE,QAAS,UACT,UAAW,SACX,oBACE,gGACF,IAAK,2CACL,KAAM,wCACN,aAAc,CACZ,KAAM,MACN,MAAO,+BACP,QAAS,mBACX,EACA,MAAO,CACL,SAAU,GACZ,EACA,aAAc,CACZ,oBAAqB,SACrB,mBAAoB,YACpB,oBAAqB,gBACrB,mBAAoB,mBACpB,qBAAsB,gBACtB,oBAAqB,kBACvB,EACA,WAAY,CACV,CACE,UAAW,OACX,iBAAkB,QAClB,aAAc,EACd,YAAa,SACb,aACE,+FACJ,EACA,CACE,UAAW,MACX,iBACE,iFACF,aAAc,EACd,YAAa,KACf,EACA,CACE,UAAW,OACX,iBAAkB,8DAClB,aAAc,EACd,YAAa,UACf,EACA,CACE,UAAW,QACX,iBACE,qFACF,aAAc,EACd,aACE,yKACJ,EACA,CACE,UAAW,OACX,iBAAkB,8DAClB,aAAc,EACd,YAAa,YACb,aACE,oJACJ,CACF,EACA,cAAe,CACb,CACE,UAAW,OACX,iBAAkB,QAClB,aAAc,EACd,YAAa,SACb,aACE,+FACJ,EACA,CACE,UAAW,MACX,iBACE,iFACF,aAAc,EACd,YAAa,KACf,EACA,CACE,UAAW,UACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,UACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,QACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,SACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,QACf,EACA,CACE,UAAW,QACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,OACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,cACf,EACA,CACE,UAAW,OACX,iBAAkB,8DAClB,aAAc,EACd,YAAa,UACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,QACf,EACA,CACE,UAAW,QACX,iBAAkB,uEAClB,aAAc,EACd,YAAa,UACf,EACA,CACE,UAAW,QACX,iBAAkB,uEAClB,aAAc,GACd,YAAa,aACf,EACA,CACE,UAAW,OACX,iBAAkB,uEAClB,aAAc,GACd,YAAa,UACf,CACF,EACA,cAAe,CACb,UAAW,OACX,iBAAkB,QAClB,aAAc,EACd,YAAa,SACb,aACE,+FACJ,EACA,SAAU,CAAC,UAAU,CACvB,CACF,EACA,CACE,EAAQ,UACR,CACE,QAAS,cACT,UAAW,YACX,oBACE,oGACF,IAAK,kCACL,KAAM,kCACN,MAAO,CACL,SAAU,GACZ,EACA,aAAc,CACZ,oBAAqB,OACrB,mBAAoB,UACpB,oBAAqB,cACrB,mBAAoB,iBACpB,qBAAsB,cACtB,oBAAqB,gBACvB,EACA,WAAY,CACV,CACE,UAAW,OACX,iBAAkB,OAClB,aAAc,EACd,YAAa,YACb,aACE,kGACJ,CACF,EACA,cAAe,CACb,CACE,UAAW,OACX,iBAAkB,OAClB,aAAc,EACd,YAAa,YACb,aACE,mGACF,aAAc,CACZ,IAAK,KACL,QAAS,KACT,KAAM,IACR,CACF,CACF,EACA,SAAU,CAAC,CACb,CACF,CACF,CAAC,ED5LD,IAAM,EAAyB,CAAC,EAAQ,OAAQ,EAAQ,OAAQ,EAAQ,SAAS,EAC3E,EAAyB,CAAC,EAAM,OAAQ,EAAM,OAAQ,EAAM,SAAS,EAI3E,SAAS,CAAY,EACnB,WACA,QAAU,mBAGR,CACF,OAAO,eAAe,CAAY,CAAC,EAAiB,EAAiC,QAAS,CAC5F,IAAM,EAAa,IAAiB,QAAU,EAAa,MAAQ,EAAa,KAC1E,EAAkB,EAAsB,EAAQ,EAAwB,CAAU,EAExF,EAAuB,CAAE,OAAQ,CAAe,CAAC,EACjD,IAAM,EAAc,OAAO,GAErB,EAAkB,EAAgB,IAAI,MAAO,IAAU,CAC3D,IAAM,EAAU,EAAe,GAE/B,IAAK,EAAuB,SAAS,CAAO,EAAG,CAC7C,IAAM,EAAc,EAAc,IAAI,CAAO,EAC7C,IAAK,EAAa,MAAM,IAAI,MAAM,qBAAqB,GAAO,EAC9D,MAAM,EAAY,yBAAyB,CAAW,EAGxD,GAAa,OAAO,CAAO,EAC3B,IAAM,EAAgB,GAAa,0BAA0B,EAAS,CACpE,eAAgB,IAAU,EAAM,SAClC,CAAC,EACD,IAAK,EAAe,MAAM,IAAI,MAAM,8BAA8B,EAClE,IAAQ,qBAAsB,KAAa,mCAErC,EAAW,MAAM,EAAc,YAAY,EAEjD,IAAK,IAAW,IAAI,QAAS,MAAM,IAAI,MAAM,mBAAmB,EAChE,KAAS,YAAa,EAEhB,EAAU,EAAkB,CAAK,EAAE,EAEnC,EAAW,CAAC,IAMhB,EAAQ,SAAS,IACZ,EACH,OAAQ,EACR,IAAK,EACL,KAAM,EAAO,MAAQ,CACvB,CAAC,EAEG,EACJ,IAAU,EAAM,UACZ,CACE,QAAS,CAAC,IAKP,EAAiC,QAAQ,IACrC,EACH,OAAQ,EACR,KAAM,EAAO,MAAQ,EACrB,KAAM,EAAO,MAAQ,EACvB,CAAC,CACL,EACA,CAAC,EAEP,EAAS,IACJ,KACA,EACH,QACA,WACA,UACA,QAAS,CAAC,EACV,YACF,CAAC,EACF,EAID,OAFA,MAAM,QAAQ,IAAI,CAAe,EAE1B,IAIJ,IAAM,EAAc,CAAE,cAAa",
  "debugId": "055AE22618088A8164756E2164756E21",
  "names": []
}