import{GatewayApiClient as _}from"@radixdlt/babylon-gateway-api-sdk";import{DataRequestBuilder as $,RadixDappToolkit as q}from"@radixdlt/radix-dapp-toolkit";import{AssetValue as M,Chain as X,WalletOption as N,setRequestClientConfig as x}from"@swapkit/helpers";var Y={networkId:1,networkName:"mainnet",dashboardBase:"https://dashboard.radixdlt.com"};async function B({address:j,networkApi:z}){let H=!0,O=void 0,L=[],G=await I(z);while(H){let U={address:j,limit_per_page:100,cursor:O,at_ledger_state:{state_version:G}},T=await z.state.innerClient.entityFungiblesPage({stateEntityFungiblesPageRequest:U});if(L=L.concat(T.items),T.next_cursor)O=T.next_cursor;else H=!1}return L}async function I(j){return j.status.getCurrent().then((z)=>z.ledger_state.state_version)}function K({networkApi:j}){return async function z(H){let O=await B({address:H,networkApi:j});return S({resources:O,networkApi:j})}}async function S({resources:j,networkApi:z}){let H=[],O=50,L=[];for(let G=0;G<j.length;G+=50)L.push(j.slice(G,G+50));for(let G of L){let U=G.map((W)=>W.resource_address),T=await z.state.getEntityDetailsVaultAggregated(U),J=new Map;for(let W of T)if(W.details!==void 0){let Q=W.metadata?.items.find((Z)=>Z.key==="symbol"),V=Q?.value.typed.type==="String"?Q.value.typed.value:"?";if(W.details.type==="FungibleResource")J.set(W.address,{decimals:W.details.divisibility,symbol:V})}for(let W of G)if(W.aggregation_level==="Global"){let Q=J.get(W.resource_address)||{decimals:0,symbol:"?"},V=M.from({asset:Q.symbol!==X.Radix?`${X.Radix}.${Q.symbol}-${W.resource_address}`:"XRD.XRD",value:W.amount});H.push(V)}}return H}var v=async(j)=>{let z=q({...j,networkId:j.network.networkId});function H(J){return new Promise((W)=>setTimeout(W,J))}await H(400);let O=()=>{return z.walletApi.getWalletData()?.accounts?.[0]?.address},L=async()=>{z.walletApi.setRequestData($.accounts().exactly(1));let J=await z.walletApi.sendRequest();if(!J)throw new Error("wallet_radix_no_account");let W=J.unwrapOr(null)?.accounts[0]?.address;if(!W)throw new Error("wallet_radix_no_account");return W},U=await(async()=>await O()||await L())(),T=_.initialize({networkId:Y.networkId,applicationName:j.applicationName});return{radixDappToolkit:z,address:U,getBalance:()=>K({networkApi:T})(U),transfer:(J)=>{throw new Error("Not implemented")},signAndBroadcast:async({manifest:J,message:W})=>{let Q=(await z.walletApi.sendTransaction({transactionManifest:J,message:W})).unwrapOr(null)?.transactionIntentHash;if(!Q)throw new Error("wallet_radix_transaction_failed");return Q},getAddress:O}};function D({addChain:j,config:{thorswapApiKey:z,radixDappConfig:H={network:Y,dAppDefinitionAddress:"account_rdx128r289p58222hcvev7frs6kue76pl7pdcnw8725aw658v0zggkh9ws",applicationName:"Swapkit Playground",applicationVersion:"0.0.1"}}}){return async function O(L){x({apiKey:z});let G=await v({...H});return j({chain:X.Radix,balance:[],walletType:N.RADIX_WALLET,...G}),!0}}var E={connectRadixWallet:D};export{E as radixWallet};

//# debugId=8BD76760ED2300F864756E2164756E21
