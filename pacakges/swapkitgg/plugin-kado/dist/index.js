import{Chain as c}from"@swapkit/helpers";var _={thorchain:c.THORChain,solana:c.Solana,polygon:c.Polygon,Optimism:c.Optimism,litecoin:c.Litecoin,kujira:c.Kujira,ethereum:c.Ethereum,"cosmos hub":c.Cosmos,bitcoin:c.Bitcoin,base:c.Base,Avalanche:c.Avalanche,Arbitrum:c.Arbitrum},I=(r)=>{let m=Object.entries(_).find(([b,d])=>d===r);if(!m)throw new Error(`Chain ${r} not supported`);return m[0]},P=(r)=>{if(!Object.keys(_).includes(r))throw new Error(`KadoChain ${r} not supported`);return _[r]};import{AssetValue as D,Chain as u,FeeTypeEnum as K,ProviderName as g,RequestClient as F,blockTimes as O}from"@swapkit/helpers";function M({quote:r,sellAsset:t,buyAsset:m}){let b=t.chain===u.Fiat,d=m.set(b?r.data.quote.receive.unitCount.toString():r.data.quote.receive.amount.toString()),f=b?Math.round(r.data.quote.totalFee.amount/r.data.quote.receive.amount*1e4):Math.round(r.data.quote.totalFee.amount/(r.data.quote.price.price*r.data.quote.baseAmount.amount)*1e4),C=t.chain,x=m.chain,n=Math.ceil(O[C]*3),i=Math.ceil(60),o=Math.ceil(O[x]),a=[{providers:[g.KADO],sellAsset:t.toString(),sellAmount:t.getValue("string"),buyAsset:m.toString(),expectedBuyAmount:d.getValue("string"),expectedBuyAmountMaxSlippage:d.getValue("string"),sourceAddress:"{sourceAddress}",destinationAddress:"{destinationAddress}",fees:[{asset:r.data.quote.processingFee.currency,amount:r.data.quote.processingFee.amount.toString(),type:K.LIQUIDITY,protocol:g.KADO,chain:u.Fiat},{asset:r.data.quote.networkFee.currency,amount:r.data.quote.networkFee.amount.toString(),type:K.NETWORK,protocol:g.KADO,chain:m.chain}],totalSlippageBps:f,legs:[{provider:g.KADO,sellAsset:t.toString(),sellAmount:t.getValue("string"),buyAsset:m.toString(),buyAmount:r.data.quote.receive.unitCount.toString(),buyAmountMaxSlippage:r.data.quote.receive.unitCount.toString(),fees:[{asset:r.data.quote.processingFee.currency,amount:r.data.quote.processingFee.amount.toString(),type:K.LIQUIDITY,protocol:g.KADO,chain:u.Fiat},{asset:r.data.quote.networkFee.currency,amount:r.data.quote.networkFee.amount.toString(),type:K.NETWORK,protocol:g.KADO,chain:m.chain}]}],warnings:[],meta:{tags:[]},estimatedTime:{inbound:n,swap:i,outbound:o,total:n+i+o}}];return{quoteId:crypto.randomUUID(),routes:a,error:r.success?void 0:r.message}}function U({config:{kadoApiKey:r}}){async function t({sellAsset:n,buyAsset:i,fiatMethod:o="credit_card"}){try{let a=n.chain===u.Fiat,p=a?"buy":"sell",h=a?n.symbol:i.symbol,S=a?i:n,k={transactionType:p,fiatMethod:o,partner:"fortress",amount:n.getValue("string"),asset:S.symbol,blockchain:I(S.chain),currency:h},R=await F.get("https://api.kado.money/v2/ramp/quote",{searchParams:k,headers:{"X-Widget-Id":r}});if(!R.success)throw new Error(R.message);return M({quote:R,sellAsset:n,buyAsset:i})}catch(a){throw new Error("core_swap_quote_error")}}async function m(){let n=await F.get("https://api.kado.money/v1/ramp/blockchains");if(!n.success)throw new Error(n.message);return n.data.blockchains}async function b(){let n=await F.get("https://api.kado.money/v1/ramp/supported-assets");if(!n.success)throw new Error(n.message);return n.data.assets}async function d(n){try{let i=await F.get(`https://api.kado.money/v2/public/orders/${n}`,{headers:{"X-Widget-Id":r}});if(!i.success)throw new Error(i.message);return i.data.order}catch(i){throw new Error("Failed to get order status")}}function f({sellAsset:n,buyAsset:i,recipient:o,type:a,sender:p,widgetMode:h}){return`https://app.kado.money/?${new URLSearchParams({apiKey:r,...a==="buy"?{onPayAmount:n.getValue("string"),onPayCurrency:n.symbol,onRevCurrency:i.symbol,...o?{onToAddress:o}:{}}:{offPayAmount:n.getValue("string"),offPayCurrency:n.symbol,offRevCurrency:i.symbol,...p?{offFromAddress:p}:{}},network:I(a==="buy"?i.chain:n.chain).toUpperCase(),product:a.toUpperCase(),mode:h}).toString()}`}function C(n){let i=document.createElement("div");i.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    `;let o=document.createElement("iframe");return o.src=n,o.style.cssText=`
      width: 440px;
      height: 700px;
      border: none;
      border-radius: 12px;
      background: white;
    `,i.appendChild(o),document.body.appendChild(i),i.addEventListener("click",(a)=>{if(a.target===i)document.body.removeChild(i)}),i}function x({route:n}){if(!(n.sourceAddress&&n.destinationAddress))throw new Error("Source and destination addresses are required");let i=D.from({asset:n.sellAsset}),o=D.from({asset:n.buyAsset}),a=i.chain===u.Fiat?"buy":"sell",p=f({sellAsset:i,buyAsset:o,recipient:n.destinationAddress,sender:n.sourceAddress,type:a,widgetMode:"minimal"});return C(p),{status:"pending",txHash:null}}return{fetchProviderQuote:t,getBlockchains:m,getAssets:b,getOrderStatus:d,getKadoWidgetUrl:f,createPopover:C,swap:x,supportedSwapkitProviders:[g.KADO]}}var B={kado:{plugin:U}};var H=["USD","CAD","GBP","EUR","MXN","COP","INR","CHF","AUD","ARS","BRL","CLP","JPY","KRW","PEN","PHP","SGD","TRY","UYU","TWD","VND","CRC","SEK","PLN","DKK","NOK","NZD"];export{_ as SupportedKadoChain,H as KadoSupportedFiatCurrencies,B as KadoPlugin,P as KadoChainToChain,I as ChainToKadoChain};

//# debugId=665F0B1F3C8D95C464756E2164756E21
